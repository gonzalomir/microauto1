

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sat May 18 06:47:34 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F628A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.05
    20                           ; Generated 20/12/2018 GMT
    21                           ; 
    22                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F628A Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0015                     	;# 
    70  0015                     	;# 
    71  0016                     	;# 
    72  0017                     	;# 
    73  0018                     	;# 
    74  0019                     	;# 
    75  001A                     	;# 
    76  001F                     	;# 
    77  0081                     	;# 
    78  0085                     	;# 
    79  0086                     	;# 
    80  008C                     	;# 
    81  008E                     	;# 
    82  0092                     	;# 
    83  0098                     	;# 
    84  0099                     	;# 
    85  009A                     	;# 
    86  009B                     	;# 
    87  009C                     	;# 
    88  009D                     	;# 
    89  009F                     	;# 
    90  0000                     	;# 
    91  0001                     	;# 
    92  0002                     	;# 
    93  0003                     	;# 
    94  0004                     	;# 
    95  0005                     	;# 
    96  0006                     	;# 
    97  000A                     	;# 
    98  000B                     	;# 
    99  000C                     	;# 
   100  000E                     	;# 
   101  000E                     	;# 
   102  000F                     	;# 
   103  0010                     	;# 
   104  0011                     	;# 
   105  0012                     	;# 
   106  0015                     	;# 
   107  0015                     	;# 
   108  0016                     	;# 
   109  0017                     	;# 
   110  0018                     	;# 
   111  0019                     	;# 
   112  001A                     	;# 
   113  001F                     	;# 
   114  0081                     	;# 
   115  0085                     	;# 
   116  0086                     	;# 
   117  008C                     	;# 
   118  008E                     	;# 
   119  0092                     	;# 
   120  0098                     	;# 
   121  0099                     	;# 
   122  009A                     	;# 
   123  009B                     	;# 
   124  009C                     	;# 
   125  009D                     	;# 
   126  009F                     	;# 
   127  0000                     	;# 
   128  0001                     	;# 
   129  0002                     	;# 
   130  0003                     	;# 
   131  0004                     	;# 
   132  0005                     	;# 
   133  0006                     	;# 
   134  000A                     	;# 
   135  000B                     	;# 
   136  000C                     	;# 
   137  000E                     	;# 
   138  000E                     	;# 
   139  000F                     	;# 
   140  0010                     	;# 
   141  0011                     	;# 
   142  0012                     	;# 
   143  0015                     	;# 
   144  0015                     	;# 
   145  0016                     	;# 
   146  0017                     	;# 
   147  0018                     	;# 
   148  0019                     	;# 
   149  001A                     	;# 
   150  001F                     	;# 
   151  0081                     	;# 
   152  0085                     	;# 
   153  0086                     	;# 
   154  008C                     	;# 
   155  008E                     	;# 
   156  0092                     	;# 
   157  0098                     	;# 
   158  0099                     	;# 
   159  009A                     	;# 
   160  009B                     	;# 
   161  009C                     	;# 
   162  009D                     	;# 
   163  009F                     	;# 
   164                           
   165                           	psect	idataBANK0
   166  054D                     __pidataBANK0:	
   167                           
   168                           ;initializer for main@F673
   169  054D  3406               	retlw	6
   170  054E  3400               	retlw	0
   171  054F  341A               	retlw	26
   172  0550  342C               	retlw	44
   173  0551  343E               	retlw	62
   174  0005                     _PORTA	set	5
   175  0006                     _PORTB	set	6
   176  0086                     _TRISB	set	134
   177  0085                     _TRISA	set	133
   178                           
   179                           	psect	strings
   180  0001                     __pstrings:	
   181  0001                     stringtab:	
   182  0001                     __stringtab:	
   183  0001                     stringcode:	
   184                           ;	String table - string pointers are 1 byte each
   185                           
   186  0001                     stringdir:	
   187  0001  3000               	movlw	high stringdir
   188  0002  008A               	movwf	10
   189  0003  0804               	movf	4,w
   190  0004  0A84               	incf	4,f
   191  0005  0782               	addwf	2,f
   192  0006                     __stringbase:	
   193  0006  3400               	retlw	0
   194  0007                     __end_of__stringtab:	
   195  0007                     STR_1:	
   196  0007  3449               	retlw	73	;'I'
   197  0008  3443               	retlw	67	;'C'
   198  0009  3445               	retlw	69	;'E'
   199  000A  3449               	retlw	73	;'I'
   200  000B  3420               	retlw	32	;' '
   201  000C  344D               	retlw	77	;'M'
   202  000D  3469               	retlw	105	;'i'
   203  000E  3463               	retlw	99	;'c'
   204  000F  3472               	retlw	114	;'r'
   205  0010  346F               	retlw	111	;'o'
   206  0011  3420               	retlw	32	;' '
   207  0012  3420               	retlw	32	;' '
   208  0013  3400               	retlw	0
   209                           
   210                           	psect	cinit
   211  07EF                     start_initialization:	
   212                           ; #config settings
   213                           
   214  07EF                     __initialization:	
   215                           
   216                           ; Initialize objects allocated to BANK0
   217  07EF  254D               	fcall	__pidataBANK0	;fetch initializer
   218  07F0  00AF               	movwf	__pdataBANK0& (0+127)
   219  07F1  254E               	fcall	__pidataBANK0+1	;fetch initializer
   220  07F2  00B0               	movwf	(__pdataBANK0+1)& (0+127)
   221  07F3  254F               	fcall	__pidataBANK0+2	;fetch initializer
   222  07F4  00B1               	movwf	(__pdataBANK0+2)& (0+127)
   223  07F5  2550               	fcall	__pidataBANK0+3	;fetch initializer
   224  07F6  00B2               	movwf	(__pdataBANK0+3)& (0+127)
   225  07F7  2551               	fcall	__pidataBANK0+4	;fetch initializer
   226  07F8  00B3               	movwf	(__pdataBANK0+4)& (0+127)
   227                           
   228                           ; Clear objects allocated to BANK0
   229  07F9  01AA               	clrf	__pbssBANK0& (0+127)
   230  07FA  01AB               	clrf	(__pbssBANK0+1)& (0+127)
   231  07FB  01AC               	clrf	(__pbssBANK0+2)& (0+127)
   232  07FC  01AD               	clrf	(__pbssBANK0+3)& (0+127)
   233  07FD  01AE               	clrf	(__pbssBANK0+4)& (0+127)
   234  07FE                     end_of_initialization:	
   235                           ;End of C runtime variable initialization code
   236                           
   237  07FE                     __end_of__initialization:	
   238  07FE  0183               	clrf	3
   239  07FF  2DBF               	ljmp	_main	;jump to C main() function
   240                           
   241                           	psect	bssBANK0
   242  002A                     __pbssBANK0:	
   243  002A                     _lcd:	
   244  002A                     	ds	5
   245                           
   246                           	psect	dataBANK0
   247  002F                     __pdataBANK0:	
   248  002F                     main@F673:	
   249  002F                     	ds	5
   250                           
   251                           	psect	cstackCOMMON
   252  0070                     __pcstackCOMMON:	
   253  0070                     ?_LCD_Write:	
   254  0070                     ?_LCD_putrs:	
   255                           ; 1 bytes @ 0x0
   256                           
   257  0070                     ?_LCD_putc:	
   258                           ; 1 bytes @ 0x0
   259                           
   260  0070                     ?_main:	
   261                           ; 1 bytes @ 0x0
   262                           
   263  0070                     ?_LCD_Out:	
   264                           ; 1 bytes @ 0x0
   265                           
   266  0070                     ??_LCD_Out:	
   267                           ; 1 bytes @ 0x0
   268                           
   269                           
   270                           ; 1 bytes @ 0x0
   271  0070                     	ds	3
   272  0073                     LCD_Out@c:	
   273                           
   274                           ; 1 bytes @ 0x3
   275  0073                     	ds	1
   276  0074                     ??_LCD_Write:	
   277  0074                     ??_LCD_putc:	
   278                           ; 1 bytes @ 0x4
   279                           
   280                           
   281                           ; 1 bytes @ 0x4
   282  0074                     	ds	3
   283  0077                     LCD_Write@c:	
   284  0077                     LCD_putc@c:	
   285                           ; 1 bytes @ 0x7
   286                           
   287                           
   288                           ; 1 bytes @ 0x7
   289  0077                     	ds	1
   290  0078                     ?_LCD_Init:	
   291  0078                     ??_LCD_putrs:	
   292                           ; 1 bytes @ 0x8
   293                           
   294  0078                     LCD_putrs@i:	
   295                           ; 1 bytes @ 0x8
   296                           
   297  0078                     LCD_Init@display:	
   298                           ; 2 bytes @ 0x8
   299                           
   300                           
   301                           ; 5 bytes @ 0x8
   302  0078                     	ds	2
   303  007A                     LCD_putrs@a:	
   304                           
   305                           ; 1 bytes @ 0xA
   306  007A                     	ds	3
   307  007D                     LCD_Init@cmd:	
   308                           
   309                           ; 1 bytes @ 0xD
   310  007D                     	ds	1
   311                           
   312                           	psect	cstackBANK0
   313  0020                     __pcstackBANK0:	
   314  0020                     ??_LCD_Init:	
   315                           
   316                           ; 1 bytes @ 0x0
   317  0020                     	ds	2
   318  0022                     ??_main:	
   319                           
   320                           ; 1 bytes @ 0x2
   321  0022                     	ds	2
   322  0024                     main@lcd:	
   323                           
   324                           ; 5 bytes @ 0x4
   325  0024                     	ds	5
   326  0029                     main@c:	
   327                           
   328                           ; 1 bytes @ 0x9
   329  0029                     	ds	1
   330                           
   331                           	psect	maintext
   332  05BF                     __pmaintext:	
   333 ;;
   334 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   335 ;;
   336 ;; *************** function _main *****************
   337 ;; Defined at:
   338 ;;		line 10 in file "main.c"
   339 ;; Parameters:    Size  Location     Type
   340 ;;		None
   341 ;; Auto vars:     Size  Location     Type
   342 ;;  c               1    9[BANK0 ] unsigned char 
   343 ;;  lcd             5    4[BANK0 ] struct .
   344 ;; Return value:  Size  Location     Type
   345 ;;                  1    wreg      void 
   346 ;; Registers used:
   347 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   348 ;; Tracked objects:
   349 ;;		On entry : B00/0
   350 ;;		On exit  : 0/0
   351 ;;		Unchanged: 0/0
   352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   353 ;;      Params:         0       0       0       0
   354 ;;      Locals:         0       6       0       0
   355 ;;      Temps:          0       2       0       0
   356 ;;      Totals:         0       8       0       0
   357 ;;Total ram usage:        8 bytes
   358 ;; Hardware stack levels required when called:    3
   359 ;; This function calls:
   360 ;;		_LCD_Init
   361 ;;		_LCD_Write
   362 ;;		_LCD_putc
   363 ;;		_LCD_putrs
   364 ;; This function is called by:
   365 ;;		Startup code after reset
   366 ;; This function uses a non-reentrant model
   367 ;;
   368                           
   369                           
   370                           ;psect for function _main
   371  05BF                     _main:	
   372                           
   373                           ;main.c: 11:     LCD lcd = { &PORTB, 2, 3, 4, 5, 6, 7 };
   374                           
   375                           ;incstack = 0
   376                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   377  05BF  3024               	movlw	main@lcd& (0+255)
   378  05C0  0084               	movwf	4
   379  05C1  1283               	bcf	3,5	;RP0=0, select bank0
   380  05C2  1303               	bcf	3,6	;RP1=0, select bank0
   381  05C3  082F               	movf	main@F673,w
   382  05C4  1383               	bcf	3,7	;select IRP bank0
   383  05C5  0080               	movwf	0
   384  05C6  0A84               	incf	4,f
   385  05C7  0830               	movf	main@F673+1,w
   386  05C8  0080               	movwf	0
   387  05C9  0A84               	incf	4,f
   388  05CA  0831               	movf	main@F673+2,w
   389  05CB  0080               	movwf	0
   390  05CC  0A84               	incf	4,f
   391  05CD  0832               	movf	main@F673+3,w
   392  05CE  0080               	movwf	0
   393  05CF  0A84               	incf	4,f
   394  05D0  0833               	movf	main@F673+4,w
   395  05D1  0080               	movwf	0
   396                           
   397                           ;main.c: 13:     LCD_Init(lcd);
   398  05D2  3078               	movlw	LCD_Init@display& (0+255)
   399  05D3  0084               	movwf	4
   400  05D4  0824               	movf	main@lcd,w
   401  05D5  0080               	movwf	0
   402  05D6  0A84               	incf	4,f
   403  05D7  0825               	movf	main@lcd+1,w
   404  05D8  0080               	movwf	0
   405  05D9  0A84               	incf	4,f
   406  05DA  0826               	movf	main@lcd+2,w
   407  05DB  0080               	movwf	0
   408  05DC  0A84               	incf	4,f
   409  05DD  0827               	movf	main@lcd+3,w
   410  05DE  0080               	movwf	0
   411  05DF  0A84               	incf	4,f
   412  05E0  0828               	movf	main@lcd+4,w
   413  05E1  0080               	movwf	0
   414  05E2  261A               	fcall	_LCD_Init
   415  05E3                     l976:	
   416  05E3  3000               	movlw	0
   417  05E4  2568               	fcall	_LCD_Write
   418  05E5  3001               	movlw	1
   419  05E6  2568               	fcall	_LCD_Write
   420  05E7  3008               	movlw	8
   421  05E8  2568               	fcall	_LCD_Write
   422  05E9  3000               	movlw	0
   423  05EA  2568               	fcall	_LCD_Write
   424                           
   425                           ;main.c: 18:         LCD_putrs("ICEI Micro  ");
   426  05EB  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   427  05EC  2552               	fcall	_LCD_putrs
   428  05ED  300C               	movlw	12
   429  05EE  2568               	fcall	_LCD_Write
   430  05EF  3000               	movlw	0
   431  05F0  2568               	fcall	_LCD_Write
   432                           
   433                           ;main.c: 21:   for ( char c = 'A'; c < 'Q'; ++c ) {
   434  05F1  3041               	movlw	65
   435  05F2  1283               	bcf	3,5	;RP0=0, select bank0
   436  05F3  1303               	bcf	3,6	;RP1=0, select bank0
   437  05F4  00A2               	movwf	??_main
   438  05F5  0822               	movf	??_main,w
   439  05F6  00A9               	movwf	main@c
   440  05F7                     l1004:	
   441                           
   442                           ;main.c: 22:     LCD_putc(c);
   443  05F7  0829               	movf	main@c,w
   444  05F8  2697               	fcall	_LCD_putc
   445                           
   446                           ;main.c: 23:     _delay((unsigned long)((100)*(4000000/4000.0)));
   447  05F9  3082               	movlw	130
   448  05FA  1283               	bcf	3,5	;RP0=0, select bank0
   449  05FB  1303               	bcf	3,6	;RP1=0, select bank0
   450  05FC  00A3               	movwf	??_main+1
   451  05FD  30DD               	movlw	221
   452  05FE  00A2               	movwf	??_main
   453  05FF                     u577:	
   454  05FF  0BA2               	decfsz	??_main,f
   455  0600  2DFF               	goto	u577
   456  0601  0BA3               	decfsz	??_main+1,f
   457  0602  2DFF               	goto	u577
   458  0603  0000               	nop
   459                           
   460                           ;main.c: 24:   }
   461  0604  3001               	movlw	1
   462  0605  1283               	bcf	3,5	;RP0=0, select bank0
   463  0606  1303               	bcf	3,6	;RP1=0, select bank0
   464  0607  00A2               	movwf	??_main
   465  0608  0822               	movf	??_main,w
   466  0609  07A9               	addwf	main@c,f
   467  060A  3051               	movlw	81
   468  060B  0229               	subwf	main@c,w
   469  060C  1C03               	skipc
   470  060D  2DF7               	goto	l1004
   471                           
   472                           ;main.c: 25:         _delay((unsigned long)((100)*(4000000/4000.0)));
   473  060E  3082               	movlw	130
   474  060F  1283               	bcf	3,5	;RP0=0, select bank0
   475  0610  1303               	bcf	3,6	;RP1=0, select bank0
   476  0611  00A3               	movwf	??_main+1
   477  0612  30DD               	movlw	221
   478  0613  00A2               	movwf	??_main
   479  0614                     u587:	
   480  0614  0BA2               	decfsz	??_main,f
   481  0615  2E14               	goto	u587
   482  0616  0BA3               	decfsz	??_main+1,f
   483  0617  2E14               	goto	u587
   484  0618  0000               	nop
   485                           
   486                           ;main.c: 26:  }
   487  0619  2DE3               	goto	l976
   488  061A                     __end_of_main:	
   489                           
   490                           	psect	text1
   491  0552                     __ptext1:	
   492 ;; *************** function _LCD_putrs *****************
   493 ;; Defined at:
   494 ;;		line 144 in file "lcd.c"
   495 ;; Parameters:    Size  Location     Type
   496 ;;  a               1    wreg     PTR const unsigned char 
   497 ;;		 -> STR_1(13), 
   498 ;; Auto vars:     Size  Location     Type
   499 ;;  a               1   10[COMMON] PTR const unsigned char 
   500 ;;		 -> STR_1(13), 
   501 ;;  i               2    8[COMMON] int 
   502 ;; Return value:  Size  Location     Type
   503 ;;                  1    wreg      void 
   504 ;; Registers used:
   505 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   506 ;; Tracked objects:
   507 ;;		On entry : 0/0
   508 ;;		On exit  : 0/0
   509 ;;		Unchanged: 0/0
   510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   511 ;;      Params:         0       0       0       0
   512 ;;      Locals:         3       0       0       0
   513 ;;      Temps:          0       0       0       0
   514 ;;      Totals:         3       0       0       0
   515 ;;Total ram usage:        3 bytes
   516 ;; Hardware stack levels used:    1
   517 ;; Hardware stack levels required when called:    2
   518 ;; This function calls:
   519 ;;		_LCD_putc
   520 ;; This function is called by:
   521 ;;		_main
   522 ;; This function uses a non-reentrant model
   523 ;;
   524                           
   525                           
   526                           ;psect for function _LCD_putrs
   527  0552                     _LCD_putrs:	
   528                           
   529                           ;incstack = 0
   530                           ; Regs used in _LCD_putrs: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   531                           ;LCD_putrs@a stored from wreg
   532  0552  00FA               	movwf	LCD_putrs@a
   533                           
   534                           ;lcd.c: 146:     for ( int i = 0; a[i] != '\0'; ++i ) {
   535  0553  01F8               	clrf	LCD_putrs@i
   536  0554  01F9               	clrf	LCD_putrs@i+1
   537  0555                     l970:	
   538  0555  0878               	movf	LCD_putrs@i,w
   539  0556  077A               	addwf	LCD_putrs@a,w
   540  0557  0084               	movwf	4
   541  0558  2001               	fcall	stringdir
   542  0559  3A00               	xorlw	0
   543  055A  1903               	btfsc	3,2
   544  055B  0008               	return
   545                           
   546                           ;lcd.c: 147:         LCD_putc(a[i]);
   547  055C  0878               	movf	LCD_putrs@i,w
   548  055D  077A               	addwf	LCD_putrs@a,w
   549  055E  0084               	movwf	4
   550  055F  2001               	fcall	stringdir
   551  0560  2697               	fcall	_LCD_putc
   552                           
   553                           ;lcd.c: 148:     }
   554  0561  3001               	movlw	1
   555  0562  07F8               	addwf	LCD_putrs@i,f
   556  0563  1803               	skipnc
   557  0564  0AF9               	incf	LCD_putrs@i+1,f
   558  0565  3000               	movlw	0
   559  0566  07F9               	addwf	LCD_putrs@i+1,f
   560  0567  2D55               	goto	l970
   561  0568                     __end_of_LCD_putrs:	
   562                           
   563                           	psect	text2
   564  0697                     __ptext2:	
   565 ;; *************** function _LCD_putc *****************
   566 ;; Defined at:
   567 ;;		line 119 in file "lcd.c"
   568 ;; Parameters:    Size  Location     Type
   569 ;;  c               1    wreg     unsigned char 
   570 ;; Auto vars:     Size  Location     Type
   571 ;;  c               1    7[COMMON] unsigned char 
   572 ;; Return value:  Size  Location     Type
   573 ;;                  1    wreg      void 
   574 ;; Registers used:
   575 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   576 ;; Tracked objects:
   577 ;;		On entry : 0/0
   578 ;;		On exit  : 0/0
   579 ;;		Unchanged: 0/0
   580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   581 ;;      Params:         0       0       0       0
   582 ;;      Locals:         1       0       0       0
   583 ;;      Temps:          3       0       0       0
   584 ;;      Totals:         4       0       0       0
   585 ;;Total ram usage:        4 bytes
   586 ;; Hardware stack levels used:    1
   587 ;; Hardware stack levels required when called:    1
   588 ;; This function calls:
   589 ;;		_LCD_Out
   590 ;; This function is called by:
   591 ;;		_main
   592 ;;		_LCD_putrs
   593 ;;		_LCD_puts
   594 ;; This function uses a non-reentrant model
   595 ;;
   596                           
   597                           
   598                           ;psect for function _LCD_putc
   599  0697                     _LCD_putc:	
   600                           
   601                           ;incstack = 0
   602                           ; Regs used in _LCD_putc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   603                           ;LCD_putc@c stored from wreg
   604  0697  00F7               	movwf	LCD_putc@c
   605                           
   606                           ;lcd.c: 121:    *(lcd.PORT) |= 1 << lcd.RS;
   607  0698  3001               	movlw	1
   608  0699  00F4               	movwf	??_LCD_putc
   609  069A  1283               	bcf	3,5	;RP0=0, select bank0
   610  069B  1303               	bcf	3,6	;RP1=0, select bank0
   611  069C  082C               	movf	_lcd+2,w
   612  069D  3907               	andlw	7
   613  069E  3E01               	addlw	1
   614  069F  2EA2               	goto	u444
   615  06A0                     u445:	
   616  06A0  1003               	clrc
   617  06A1  0DF4               	rlf	??_LCD_putc,f
   618  06A2                     u444:	
   619  06A2  3EFF               	addlw	-1
   620  06A3  1D03               	skipz
   621  06A4  2EA0               	goto	u445
   622  06A5  0874               	movf	??_LCD_putc,w
   623  06A6  00F5               	movwf	??_LCD_putc+1
   624  06A7  082A               	movf	_lcd,w
   625  06A8  0084               	movwf	4
   626  06A9  1783               	bsf	3,7
   627  06AA  1C2B               	btfss	_lcd+1,0
   628  06AB  1383               	bcf	3,7
   629  06AC  0875               	movf	??_LCD_putc+1,w
   630  06AD  0480               	iorwf	0,f
   631                           
   632                           ;lcd.c: 122:     LCD_Out((c & 0xF0) >> 4);
   633  06AE  0877               	movf	LCD_putc@c,w
   634  06AF  00F4               	movwf	??_LCD_putc
   635  06B0  3004               	movlw	4
   636  06B1                     u455:	
   637  06B1  1003               	clrc
   638  06B2  0CF4               	rrf	??_LCD_putc,f
   639  06B3  3EFF               	addlw	-1
   640  06B4  1D03               	skipz
   641  06B5  2EB1               	goto	u455
   642  06B6  0874               	movf	??_LCD_putc,w
   643  06B7  390F               	andlw	15
   644  06B8  272D               	fcall	_LCD_Out
   645                           
   646                           ;lcd.c: 124:     *(lcd.PORT) |= 1 << lcd.EN;
   647  06B9  3001               	movlw	1
   648  06BA  00F4               	movwf	??_LCD_putc
   649  06BB  1283               	bcf	3,5	;RP0=0, select bank0
   650  06BC  1303               	bcf	3,6	;RP1=0, select bank0
   651  06BD  0C2C               	rrf	_lcd+2,w
   652  06BE  00F5               	movwf	??_LCD_putc+1
   653  06BF  0CF5               	rrf	??_LCD_putc+1,f
   654  06C0  0C75               	rrf	??_LCD_putc+1,w
   655  06C1  3907               	andlw	7
   656  06C2  3E01               	addlw	1
   657  06C3  2EC6               	goto	u464
   658  06C4                     u465:	
   659  06C4  1003               	clrc
   660  06C5  0DF4               	rlf	??_LCD_putc,f
   661  06C6                     u464:	
   662  06C6  3EFF               	addlw	-1
   663  06C7  1D03               	skipz
   664  06C8  2EC4               	goto	u465
   665  06C9  0874               	movf	??_LCD_putc,w
   666  06CA  00F6               	movwf	??_LCD_putc+2
   667  06CB  082A               	movf	_lcd,w
   668  06CC  0084               	movwf	4
   669  06CD  1783               	bsf	3,7
   670  06CE  1C2B               	btfss	_lcd+1,0
   671  06CF  1383               	bcf	3,7
   672  06D0  0876               	movf	??_LCD_putc+2,w
   673  06D1  0480               	iorwf	0,f
   674                           
   675                           ;lcd.c: 125:     _delay((unsigned long)((40)*(8000000/4000000.0)));
   676  06D2  301A               	movlw	26
   677  06D3  00F4               	movwf	??_LCD_putc
   678  06D4                     u597:	
   679  06D4  0BF4               	decfsz	??_LCD_putc,f
   680  06D5  2ED4               	goto	u597
   681  06D6  0000               	nop
   682                           
   683                           ;lcd.c: 126:     *(lcd.PORT) &= ~(1 << lcd.EN);
   684  06D7  3001               	movlw	1
   685  06D8  00F4               	movwf	??_LCD_putc
   686  06D9  1283               	bcf	3,5	;RP0=0, select bank0
   687  06DA  1303               	bcf	3,6	;RP1=0, select bank0
   688  06DB  0C2C               	rrf	_lcd+2,w
   689  06DC  00F5               	movwf	??_LCD_putc+1
   690  06DD  0CF5               	rrf	??_LCD_putc+1,f
   691  06DE  0C75               	rrf	??_LCD_putc+1,w
   692  06DF  3907               	andlw	7
   693  06E0  3E01               	addlw	1
   694  06E1  2EE4               	goto	u474
   695  06E2                     u475:	
   696  06E2  1003               	clrc
   697  06E3  0DF4               	rlf	??_LCD_putc,f
   698  06E4                     u474:	
   699  06E4  3EFF               	addlw	-1
   700  06E5  1D03               	skipz
   701  06E6  2EE2               	goto	u475
   702  06E7  0874               	movf	??_LCD_putc,w
   703  06E8  3AFF               	xorlw	255
   704  06E9  00F6               	movwf	??_LCD_putc+2
   705  06EA  082A               	movf	_lcd,w
   706  06EB  0084               	movwf	4
   707  06EC  1783               	bsf	3,7
   708  06ED  1C2B               	btfss	_lcd+1,0
   709  06EE  1383               	bcf	3,7
   710  06EF  0876               	movf	??_LCD_putc+2,w
   711  06F0  0580               	andwf	0,f
   712                           
   713                           ;lcd.c: 128:     LCD_Out(c & 0x0F);
   714  06F1  0877               	movf	LCD_putc@c,w
   715  06F2  390F               	andlw	15
   716  06F3  272D               	fcall	_LCD_Out
   717                           
   718                           ;lcd.c: 130:     *(lcd.PORT) |= 1 << lcd.EN;
   719  06F4  3001               	movlw	1
   720  06F5  00F4               	movwf	??_LCD_putc
   721  06F6  1283               	bcf	3,5	;RP0=0, select bank0
   722  06F7  1303               	bcf	3,6	;RP1=0, select bank0
   723  06F8  0C2C               	rrf	_lcd+2,w
   724  06F9  00F5               	movwf	??_LCD_putc+1
   725  06FA  0CF5               	rrf	??_LCD_putc+1,f
   726  06FB  0C75               	rrf	??_LCD_putc+1,w
   727  06FC  3907               	andlw	7
   728  06FD  3E01               	addlw	1
   729  06FE  2F01               	goto	u484
   730  06FF                     u485:	
   731  06FF  1003               	clrc
   732  0700  0DF4               	rlf	??_LCD_putc,f
   733  0701                     u484:	
   734  0701  3EFF               	addlw	-1
   735  0702  1D03               	skipz
   736  0703  2EFF               	goto	u485
   737  0704  0874               	movf	??_LCD_putc,w
   738  0705  00F6               	movwf	??_LCD_putc+2
   739  0706  082A               	movf	_lcd,w
   740  0707  0084               	movwf	4
   741  0708  1783               	bsf	3,7
   742  0709  1C2B               	btfss	_lcd+1,0
   743  070A  1383               	bcf	3,7
   744  070B  0876               	movf	??_LCD_putc+2,w
   745  070C  0480               	iorwf	0,f
   746                           
   747                           ;lcd.c: 131:     _delay((unsigned long)((40)*(8000000/4000000.0)));
   748  070D  301A               	movlw	26
   749  070E  00F4               	movwf	??_LCD_putc
   750  070F                     u607:	
   751  070F  0BF4               	decfsz	??_LCD_putc,f
   752  0710  2F0F               	goto	u607
   753  0711  0000               	nop
   754                           
   755                           ;lcd.c: 132:     *(lcd.PORT) &= ~(1 << lcd.EN);
   756  0712  3001               	movlw	1
   757  0713  00F4               	movwf	??_LCD_putc
   758  0714  1283               	bcf	3,5	;RP0=0, select bank0
   759  0715  1303               	bcf	3,6	;RP1=0, select bank0
   760  0716  0C2C               	rrf	_lcd+2,w
   761  0717  00F5               	movwf	??_LCD_putc+1
   762  0718  0CF5               	rrf	??_LCD_putc+1,f
   763  0719  0C75               	rrf	??_LCD_putc+1,w
   764  071A  3907               	andlw	7
   765  071B  3E01               	addlw	1
   766  071C  2F1F               	goto	u494
   767  071D                     u495:	
   768  071D  1003               	clrc
   769  071E  0DF4               	rlf	??_LCD_putc,f
   770  071F                     u494:	
   771  071F  3EFF               	addlw	-1
   772  0720  1D03               	skipz
   773  0721  2F1D               	goto	u495
   774  0722  0874               	movf	??_LCD_putc,w
   775  0723  3AFF               	xorlw	255
   776  0724  00F6               	movwf	??_LCD_putc+2
   777  0725  082A               	movf	_lcd,w
   778  0726  0084               	movwf	4
   779  0727  1783               	bsf	3,7
   780  0728  1C2B               	btfss	_lcd+1,0
   781  0729  1383               	bcf	3,7
   782  072A  0876               	movf	??_LCD_putc+2,w
   783  072B  0580               	andwf	0,f
   784  072C  0008               	return
   785  072D                     __end_of_LCD_putc:	
   786                           
   787                           	psect	text3
   788  061A                     __ptext3:	
   789 ;; *************** function _LCD_Init *****************
   790 ;; Defined at:
   791 ;;		line 61 in file "lcd.c"
   792 ;; Parameters:    Size  Location     Type
   793 ;;  display         5    8[COMMON] struct .
   794 ;; Auto vars:     Size  Location     Type
   795 ;;  cmd             1   13[COMMON] unsigned char 
   796 ;; Return value:  Size  Location     Type
   797 ;;                  1    wreg      _Bool 
   798 ;; Registers used:
   799 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   800 ;; Tracked objects:
   801 ;;		On entry : 0/0
   802 ;;		On exit  : 0/0
   803 ;;		Unchanged: 0/0
   804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   805 ;;      Params:         5       0       0       0
   806 ;;      Locals:         1       0       0       0
   807 ;;      Temps:          0       2       0       0
   808 ;;      Totals:         6       2       0       0
   809 ;;Total ram usage:        8 bytes
   810 ;; Hardware stack levels used:    1
   811 ;; Hardware stack levels required when called:    2
   812 ;; This function calls:
   813 ;;		_LCD_Write
   814 ;; This function is called by:
   815 ;;		_main
   816 ;; This function uses a non-reentrant model
   817 ;;
   818                           
   819                           
   820                           ;psect for function _LCD_Init
   821  061A                     _LCD_Init:	
   822                           
   823                           ;lcd.c: 63:     lcd = display;
   824                           
   825                           ;incstack = 0
   826                           ; Regs used in _LCD_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   827  061A  302A               	movlw	_lcd& (0+255)
   828  061B  0084               	movwf	4
   829  061C  0878               	movf	LCD_Init@display,w
   830  061D  1383               	bcf	3,7	;select IRP bank0
   831  061E  0080               	movwf	0
   832  061F  0A84               	incf	4,f
   833  0620  0879               	movf	LCD_Init@display+1,w
   834  0621  0080               	movwf	0
   835  0622  0A84               	incf	4,f
   836  0623  087A               	movf	LCD_Init@display+2,w
   837  0624  0080               	movwf	0
   838  0625  0A84               	incf	4,f
   839  0626  087B               	movf	LCD_Init@display+3,w
   840  0627  0080               	movwf	0
   841  0628  0A84               	incf	4,f
   842  0629  087C               	movf	LCD_Init@display+4,w
   843  062A  0080               	movwf	0
   844                           
   845                           ;lcd.c: 72:     if ( lcd.PORT == &PORTA ) {
   846  062B  3000               	movlw	0
   847  062C  1283               	bcf	3,5	;RP0=0, select bank0
   848  062D  1303               	bcf	3,6	;RP1=0, select bank0
   849  062E  062B               	xorwf	_lcd+1,w
   850  062F  1D03               	skipz
   851  0630  2E33               	goto	u505
   852  0631  3005               	movlw	5
   853  0632  062A               	xorwf	_lcd,w
   854  0633                     u505:	
   855  0633  1D03               	skipz
   856  0634  2E39               	goto	l924
   857                           
   858                           ;lcd.c: 73:         TRISA = 0x00;
   859  0635  1683               	bsf	3,5	;RP0=1, select bank1
   860  0636  1303               	bcf	3,6	;RP1=0, select bank1
   861  0637  0185               	clrf	5	;volatile
   862                           
   863                           ;lcd.c: 74:     }
   864  0638  2E4C               	goto	l932
   865  0639                     l924:	
   866  0639  3000               	movlw	0
   867  063A  062B               	xorwf	_lcd+1,w
   868  063B  1D03               	skipz
   869  063C  2E3F               	goto	u515
   870  063D  3006               	movlw	6
   871  063E  062A               	xorwf	_lcd,w
   872  063F                     u515:	
   873  063F  1903               	btfsc	3,2
   874  0640  2E49               	goto	l926
   875                           
   876                           ;lcd.c: 77:     }
   877  0641  3000               	movlw	0
   878  0642  062B               	xorwf	_lcd+1,w
   879  0643  1D03               	skipz
   880  0644  2E47               	goto	u525
   881  0645  3006               	movlw	6
   882  0646  062A               	xorwf	_lcd,w
   883  0647                     u525:	
   884  0647  1D03               	skipz
   885  0648  0008               	return
   886  0649                     l926:	
   887                           
   888                           ;lcd.c: 76:         TRISB = 0x00;
   889  0649  1683               	bsf	3,5	;RP0=1, select bank1
   890  064A  1303               	bcf	3,6	;RP1=0, select bank1
   891  064B  0186               	clrf	6	;volatile
   892  064C                     l932:	
   893                           
   894                           ;lcd.c: 94:     _delay((unsigned long)((20)*(8000000/4000.0)));
   895  064C  3034               	movlw	52
   896  064D  1283               	bcf	3,5	;RP0=0, select bank0
   897  064E  1303               	bcf	3,6	;RP1=0, select bank0
   898  064F  00A1               	movwf	??_LCD_Init+1
   899  0650  30F1               	movlw	241
   900  0651  00A0               	movwf	??_LCD_Init
   901  0652                     u617:	
   902  0652  0BA0               	decfsz	??_LCD_Init,f
   903  0653  2E52               	goto	u617
   904  0654  0BA1               	decfsz	??_LCD_Init+1,f
   905  0655  2E52               	goto	u617
   906  0656  0000               	nop
   907                           
   908                           ;lcd.c: 97:     LCD_Write(0x03);
   909  0657  3003               	movlw	3
   910  0658  2568               	fcall	_LCD_Write
   911                           
   912                           ;lcd.c: 98:     _delay((unsigned long)((5)*(8000000/4000.0)));
   913  0659  300D               	movlw	13
   914  065A  1283               	bcf	3,5	;RP0=0, select bank0
   915  065B  1303               	bcf	3,6	;RP1=0, select bank0
   916  065C  00A1               	movwf	??_LCD_Init+1
   917  065D  30FB               	movlw	251
   918  065E  00A0               	movwf	??_LCD_Init
   919  065F                     u627:	
   920  065F  0BA0               	decfsz	??_LCD_Init,f
   921  0660  2E5F               	goto	u627
   922  0661  0BA1               	decfsz	??_LCD_Init+1,f
   923  0662  2E5F               	goto	u627
   924  0663  0000               	nop
   925                           
   926                           ;lcd.c: 99:     LCD_Write(0x03);
   927  0664  3003               	movlw	3
   928  0665  2568               	fcall	_LCD_Write
   929                           
   930                           ;lcd.c: 100:     _delay((unsigned long)((16)*(8000000/4000.0)));
   931  0666  302A               	movlw	42
   932  0667  1283               	bcf	3,5	;RP0=0, select bank0
   933  0668  1303               	bcf	3,6	;RP1=0, select bank0
   934  0669  00A1               	movwf	??_LCD_Init+1
   935  066A  308D               	movlw	141
   936  066B  00A0               	movwf	??_LCD_Init
   937  066C                     u637:	
   938  066C  0BA0               	decfsz	??_LCD_Init,f
   939  066D  2E6C               	goto	u637
   940  066E  0BA1               	decfsz	??_LCD_Init+1,f
   941  066F  2E6C               	goto	u637
   942  0670  0000               	nop
   943                           
   944                           ;lcd.c: 101:     LCD_Write(0x03);
   945  0671  3003               	movlw	3
   946  0672  2568               	fcall	_LCD_Write
   947                           
   948                           ;lcd.c: 104:     LCD_Write(0x02);
   949  0673  3002               	movlw	2
   950  0674  2568               	fcall	_LCD_Write
   951  0675  3002               	movlw	2
   952  0676  2568               	fcall	_LCD_Write
   953  0677  3008               	movlw	8
   954  0678  2568               	fcall	_LCD_Write
   955  0679  3000               	movlw	0
   956  067A  2568               	fcall	_LCD_Write
   957  067B  3006               	movlw	6
   958  067C  2568               	fcall	_LCD_Write
   959  067D  3008               	movlw	8
   960  067E  1283               	bcf	3,5	;RP0=0, select bank0
   961  067F  1303               	bcf	3,6	;RP1=0, select bank0
   962  0680  00A0               	movwf	??_LCD_Init
   963  0681  0820               	movf	??_LCD_Init,w
   964  0682  00FD               	movwf	LCD_Init@cmd
   965  0683  157D               	bsf	LCD_Init@cmd,2
   966  0684  087D               	movf	LCD_Init@cmd,w
   967  0685  00A0               	movwf	??_LCD_Init
   968  0686  3004               	movlw	4
   969  0687                     u535:	
   970  0687  1003               	clrc
   971  0688  0CA0               	rrf	??_LCD_Init,f
   972  0689  3EFF               	addlw	-1
   973  068A  1D03               	skipz
   974  068B  2E87               	goto	u535
   975  068C  0820               	movf	??_LCD_Init,w
   976  068D  390F               	andlw	15
   977  068E  2568               	fcall	_LCD_Write
   978  068F  087D               	movf	LCD_Init@cmd,w
   979  0690  390F               	andlw	15
   980  0691  2568               	fcall	_LCD_Write
   981                           
   982                           ;lcd.c: 114:     do { LCD_Write( (0x01 & 0xF0) >> 4 ); LCD_Write( 0x01 & 0x0F); } while 
      +                          ( 0 );
   983  0692  3000               	movlw	0
   984  0693  2568               	fcall	_LCD_Write
   985  0694  3001               	movlw	1
   986  0695  2568               	fcall	_LCD_Write
   987  0696  0008               	return
   988  0697                     __end_of_LCD_Init:	
   989                           
   990                           	psect	text4
   991  0568                     __ptext4:	
   992 ;; *************** function _LCD_Write *****************
   993 ;; Defined at:
   994 ;;		line 50 in file "lcd.c"
   995 ;; Parameters:    Size  Location     Type
   996 ;;  c               1    wreg     unsigned char 
   997 ;; Auto vars:     Size  Location     Type
   998 ;;  c               1    7[COMMON] unsigned char 
   999 ;; Return value:  Size  Location     Type
  1000 ;;                  1    wreg      void 
  1001 ;; Registers used:
  1002 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1003 ;; Tracked objects:
  1004 ;;		On entry : 0/0
  1005 ;;		On exit  : 0/0
  1006 ;;		Unchanged: 0/0
  1007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1008 ;;      Params:         0       0       0       0
  1009 ;;      Locals:         1       0       0       0
  1010 ;;      Temps:          3       0       0       0
  1011 ;;      Totals:         4       0       0       0
  1012 ;;Total ram usage:        4 bytes
  1013 ;; Hardware stack levels used:    1
  1014 ;; Hardware stack levels required when called:    1
  1015 ;; This function calls:
  1016 ;;		_LCD_Out
  1017 ;; This function is called by:
  1018 ;;		_main
  1019 ;;		_LCD_Init
  1020 ;; This function uses a non-reentrant model
  1021 ;;
  1022                           
  1023                           
  1024                           ;psect for function _LCD_Write
  1025  0568                     _LCD_Write:	
  1026                           
  1027                           ;incstack = 0
  1028                           ; Regs used in _LCD_Write: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1029                           ;LCD_Write@c stored from wreg
  1030  0568  00F7               	movwf	LCD_Write@c
  1031                           
  1032                           ;lcd.c: 52:     *(lcd.PORT) &= ~(1 << lcd.RS);
  1033  0569  3001               	movlw	1
  1034  056A  00F4               	movwf	??_LCD_Write
  1035  056B  1283               	bcf	3,5	;RP0=0, select bank0
  1036  056C  1303               	bcf	3,6	;RP1=0, select bank0
  1037  056D  082C               	movf	_lcd+2,w
  1038  056E  3907               	andlw	7
  1039  056F  3E01               	addlw	1
  1040  0570  2D73               	goto	u414
  1041  0571                     u415:	
  1042  0571  1003               	clrc
  1043  0572  0DF4               	rlf	??_LCD_Write,f
  1044  0573                     u414:	
  1045  0573  3EFF               	addlw	-1
  1046  0574  1D03               	skipz
  1047  0575  2D71               	goto	u415
  1048  0576  0874               	movf	??_LCD_Write,w
  1049  0577  3AFF               	xorlw	255
  1050  0578  00F5               	movwf	??_LCD_Write+1
  1051  0579  082A               	movf	_lcd,w
  1052  057A  0084               	movwf	4
  1053  057B  1783               	bsf	3,7
  1054  057C  1C2B               	btfss	_lcd+1,0
  1055  057D  1383               	bcf	3,7
  1056  057E  0875               	movf	??_LCD_Write+1,w
  1057  057F  0580               	andwf	0,f
  1058                           
  1059                           ;lcd.c: 53:     LCD_Out(c);
  1060  0580  0877               	movf	LCD_Write@c,w
  1061  0581  272D               	fcall	_LCD_Out
  1062                           
  1063                           ;lcd.c: 55:     *(lcd.PORT) |= 1 << lcd.EN;
  1064  0582  3001               	movlw	1
  1065  0583  00F4               	movwf	??_LCD_Write
  1066  0584  1283               	bcf	3,5	;RP0=0, select bank0
  1067  0585  1303               	bcf	3,6	;RP1=0, select bank0
  1068  0586  0C2C               	rrf	_lcd+2,w
  1069  0587  00F5               	movwf	??_LCD_Write+1
  1070  0588  0CF5               	rrf	??_LCD_Write+1,f
  1071  0589  0C75               	rrf	??_LCD_Write+1,w
  1072  058A  3907               	andlw	7
  1073  058B  3E01               	addlw	1
  1074  058C  2D8F               	goto	u424
  1075  058D                     u425:	
  1076  058D  1003               	clrc
  1077  058E  0DF4               	rlf	??_LCD_Write,f
  1078  058F                     u424:	
  1079  058F  3EFF               	addlw	-1
  1080  0590  1D03               	skipz
  1081  0591  2D8D               	goto	u425
  1082  0592  0874               	movf	??_LCD_Write,w
  1083  0593  00F6               	movwf	??_LCD_Write+2
  1084  0594  082A               	movf	_lcd,w
  1085  0595  0084               	movwf	4
  1086  0596  1783               	bsf	3,7
  1087  0597  1C2B               	btfss	_lcd+1,0
  1088  0598  1383               	bcf	3,7
  1089  0599  0876               	movf	??_LCD_Write+2,w
  1090  059A  0480               	iorwf	0,f
  1091                           
  1092                           ;lcd.c: 56:     _delay((unsigned long)((4)*(8000000/4000.0)));
  1093  059B  300B               	movlw	11
  1094  059C  00F5               	movwf	??_LCD_Write+1
  1095  059D  3062               	movlw	98
  1096  059E  00F4               	movwf	??_LCD_Write
  1097  059F                     u647:	
  1098  059F  0BF4               	decfsz	??_LCD_Write,f
  1099  05A0  2D9F               	goto	u647
  1100  05A1  0BF5               	decfsz	??_LCD_Write+1,f
  1101  05A2  2D9F               	goto	u647
  1102  05A3  0000               	nop
  1103                           
  1104                           ;lcd.c: 57:     *(lcd.PORT) &= ~(1 << lcd.EN);
  1105  05A4  3001               	movlw	1
  1106  05A5  00F4               	movwf	??_LCD_Write
  1107  05A6  1283               	bcf	3,5	;RP0=0, select bank0
  1108  05A7  1303               	bcf	3,6	;RP1=0, select bank0
  1109  05A8  0C2C               	rrf	_lcd+2,w
  1110  05A9  00F5               	movwf	??_LCD_Write+1
  1111  05AA  0CF5               	rrf	??_LCD_Write+1,f
  1112  05AB  0C75               	rrf	??_LCD_Write+1,w
  1113  05AC  3907               	andlw	7
  1114  05AD  3E01               	addlw	1
  1115  05AE  2DB1               	goto	u434
  1116  05AF                     u435:	
  1117  05AF  1003               	clrc
  1118  05B0  0DF4               	rlf	??_LCD_Write,f
  1119  05B1                     u434:	
  1120  05B1  3EFF               	addlw	-1
  1121  05B2  1D03               	skipz
  1122  05B3  2DAF               	goto	u435
  1123  05B4  0874               	movf	??_LCD_Write,w
  1124  05B5  3AFF               	xorlw	255
  1125  05B6  00F6               	movwf	??_LCD_Write+2
  1126  05B7  082A               	movf	_lcd,w
  1127  05B8  0084               	movwf	4
  1128  05B9  1783               	bsf	3,7
  1129  05BA  1C2B               	btfss	_lcd+1,0
  1130  05BB  1383               	bcf	3,7
  1131  05BC  0876               	movf	??_LCD_Write+2,w
  1132  05BD  0580               	andwf	0,f
  1133  05BE  0008               	return
  1134  05BF                     __end_of_LCD_Write:	
  1135                           
  1136                           	psect	text5
  1137  072D                     __ptext5:	
  1138 ;; *************** function _LCD_Out *****************
  1139 ;; Defined at:
  1140 ;;		line 18 in file "lcd.c"
  1141 ;; Parameters:    Size  Location     Type
  1142 ;;  c               1    wreg     unsigned char 
  1143 ;; Auto vars:     Size  Location     Type
  1144 ;;  c               1    3[COMMON] unsigned char 
  1145 ;; Return value:  Size  Location     Type
  1146 ;;                  1    wreg      void 
  1147 ;; Registers used:
  1148 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1149 ;; Tracked objects:
  1150 ;;		On entry : 0/0
  1151 ;;		On exit  : 0/0
  1152 ;;		Unchanged: 0/0
  1153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1154 ;;      Params:         0       0       0       0
  1155 ;;      Locals:         1       0       0       0
  1156 ;;      Temps:          3       0       0       0
  1157 ;;      Totals:         4       0       0       0
  1158 ;;Total ram usage:        4 bytes
  1159 ;; Hardware stack levels used:    1
  1160 ;; This function calls:
  1161 ;;		Nothing
  1162 ;; This function is called by:
  1163 ;;		_LCD_Write
  1164 ;;		_LCD_putc
  1165 ;; This function uses a non-reentrant model
  1166 ;;
  1167                           
  1168                           
  1169                           ;psect for function _LCD_Out
  1170  072D                     _LCD_Out:	
  1171                           
  1172                           ;incstack = 0
  1173                           ; Regs used in _LCD_Out: [wreg-fsr0h+status,2+status,0]
  1174                           ;LCD_Out@c stored from wreg
  1175  072D  00F3               	movwf	LCD_Out@c
  1176                           
  1177                           ;lcd.c: 20:     if ( c & 1 ){
  1178  072E  1C73               	btfss	LCD_Out@c,0
  1179  072F  2F47               	goto	l872
  1180                           
  1181                           ;lcd.c: 21:         *(lcd.PORT) |= 1 << lcd.D4;
  1182  0730  3001               	movlw	1
  1183  0731  00F0               	movwf	??_LCD_Out
  1184  0732  1283               	bcf	3,5	;RP0=0, select bank0
  1185  0733  1303               	bcf	3,6	;RP1=0, select bank0
  1186  0734  082D               	movf	_lcd+3,w
  1187  0735  3907               	andlw	7
  1188  0736  3E01               	addlw	1
  1189  0737  2F3A               	goto	u304
  1190  0738                     u305:	
  1191  0738  1003               	clrc
  1192  0739  0DF0               	rlf	??_LCD_Out,f
  1193  073A                     u304:	
  1194  073A  3EFF               	addlw	-1
  1195  073B  1D03               	skipz
  1196  073C  2F38               	goto	u305
  1197  073D  0870               	movf	??_LCD_Out,w
  1198  073E  00F1               	movwf	??_LCD_Out+1
  1199  073F  082A               	movf	_lcd,w
  1200  0740  0084               	movwf	4
  1201  0741  1783               	bsf	3,7
  1202  0742  1C2B               	btfss	_lcd+1,0
  1203  0743  1383               	bcf	3,7
  1204  0744  0871               	movf	??_LCD_Out+1,w
  1205  0745  0480               	iorwf	0,f
  1206                           
  1207                           ;lcd.c: 22:     }
  1208  0746  2F5E               	goto	l874
  1209  0747                     l872:	
  1210                           
  1211                           ;lcd.c: 24:          *(lcd.PORT) &= ~(1 << lcd.D4);
  1212  0747  3001               	movlw	1
  1213  0748  00F0               	movwf	??_LCD_Out
  1214  0749  1283               	bcf	3,5	;RP0=0, select bank0
  1215  074A  1303               	bcf	3,6	;RP1=0, select bank0
  1216  074B  082D               	movf	_lcd+3,w
  1217  074C  3907               	andlw	7
  1218  074D  3E01               	addlw	1
  1219  074E  2F51               	goto	u314
  1220  074F                     u315:	
  1221  074F  1003               	clrc
  1222  0750  0DF0               	rlf	??_LCD_Out,f
  1223  0751                     u314:	
  1224  0751  3EFF               	addlw	-1
  1225  0752  1D03               	skipz
  1226  0753  2F4F               	goto	u315
  1227  0754  0870               	movf	??_LCD_Out,w
  1228  0755  3AFF               	xorlw	255
  1229  0756  00F1               	movwf	??_LCD_Out+1
  1230  0757  082A               	movf	_lcd,w
  1231  0758  0084               	movwf	4
  1232  0759  1783               	bsf	3,7
  1233  075A  1C2B               	btfss	_lcd+1,0
  1234  075B  1383               	bcf	3,7
  1235  075C  0871               	movf	??_LCD_Out+1,w
  1236  075D  0580               	andwf	0,f
  1237  075E                     l874:	
  1238                           
  1239                           ;lcd.c: 27:     if ( c & 2 ) {
  1240  075E  1CF3               	btfss	LCD_Out@c,1
  1241  075F  2F78               	goto	l878
  1242                           
  1243                           ;lcd.c: 28:         *(lcd.PORT) |= 1 << lcd.D5;
  1244  0760  3001               	movlw	1
  1245  0761  00F0               	movwf	??_LCD_Out
  1246  0762  0C2D               	rrf	_lcd+3,w
  1247  0763  00F1               	movwf	??_LCD_Out+1
  1248  0764  0CF1               	rrf	??_LCD_Out+1,f
  1249  0765  0C71               	rrf	??_LCD_Out+1,w
  1250  0766  3907               	andlw	7
  1251  0767  3E01               	addlw	1
  1252  0768  2F6B               	goto	u334
  1253  0769                     u335:	
  1254  0769  1003               	clrc
  1255  076A  0DF0               	rlf	??_LCD_Out,f
  1256  076B                     u334:	
  1257  076B  3EFF               	addlw	-1
  1258  076C  1D03               	skipz
  1259  076D  2F69               	goto	u335
  1260  076E  0870               	movf	??_LCD_Out,w
  1261  076F  00F2               	movwf	??_LCD_Out+2
  1262  0770  082A               	movf	_lcd,w
  1263  0771  0084               	movwf	4
  1264  0772  1783               	bsf	3,7
  1265  0773  1C2B               	btfss	_lcd+1,0
  1266  0774  1383               	bcf	3,7
  1267  0775  0872               	movf	??_LCD_Out+2,w
  1268  0776  0480               	iorwf	0,f
  1269                           
  1270                           ;lcd.c: 29:     }
  1271  0777  2F90               	goto	l880
  1272  0778                     l878:	
  1273                           
  1274                           ;lcd.c: 31:         *(lcd.PORT) &= ~(1 << lcd.D5);
  1275  0778  3001               	movlw	1
  1276  0779  00F0               	movwf	??_LCD_Out
  1277  077A  0C2D               	rrf	_lcd+3,w
  1278  077B  00F1               	movwf	??_LCD_Out+1
  1279  077C  0CF1               	rrf	??_LCD_Out+1,f
  1280  077D  0C71               	rrf	??_LCD_Out+1,w
  1281  077E  3907               	andlw	7
  1282  077F  3E01               	addlw	1
  1283  0780  2F83               	goto	u344
  1284  0781                     u345:	
  1285  0781  1003               	clrc
  1286  0782  0DF0               	rlf	??_LCD_Out,f
  1287  0783                     u344:	
  1288  0783  3EFF               	addlw	-1
  1289  0784  1D03               	skipz
  1290  0785  2F81               	goto	u345
  1291  0786  0870               	movf	??_LCD_Out,w
  1292  0787  3AFF               	xorlw	255
  1293  0788  00F2               	movwf	??_LCD_Out+2
  1294  0789  082A               	movf	_lcd,w
  1295  078A  0084               	movwf	4
  1296  078B  1783               	bsf	3,7
  1297  078C  1C2B               	btfss	_lcd+1,0
  1298  078D  1383               	bcf	3,7
  1299  078E  0872               	movf	??_LCD_Out+2,w
  1300  078F  0580               	andwf	0,f
  1301  0790                     l880:	
  1302                           
  1303                           ;lcd.c: 34:     if ( c & 4 ) {
  1304  0790  1D73               	btfss	LCD_Out@c,2
  1305  0791  2FA7               	goto	l884
  1306                           
  1307                           ;lcd.c: 35:         *(lcd.PORT) |= 1 << lcd.D6;
  1308  0792  3001               	movlw	1
  1309  0793  00F0               	movwf	??_LCD_Out
  1310  0794  082E               	movf	_lcd+4,w
  1311  0795  3907               	andlw	7
  1312  0796  3E01               	addlw	1
  1313  0797  2F9A               	goto	u364
  1314  0798                     u365:	
  1315  0798  1003               	clrc
  1316  0799  0DF0               	rlf	??_LCD_Out,f
  1317  079A                     u364:	
  1318  079A  3EFF               	addlw	-1
  1319  079B  1D03               	skipz
  1320  079C  2F98               	goto	u365
  1321  079D  0870               	movf	??_LCD_Out,w
  1322  079E  00F1               	movwf	??_LCD_Out+1
  1323  079F  082A               	movf	_lcd,w
  1324  07A0  0084               	movwf	4
  1325  07A1  1783               	bsf	3,7
  1326  07A2  1C2B               	btfss	_lcd+1,0
  1327  07A3  1383               	bcf	3,7
  1328  07A4  0871               	movf	??_LCD_Out+1,w
  1329  07A5  0480               	iorwf	0,f
  1330                           
  1331                           ;lcd.c: 36:     }
  1332  07A6  2FBC               	goto	l886
  1333  07A7                     l884:	
  1334                           
  1335                           ;lcd.c: 38:         *(lcd.PORT) &= ~(1 << lcd.D6);
  1336  07A7  3001               	movlw	1
  1337  07A8  00F0               	movwf	??_LCD_Out
  1338  07A9  082E               	movf	_lcd+4,w
  1339  07AA  3907               	andlw	7
  1340  07AB  3E01               	addlw	1
  1341  07AC  2FAF               	goto	u374
  1342  07AD                     u375:	
  1343  07AD  1003               	clrc
  1344  07AE  0DF0               	rlf	??_LCD_Out,f
  1345  07AF                     u374:	
  1346  07AF  3EFF               	addlw	-1
  1347  07B0  1D03               	skipz
  1348  07B1  2FAD               	goto	u375
  1349  07B2  0870               	movf	??_LCD_Out,w
  1350  07B3  3AFF               	xorlw	255
  1351  07B4  00F1               	movwf	??_LCD_Out+1
  1352  07B5  082A               	movf	_lcd,w
  1353  07B6  0084               	movwf	4
  1354  07B7  1783               	bsf	3,7
  1355  07B8  1C2B               	btfss	_lcd+1,0
  1356  07B9  1383               	bcf	3,7
  1357  07BA  0871               	movf	??_LCD_Out+1,w
  1358  07BB  0580               	andwf	0,f
  1359  07BC                     l886:	
  1360                           
  1361                           ;lcd.c: 41:     if ( c & 8 ) {
  1362  07BC  1DF3               	btfss	LCD_Out@c,3
  1363  07BD  2FD6               	goto	l890
  1364                           
  1365                           ;lcd.c: 42:          *(lcd.PORT) |= 1 << lcd.D7;
  1366  07BE  3001               	movlw	1
  1367  07BF  00F0               	movwf	??_LCD_Out
  1368  07C0  0C2E               	rrf	_lcd+4,w
  1369  07C1  00F1               	movwf	??_LCD_Out+1
  1370  07C2  0CF1               	rrf	??_LCD_Out+1,f
  1371  07C3  0C71               	rrf	??_LCD_Out+1,w
  1372  07C4  3907               	andlw	7
  1373  07C5  3E01               	addlw	1
  1374  07C6  2FC9               	goto	u394
  1375  07C7                     u395:	
  1376  07C7  1003               	clrc
  1377  07C8  0DF0               	rlf	??_LCD_Out,f
  1378  07C9                     u394:	
  1379  07C9  3EFF               	addlw	-1
  1380  07CA  1D03               	skipz
  1381  07CB  2FC7               	goto	u395
  1382  07CC  0870               	movf	??_LCD_Out,w
  1383  07CD  00F2               	movwf	??_LCD_Out+2
  1384  07CE  082A               	movf	_lcd,w
  1385  07CF  0084               	movwf	4
  1386  07D0  1783               	bsf	3,7
  1387  07D1  1C2B               	btfss	_lcd+1,0
  1388  07D2  1383               	bcf	3,7
  1389  07D3  0872               	movf	??_LCD_Out+2,w
  1390  07D4  0480               	iorwf	0,f
  1391                           
  1392                           ;lcd.c: 43:     }
  1393  07D5  0008               	return
  1394  07D6                     l890:	
  1395                           
  1396                           ;lcd.c: 45:          *(lcd.PORT) &= ~(1 << lcd.D7);
  1397  07D6  3001               	movlw	1
  1398  07D7  00F0               	movwf	??_LCD_Out
  1399  07D8  0C2E               	rrf	_lcd+4,w
  1400  07D9  00F1               	movwf	??_LCD_Out+1
  1401  07DA  0CF1               	rrf	??_LCD_Out+1,f
  1402  07DB  0C71               	rrf	??_LCD_Out+1,w
  1403  07DC  3907               	andlw	7
  1404  07DD  3E01               	addlw	1
  1405  07DE  2FE1               	goto	u404
  1406  07DF                     u405:	
  1407  07DF  1003               	clrc
  1408  07E0  0DF0               	rlf	??_LCD_Out,f
  1409  07E1                     u404:	
  1410  07E1  3EFF               	addlw	-1
  1411  07E2  1D03               	skipz
  1412  07E3  2FDF               	goto	u405
  1413  07E4  0870               	movf	??_LCD_Out,w
  1414  07E5  3AFF               	xorlw	255
  1415  07E6  00F2               	movwf	??_LCD_Out+2
  1416  07E7  082A               	movf	_lcd,w
  1417  07E8  0084               	movwf	4
  1418  07E9  1783               	bsf	3,7
  1419  07EA  1C2B               	btfss	_lcd+1,0
  1420  07EB  1383               	bcf	3,7
  1421  07EC  0872               	movf	??_LCD_Out+2,w
  1422  07ED  0580               	andwf	0,f
  1423  07EE  0008               	return
  1424  07EF                     __end_of_LCD_Out:	
  1425  007E                     btemp	set	126	;btemp
  1426  007E                     wtemp0	set	126


Data Sizes:
    Strings     13
    Constant    0
    Data        5
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     10      20
    BANK1            80      0       0
    BANK2            48      0       0

Pointer List with Targets:

    LCD_putrs@a	PTR const unsigned char  size(1) Largest target is 13
		 -> STR_1(CODE[13]), 

    display.PORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR0[1]), 

    lcd.PORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR0[1]), 

    lcd.PORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR0[1]), 

    S22$PORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR0[1]), 

    F673.PORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR0[1]), 


Critical Paths under _main in COMMON

    _main->_LCD_Init
    _LCD_putrs->_LCD_putc
    _LCD_putc->_LCD_Out
    _LCD_Init->_LCD_Write
    _LCD_Write->_LCD_Out

Critical Paths under _main in BANK0

    _main->_LCD_Init

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0     844
                                              2 BANK0      8     8      0
                           _LCD_Init
                          _LCD_Write
                           _LCD_putc
                          _LCD_putrs
 ---------------------------------------------------------------------------------
 (1) _LCD_putrs                                            3     3      0     255
                                              8 COMMON     3     3      0
                           _LCD_putc
 ---------------------------------------------------------------------------------
 (2) _LCD_putc                                             4     4      0     132
                                              4 COMMON     4     4      0
                            _LCD_Out
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             8     3      5     256
                                              8 COMMON     6     1      5
                                              0 BANK0      2     2      0
                          _LCD_Write
 ---------------------------------------------------------------------------------
 (1) _LCD_Write                                            4     4      0     110
                                              4 COMMON     4     4      0
                            _LCD_Out
 ---------------------------------------------------------------------------------
 (3) _LCD_Out                                              4     4      0      88
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Init
     _LCD_Write
       _LCD_Out
   _LCD_Write
     _LCD_Out
   _LCD_putc
     _LCD_Out
   _LCD_putrs
     _LCD_putc
       _LCD_Out

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               30      0       0       9        0.0%
BITBANK2            30      0       0       8        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      A      14       3       25.0%
BITBANK0            50      0       0       5        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      22      10        0.0%
ABS                  0      0      22       4        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA              80      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sat May 18 06:47:34 2019

                      pc 0002                       fsr 0004                      l932 064C  
                    l924 0639                      l926 0649                      l880 0790  
                    l872 0747                      l890 07D6                      l874 075E  
                    l970 0555                      l884 07A7                      l886 07BC  
                    l878 0778                      l976 05E3                      u304 073A  
                    u305 0738                      u314 0751                      u315 074F  
                    u404 07E1                      u405 07DF                      u334 076B  
                    u414 0573                      u335 0769                      u415 0571  
                    u344 0783                      u424 058F                      u345 0781  
                    u425 058D                      u505 0633                      u434 05B1  
                    u435 05AF                      u515 063F                      u364 079A  
                    u444 06A2                      u365 0798                      u525 0647  
                    u445 06A0                      u374 07AF                      u375 07AD  
                    u535 0687                      u607 070F                      u455 06B1  
                    u464 06C6                      u617 0652                      u465 06C4  
                    u394 07C9                      u474 06E4                      u395 07C7  
                    u627 065F                      u475 06E2                      u484 0701  
                    u637 066C                      u485 06FF                      u494 071F  
                    u647 059F                      u495 071D                      u577 05FF  
                    u587 0614                      u597 06D4          LCD_Init@display 0078  
                    _lcd 002A                      fsr0 0004                      indf 0000  
        __end_of_LCD_Out 07EF                     l1004 05F7                     STR_1 0007  
                   _main 05BF                     btemp 007E                     start 0000  
     __size_of_LCD_Write 0057              LCD_Init@cmd 007D       __size_of_LCD_putrs 0016  
       __end_of_LCD_Init 0697         __end_of_LCD_putc 072D                    ?_main 0070  
                  _PORTA 0005                    _PORTB 0006                    _TRISA 0085  
                  _TRISB 0086                    main@c 0029                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 07EF  
           __end_of_main 061A                   ??_main 0022                ??_LCD_Out 0070  
      __end_of_LCD_Write 05BF        __end_of_LCD_putrs 0568  __end_of__initialization 07FE  
              ?_LCD_Init 0078                ?_LCD_putc 0070           __pcstackCOMMON 0070  
           __pidataBANK0 054D                LCD_putc@c 0077               __pbssBANK0 002A  
             ??_LCD_Init 0020               ??_LCD_putc 0074               __pmaintext 05BF  
                _LCD_Out 072D               __stringtab 0001                  __ptext1 0552  
                __ptext2 0697                  __ptext3 061A                  __ptext4 0568  
                __ptext5 072D                  main@lcd 0024                _LCD_Write 0568  
   end_of_initialization 07FE                _LCD_putrs 0552               ?_LCD_Write 0070  
             ?_LCD_putrs 0070        __size_of_LCD_Init 007D        __size_of_LCD_putc 0096  
             LCD_Write@c 0077      start_initialization 07EF               LCD_putrs@a 007A  
             LCD_putrs@i 0078              __pdataBANK0 002F                 ?_LCD_Out 0070  
              ___latbits 0000            __pcstackBANK0 0020                 LCD_Out@c 0073  
            ??_LCD_Write 0074              ??_LCD_putrs 0078                __pstrings 0001  
               _LCD_Init 061A                 _LCD_putc 0697              __stringbase 0006  
       __size_of_LCD_Out 00C2       __end_of__stringtab 0007            __size_of_main 005B  
               main@F673 002F                stringcode 0001                 stringdir 0001  
               stringtab 0001  
