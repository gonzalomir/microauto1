

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed Mar 27 09:51:01 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F628A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	dabs	1,0x7E,2
     8  0000                     
     9                           ; Version 2.05
    10                           ; Generated 20/12/2018 GMT
    11                           ; 
    12                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    13                           ; All rights reserved.
    14                           ; 
    15                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    16                           ; 
    17                           ; Redistribution and use in source and binary forms, with or without modification, are
    18                           ; permitted provided that the following conditions are met:
    19                           ; 
    20                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    21                           ;        conditions and the following disclaimer.
    22                           ; 
    23                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    24                           ;        of conditions and the following disclaimer in the documentation and/or other
    25                           ;        materials provided with the distribution.
    26                           ; 
    27                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    28                           ;        software without specific prior written permission.
    29                           ; 
    30                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    31                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    32                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    33                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    34                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    35                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    36                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    37                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    38                           ; 
    39                           ; 
    40                           ; Code-generator required, PIC16F628A Definitions
    41                           ; 
    42                           ; SFR Addresses
    43  0000                     	;# 
    44  0001                     	;# 
    45  0002                     	;# 
    46  0003                     	;# 
    47  0004                     	;# 
    48  0005                     	;# 
    49  0006                     	;# 
    50  000A                     	;# 
    51  000B                     	;# 
    52  000C                     	;# 
    53  000E                     	;# 
    54  000E                     	;# 
    55  000F                     	;# 
    56  0010                     	;# 
    57  0011                     	;# 
    58  0012                     	;# 
    59  0015                     	;# 
    60  0015                     	;# 
    61  0016                     	;# 
    62  0017                     	;# 
    63  0018                     	;# 
    64  0019                     	;# 
    65  001A                     	;# 
    66  001F                     	;# 
    67  0081                     	;# 
    68  0085                     	;# 
    69  0086                     	;# 
    70  008C                     	;# 
    71  008E                     	;# 
    72  0092                     	;# 
    73  0098                     	;# 
    74  0099                     	;# 
    75  009A                     	;# 
    76  009B                     	;# 
    77  009C                     	;# 
    78  009D                     	;# 
    79  009F                     	;# 
    80  0000                     	;# 
    81  0001                     	;# 
    82  0002                     	;# 
    83  0003                     	;# 
    84  0004                     	;# 
    85  0005                     	;# 
    86  0006                     	;# 
    87  000A                     	;# 
    88  000B                     	;# 
    89  000C                     	;# 
    90  000E                     	;# 
    91  000E                     	;# 
    92  000F                     	;# 
    93  0010                     	;# 
    94  0011                     	;# 
    95  0012                     	;# 
    96  0015                     	;# 
    97  0015                     	;# 
    98  0016                     	;# 
    99  0017                     	;# 
   100  0018                     	;# 
   101  0019                     	;# 
   102  001A                     	;# 
   103  001F                     	;# 
   104  0081                     	;# 
   105  0085                     	;# 
   106  0086                     	;# 
   107  008C                     	;# 
   108  008E                     	;# 
   109  0092                     	;# 
   110  0098                     	;# 
   111  0099                     	;# 
   112  009A                     	;# 
   113  009B                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009F                     	;# 
   117  0006                     _PORTB	set	6
   118  0086                     _TRISB	set	134
   119                           
   120                           ; #config settings
   121  0000                     
   122                           	psect	cinit
   123  07FE                     start_initialization:	
   124  07FE                     __initialization:	
   125  07FE                     end_of_initialization:	
   126                           ;End of C runtime variable initialization code
   127                           
   128  07FE                     __end_of__initialization:	
   129  07FE  0183               	clrf	3
   130  07FF  2FBD               	ljmp	_main	;jump to C main() function
   131                           
   132                           	psect	cstackCOMMON
   133  0070                     __pcstackCOMMON:	
   134  0070                     ?_main:	
   135  0070                     ??_main:	
   136                           ; 1 bytes @ 0x0
   137                           
   138                           
   139                           ; 1 bytes @ 0x0
   140  0070                     	ds	3
   141  0073                     _main$37:	
   142                           
   143                           ; 2 bytes @ 0x3
   144  0073                     	ds	2
   145  0075                     main@direccion:	
   146                           
   147                           ; 1 bytes @ 0x5
   148  0075                     	ds	1
   149  0076                     main@x:	
   150                           
   151                           ; 1 bytes @ 0x6
   152  0076                     	ds	1
   153                           
   154                           	psect	maintext
   155  07BD                     __pmaintext:	
   156 ;;
   157 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   158 ;;
   159 ;; *************** function _main *****************
   160 ;; Defined at:
   161 ;;		line 16 in file "main.c"
   162 ;; Parameters:    Size  Location     Type
   163 ;;		None
   164 ;; Auto vars:     Size  Location     Type
   165 ;;  x               1    6[COMMON] unsigned char 
   166 ;;  direccion       1    5[COMMON] _Bool 
   167 ;; Return value:  Size  Location     Type
   168 ;;                  1    wreg      void 
   169 ;; Registers used:
   170 ;;		wreg, status,2, status,0
   171 ;; Tracked objects:
   172 ;;		On entry : B00/0
   173 ;;		On exit  : 0/0
   174 ;;		Unchanged: 0/0
   175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   176 ;;      Params:         0       0       0       0
   177 ;;      Locals:         4       0       0       0
   178 ;;      Temps:          3       0       0       0
   179 ;;      Totals:         7       0       0       0
   180 ;;Total ram usage:        7 bytes
   181 ;; This function calls:
   182 ;;		Nothing
   183 ;; This function is called by:
   184 ;;		Startup code after reset
   185 ;; This function uses a non-reentrant model
   186 ;;
   187                           
   188                           
   189                           ;psect for function _main
   190  07BD                     _main:	
   191                           
   192                           ;main.c: 17:     TRISB = 0x00;
   193                           
   194                           ;incstack = 0
   195                           ; Regs used in _main: [wreg+status,2+status,0]
   196  07BD  1683               	bsf	3,5	;RP0=1, select bank1
   197  07BE  1303               	bcf	3,6	;RP1=0, select bank1
   198  07BF  0186               	clrf	6	;volatile
   199                           
   200                           ;main.c: 18:     uint8_t x = 0B00001111;
   201  07C0  300F               	movlw	15
   202  07C1  00F0               	movwf	??_main
   203  07C2  0870               	movf	??_main,w
   204  07C3  00F6               	movwf	main@x
   205                           
   206                           ;main.c: 19:     _Bool direccion = 0;
   207  07C4  01F5               	clrf	main@direccion
   208  07C5                     l11:	
   209                           ;main.c: 20:     while (1) {
   210                           
   211                           
   212                           ;main.c: 21:         PORTB = x;
   213  07C5  0876               	movf	main@x,w
   214  07C6  1283               	bcf	3,5	;RP0=0, select bank0
   215  07C7  1303               	bcf	3,6	;RP1=0, select bank0
   216  07C8  0086               	movwf	6	;volatile
   217                           
   218                           ;main.c: 22:         if (direccion) {
   219  07C9  0875               	movf	main@direccion,w
   220  07CA  1903               	btfsc	3,2
   221  07CB  2FD1               	goto	l645
   222                           
   223                           ;main.c: 23:             x = x >> 1;
   224  07CC  0876               	movf	main@x,w
   225  07CD  00F0               	movwf	??_main
   226  07CE  1003               	clrc
   227  07CF  0C70               	rrf	??_main,w
   228  07D0  2FD4               	goto	L1
   229  07D1                     l645:	
   230                           ;main.c: 24:         } else {
   231                           
   232                           
   233                           ;main.c: 25:             x = x << 1;
   234  07D1  0876               	movf	main@x,w
   235  07D2  00F0               	movwf	??_main
   236  07D3  0770               	addwf	??_main,w
   237  07D4                     L1:	
   238  07D4  00F1               	movwf	??_main+1
   239  07D5  0871               	movf	??_main+1,w
   240  07D6  00F6               	movwf	main@x
   241                           
   242                           ;main.c: 27:         _delay((unsigned long)((200)*(4000000/4000.0)));
   243  07D7  3002               	movlw	2
   244  07D8  00F2               	movwf	??_main+2
   245  07D9  3004               	movlw	4
   246  07DA  00F1               	movwf	??_main+1
   247  07DB  30BA               	movlw	186
   248  07DC  00F0               	movwf	??_main
   249  07DD                     u117:	
   250  07DD  0BF0               	decfsz	??_main,f
   251  07DE  2FDD               	goto	u117
   252  07DF  0BF1               	decfsz	??_main+1,f
   253  07E0  2FDD               	goto	u117
   254  07E1  0BF2               	decfsz	??_main+2,f
   255  07E2  2FDD               	goto	u117
   256  07E3  0000               	nop
   257                           
   258                           ;main.c: 28:         if (x == 0) {
   259  07E4  0876               	movf	main@x,w
   260  07E5  1D03               	btfss	3,2
   261  07E6  2FC5               	goto	l11
   262                           
   263                           ;main.c: 29:             direccion = !direccion;
   264  07E7  0875               	movf	main@direccion,w
   265  07E8  1D03               	btfss	3,2
   266  07E9  2FEC               	goto	u80
   267  07EA  3001               	movlw	1
   268  07EB  2FED               	goto	u90
   269  07EC                     u80:	
   270  07EC  3000               	movlw	0
   271  07ED                     u90:	
   272  07ED  00F0               	movwf	??_main
   273  07EE  0870               	movf	??_main,w
   274  07EF  00F5               	movwf	main@direccion
   275                           
   276                           ;main.c: 30:             x = direccion ? 0B11110000 : 0B00001111;
   277  07F0  0875               	movf	main@direccion,w
   278  07F1  1D03               	btfss	3,2
   279  07F2  2FF5               	goto	l655
   280  07F3  300F               	movlw	15
   281  07F4  2FF6               	goto	L2
   282  07F5                     l655:	
   283  07F5  30F0               	movlw	240
   284  07F6                     L2:	
   285  07F6  00F3               	movwf	_main$37
   286  07F7  3000               	movlw	0
   287  07F8  00F4               	movwf	_main$37+1
   288  07F9  0873               	movf	_main$37,w
   289  07FA  00F0               	movwf	??_main
   290  07FB  0870               	movf	??_main,w
   291  07FC  00F6               	movwf	main@x
   292  07FD  2FC5               	goto	l11
   293  07FE                     __end_of_main:	
   294  007E                     btemp	set	126	;btemp
   295  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0     184
                                              0 COMMON     7     7      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       7       1       50.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       0       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK2            30      0       0       8        0.0%
BANK2               30      0       0       9        0.0%
DATA                 0      0       0      10        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed Mar 27 09:51:01 2019

             __CFG_CP$ON 0000                       l11 07C5              __CFG_CPD$ON 0000  
                     u80 07EC                       u90 07ED                      l645 07D1  
                    l655 07F5                      u117 07DD             __CFG_FOSC$HS 0000  
           __CFG_LVP$OFF 0000                     _main 07BD                     btemp 007E  
          __CFG_BOREN$ON 0000                     start 0000            __CFG_MCLRE$ON 0000  
                  ?_main 0070            __CFG_WDTE$OFF 0000                    _PORTB 0006  
                  _TRISB 0086                    main@x 0076                    status 0003  
                  wtemp0 007E          __initialization 07FE             __end_of_main 07FE  
                 ??_main 0070            main@direccion 0075           __CFG_PWRTE$OFF 0000  
__end_of__initialization 07FE           __pcstackCOMMON 0070               __pmaintext 07BD  
                _main$37 0073     end_of_initialization 07FE      start_initialization 07FE  
              ___latbits 0000            __size_of_main 0041  
