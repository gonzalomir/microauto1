

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sat Mar 30 10:41:08 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F628A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    11                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.05
    15                           ; Generated 20/12/2018 GMT
    16                           ; 
    17                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F628A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  000A                     	;# 
    56  000B                     	;# 
    57  000C                     	;# 
    58  000E                     	;# 
    59  000E                     	;# 
    60  000F                     	;# 
    61  0010                     	;# 
    62  0011                     	;# 
    63  0012                     	;# 
    64  0015                     	;# 
    65  0015                     	;# 
    66  0016                     	;# 
    67  0017                     	;# 
    68  0018                     	;# 
    69  0019                     	;# 
    70  001A                     	;# 
    71  001F                     	;# 
    72  0081                     	;# 
    73  0085                     	;# 
    74  0086                     	;# 
    75  008C                     	;# 
    76  008E                     	;# 
    77  0092                     	;# 
    78  0098                     	;# 
    79  0099                     	;# 
    80  009A                     	;# 
    81  009B                     	;# 
    82  009C                     	;# 
    83  009D                     	;# 
    84  009F                     	;# 
    85  0000                     	;# 
    86  0001                     	;# 
    87  0002                     	;# 
    88  0003                     	;# 
    89  0004                     	;# 
    90  0005                     	;# 
    91  0006                     	;# 
    92  000A                     	;# 
    93  000B                     	;# 
    94  000C                     	;# 
    95  000E                     	;# 
    96  000E                     	;# 
    97  000F                     	;# 
    98  0010                     	;# 
    99  0011                     	;# 
   100  0012                     	;# 
   101  0015                     	;# 
   102  0015                     	;# 
   103  0016                     	;# 
   104  0017                     	;# 
   105  0018                     	;# 
   106  0019                     	;# 
   107  001A                     	;# 
   108  001F                     	;# 
   109  0081                     	;# 
   110  0085                     	;# 
   111  0086                     	;# 
   112  008C                     	;# 
   113  008E                     	;# 
   114  0092                     	;# 
   115  0098                     	;# 
   116  0099                     	;# 
   117  009A                     	;# 
   118  009B                     	;# 
   119  009C                     	;# 
   120  009D                     	;# 
   121  009F                     	;# 
   122                           
   123                           	psect	strings
   124  0001                     __pstrings:	
   125  0001                     stringtab:	
   126  0001                     __stringtab:	
   127  0001                     stringcode:	
   128                           ;	String table - string pointers are 1 byte each
   129                           
   130  0001                     stringdir:	
   131  0001  3000               	movlw	high stringdir
   132  0002  008A               	movwf	10
   133  0003  0804               	movf	4,w
   134  0004  0A84               	incf	4,f
   135  0005  0782               	addwf	2,f
   136  0006                     __stringbase:	
   137  0006  3400               	retlw	0
   138  0007                     __end_of__stringtab:	
   139  0007                     _digitos:	
   140  0007  343F               	retlw	63
   141  0008  3406               	retlw	6
   142  0009  345B               	retlw	91
   143  000A  344F               	retlw	79
   144  000B  3466               	retlw	102
   145  000C  346D               	retlw	109
   146  000D  347D               	retlw	125
   147  000E  3407               	retlw	7
   148  000F  347F               	retlw	127
   149  0010  346F               	retlw	111
   150  0011  3477               	retlw	119
   151  0012  347C               	retlw	124
   152  0013  3439               	retlw	57
   153  0014  345E               	retlw	94
   154  0015  3479               	retlw	121
   155  0016  3471               	retlw	113
   156  0017                     __end_of_digitos:	
   157  0006                     _PORTB	set	6
   158  0005                     _PORTAbits	set	5
   159  0086                     _TRISB	set	134
   160  0085                     _TRISA	set	133
   161                           
   162                           	psect	cinit
   163  07FE                     start_initialization:	
   164                           ; #config settings
   165                           
   166  07FE                     __initialization:	
   167  07FE                     end_of_initialization:	
   168                           ;End of C runtime variable initialization code
   169                           
   170  07FE                     __end_of__initialization:	
   171  07FE  0183               	clrf	3
   172  07FF  2EE5               	ljmp	_main	;jump to C main() function
   173                           
   174                           	psect	cstackCOMMON
   175  0070                     __pcstackCOMMON:	
   176  0070                     ?_mostrar:	
   177  0070                     ?_main:	
   178                           ; 1 bytes @ 0x0
   179                           
   180  0070                     ?___awdiv:	
   181                           ; 1 bytes @ 0x0
   182                           
   183  0070                     ?___awmod:	
   184                           ; 2 bytes @ 0x0
   185                           
   186  0070                     ___awdiv@divisor:	
   187                           ; 2 bytes @ 0x0
   188                           
   189  0070                     ___awmod@divisor:	
   190                           ; 2 bytes @ 0x0
   191                           
   192                           
   193                           ; 2 bytes @ 0x0
   194  0070                     	ds	2
   195  0072                     ___awdiv@dividend:	
   196  0072                     ___awmod@dividend:	
   197                           ; 2 bytes @ 0x2
   198                           
   199                           
   200                           ; 2 bytes @ 0x2
   201  0072                     	ds	2
   202  0074                     ??___awdiv:	
   203  0074                     ??___awmod:	
   204                           ; 1 bytes @ 0x4
   205                           
   206                           
   207                           ; 1 bytes @ 0x4
   208  0074                     	ds	1
   209  0075                     ___awdiv@counter:	
   210  0075                     ___awmod@counter:	
   211                           ; 1 bytes @ 0x5
   212                           
   213                           
   214                           ; 1 bytes @ 0x5
   215  0075                     	ds	1
   216  0076                     ___awdiv@sign:	
   217  0076                     ___awmod@sign:	
   218                           ; 1 bytes @ 0x6
   219                           
   220                           
   221                           ; 1 bytes @ 0x6
   222  0076                     	ds	1
   223  0077                     ___awdiv@quotient:	
   224                           
   225                           ; 2 bytes @ 0x7
   226  0077                     	ds	2
   227  0079                     ??_mostrar:	
   228                           
   229                           ; 1 bytes @ 0x9
   230  0079                     	ds	3
   231  007C                     ??_main:	
   232                           
   233                           ; 1 bytes @ 0xC
   234  007C                     	ds	1
   235                           
   236                           	psect	cstackBANK0
   237  0020                     __pcstackBANK0:	
   238  0020                     mostrar@unidades:	
   239                           
   240                           ; 1 bytes @ 0x0
   241  0020                     	ds	1
   242  0021                     mostrar@decenas:	
   243                           
   244                           ; 1 bytes @ 0x1
   245  0021                     	ds	1
   246  0022                     mostrar@conta:	
   247                           
   248                           ; 1 bytes @ 0x2
   249  0022                     	ds	1
   250  0023                     main@i:	
   251                           
   252                           ; 2 bytes @ 0x3
   253  0023                     	ds	2
   254  0025                     main@contador:	
   255                           
   256                           ; 1 bytes @ 0x5
   257  0025                     	ds	1
   258                           
   259                           	psect	maintext
   260  06E5                     __pmaintext:	
   261 ;;
   262 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   263 ;;
   264 ;; *************** function _main *****************
   265 ;; Defined at:
   266 ;;		line 42 in file "main.c"
   267 ;; Parameters:    Size  Location     Type
   268 ;;		None
   269 ;; Auto vars:     Size  Location     Type
   270 ;;  i               2    3[BANK0 ] int 
   271 ;;  contador        1    5[BANK0 ] unsigned char 
   272 ;; Return value:  Size  Location     Type
   273 ;;                  1    wreg      void 
   274 ;; Registers used:
   275 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   276 ;; Tracked objects:
   277 ;;		On entry : B00/0
   278 ;;		On exit  : 0/0
   279 ;;		Unchanged: 0/0
   280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   281 ;;      Params:         0       0       0       0
   282 ;;      Locals:         0       3       0       0
   283 ;;      Temps:          1       0       0       0
   284 ;;      Totals:         1       3       0       0
   285 ;;Total ram usage:        4 bytes
   286 ;; Hardware stack levels required when called:    2
   287 ;; This function calls:
   288 ;;		_mostrar
   289 ;; This function is called by:
   290 ;;		Startup code after reset
   291 ;; This function uses a non-reentrant model
   292 ;;
   293                           
   294                           
   295                           ;psect for function _main
   296  06E5                     _main:	
   297                           
   298                           ;main.c: 43:     TRISA = 0b00;
   299                           
   300                           ;incstack = 0
   301                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   302  06E5  1683               	bsf	3,5	;RP0=1, select bank1
   303  06E6  1303               	bcf	3,6	;RP1=0, select bank1
   304  06E7  0185               	clrf	5	;volatile
   305                           
   306                           ;main.c: 44:     TRISB = 0b0000000;
   307  06E8  0186               	clrf	6	;volatile
   308                           
   309                           ;main.c: 45:     uint8_t contador = 0;
   310  06E9  1283               	bcf	3,5	;RP0=0, select bank0
   311  06EA  1303               	bcf	3,6	;RP1=0, select bank0
   312  06EB                     L1:	
   313  06EB  01A5               	clrf	main@contador
   314  06EC                     l20:	
   315                           ;main.c: 46:     while (1) {
   316                           
   317                           
   318                           ;main.c: 47:         for (int i = 0; i < 10; i++) {
   319  06EC  01A3               	clrf	main@i
   320  06ED  01A4               	clrf	main@i+1
   321  06EE                     l847:	
   322                           
   323                           ;main.c: 48:             mostrar(contador);
   324  06EE  1283               	bcf	3,5	;RP0=0, select bank0
   325  06EF  1303               	bcf	3,6	;RP1=0, select bank0
   326  06F0  0825               	movf	main@contador,w
   327  06F1  2710               	fcall	_mostrar
   328                           
   329                           ;main.c: 49:         }
   330  06F2  3001               	movlw	1
   331  06F3  1283               	bcf	3,5	;RP0=0, select bank0
   332  06F4  1303               	bcf	3,6	;RP1=0, select bank0
   333  06F5  07A3               	addwf	main@i,f
   334  06F6  1803               	skipnc
   335  06F7  0AA4               	incf	main@i+1,f
   336  06F8  3000               	movlw	0
   337  06F9  07A4               	addwf	main@i+1,f
   338  06FA  0824               	movf	main@i+1,w
   339  06FB  3A80               	xorlw	128
   340  06FC  00FF               	movwf	127
   341  06FD  3080               	movlw	128
   342  06FE  027F               	subwf	127,w
   343  06FF  1D03               	skipz
   344  0700  2F03               	goto	u415
   345  0701  300A               	movlw	10
   346  0702  0223               	subwf	main@i,w
   347  0703                     u415:	
   348  0703  1C03               	skipc
   349  0704  2EEE               	goto	l847
   350                           
   351                           ;main.c: 50:         if (contador != 99)
   352  0705  3063               	movlw	99
   353  0706  1283               	bcf	3,5	;RP0=0, select bank0
   354  0707  1303               	bcf	3,6	;RP1=0, select bank0
   355  0708  0625               	xorwf	main@contador,w
   356  0709  1903               	btfsc	3,2
   357  070A  2EEB               	goto	L1
   358                           
   359                           ;main.c: 51:             contador++;
   360  070B  3001               	movlw	1
   361  070C  00FC               	movwf	??_main
   362  070D  087C               	movf	??_main,w
   363  070E  07A5               	addwf	main@contador,f
   364  070F  2EEC               	goto	l20
   365  0710                     __end_of_main:	
   366                           ;main.c: 53:             contador = 0;
   367                           
   368                           
   369                           	psect	text1
   370  0710                     __ptext1:	
   371 ;; *************** function _mostrar *****************
   372 ;; Defined at:
   373 ;;		line 26 in file "main.c"
   374 ;; Parameters:    Size  Location     Type
   375 ;;  conta           1    wreg     unsigned char 
   376 ;; Auto vars:     Size  Location     Type
   377 ;;  conta           1    2[BANK0 ] unsigned char 
   378 ;;  decenas         1    1[BANK0 ] unsigned char 
   379 ;;  unidades        1    0[BANK0 ] unsigned char 
   380 ;; Return value:  Size  Location     Type
   381 ;;                  1    wreg      void 
   382 ;; Registers used:
   383 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   384 ;; Tracked objects:
   385 ;;		On entry : 0/0
   386 ;;		On exit  : 0/0
   387 ;;		Unchanged: 0/0
   388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   389 ;;      Params:         0       0       0       0
   390 ;;      Locals:         0       3       0       0
   391 ;;      Temps:          3       0       0       0
   392 ;;      Totals:         3       3       0       0
   393 ;;Total ram usage:        6 bytes
   394 ;; Hardware stack levels used:    1
   395 ;; Hardware stack levels required when called:    1
   396 ;; This function calls:
   397 ;;		___awdiv
   398 ;;		___awmod
   399 ;; This function is called by:
   400 ;;		_main
   401 ;; This function uses a non-reentrant model
   402 ;;
   403                           
   404                           
   405                           ;psect for function _mostrar
   406  0710                     _mostrar:	
   407                           
   408                           ;incstack = 0
   409                           ; Regs used in _mostrar: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   410                           ;mostrar@conta stored from wreg
   411  0710  1283               	bcf	3,5	;RP0=0, select bank0
   412  0711  1303               	bcf	3,6	;RP1=0, select bank0
   413  0712  00A2               	movwf	mostrar@conta
   414                           
   415                           ;main.c: 27:     uint8_t unidades = conta % 10;
   416  0713  300A               	movlw	10
   417  0714  00F0               	movwf	___awmod@divisor
   418  0715  3000               	movlw	0
   419  0716  00F1               	movwf	___awmod@divisor+1
   420  0717  0822               	movf	mostrar@conta,w
   421  0718  00F9               	movwf	??_mostrar
   422  0719  01FA               	clrf	??_mostrar+1
   423  071A  0879               	movf	??_mostrar,w
   424  071B  00F2               	movwf	___awmod@dividend
   425  071C  087A               	movf	??_mostrar+1,w
   426  071D  00F3               	movwf	___awmod@dividend+1
   427  071E  275A               	fcall	___awmod
   428  071F  0870               	movf	?___awmod,w
   429  0720  00FB               	movwf	??_mostrar+2
   430  0721  087B               	movf	??_mostrar+2,w
   431  0722  1283               	bcf	3,5	;RP0=0, select bank0
   432  0723  1303               	bcf	3,6	;RP1=0, select bank0
   433  0724  00A0               	movwf	mostrar@unidades
   434                           
   435                           ;main.c: 28:     uint8_t decenas = conta / 10;
   436  0725  300A               	movlw	10
   437  0726  00F0               	movwf	___awdiv@divisor
   438  0727  3000               	movlw	0
   439  0728  00F1               	movwf	___awdiv@divisor+1
   440  0729  0822               	movf	mostrar@conta,w
   441  072A  00F9               	movwf	??_mostrar
   442  072B  01FA               	clrf	??_mostrar+1
   443  072C  0879               	movf	??_mostrar,w
   444  072D  00F2               	movwf	___awdiv@dividend
   445  072E  087A               	movf	??_mostrar+1,w
   446  072F  00F3               	movwf	___awdiv@dividend+1
   447  0730  27A5               	fcall	___awdiv
   448  0731  0870               	movf	?___awdiv,w
   449  0732  00FB               	movwf	??_mostrar+2
   450  0733  087B               	movf	??_mostrar+2,w
   451  0734  1283               	bcf	3,5	;RP0=0, select bank0
   452  0735  1303               	bcf	3,6	;RP1=0, select bank0
   453  0736  00A1               	movwf	mostrar@decenas
   454                           
   455                           ;main.c: 30:     PORTAbits.RA0 = 1;
   456  0737  1405               	bsf	5,0	;volatile
   457                           
   458                           ;main.c: 31:     PORTAbits.RA1 = 0;
   459  0738  1085               	bcf	5,1	;volatile
   460                           
   461                           ;main.c: 32:     PORTB = digitos[unidades];
   462  0739  0820               	movf	mostrar@unidades,w
   463  073A  3E01               	addlw	low ((_digitos-__stringbase)| (0+32768))
   464  073B  0084               	movwf	4
   465  073C  2001               	fcall	stringdir
   466  073D  0086               	movwf	6	;volatile
   467                           
   468                           ;main.c: 33:     _delay((unsigned long)((25)*(4000000/4000.0)));
   469  073E  3021               	movlw	33
   470  073F  00FA               	movwf	??_mostrar+1
   471  0740  3076               	movlw	118
   472  0741  00F9               	movwf	??_mostrar
   473  0742                     u437:	
   474  0742  0BF9               	decfsz	??_mostrar,f
   475  0743  2F42               	goto	u437
   476  0744  0BFA               	decfsz	??_mostrar+1,f
   477  0745  2F42               	goto	u437
   478  0746  0000               	nop
   479                           
   480                           ;main.c: 35:     PORTAbits.RA0 = 0;
   481  0747  1283               	bcf	3,5	;RP0=0, select bank0
   482  0748  1303               	bcf	3,6	;RP1=0, select bank0
   483  0749  1005               	bcf	5,0	;volatile
   484                           
   485                           ;main.c: 36:     PORTAbits.RA1 = 1;
   486  074A  1485               	bsf	5,1	;volatile
   487                           
   488                           ;main.c: 37:     PORTB = digitos[decenas];
   489  074B  0821               	movf	mostrar@decenas,w
   490  074C  3E01               	addlw	low ((_digitos-__stringbase)| (0+32768))
   491  074D  0084               	movwf	4
   492  074E  2001               	fcall	stringdir
   493  074F  0086               	movwf	6	;volatile
   494                           
   495                           ;main.c: 38:     _delay((unsigned long)((25)*(4000000/4000.0)));
   496  0750  3021               	movlw	33
   497  0751  00FA               	movwf	??_mostrar+1
   498  0752  3076               	movlw	118
   499  0753  00F9               	movwf	??_mostrar
   500  0754                     u447:	
   501  0754  0BF9               	decfsz	??_mostrar,f
   502  0755  2F54               	goto	u447
   503  0756  0BFA               	decfsz	??_mostrar+1,f
   504  0757  2F54               	goto	u447
   505  0758  0000               	nop
   506  0759  0008               	return
   507  075A                     __end_of_mostrar:	
   508                           
   509                           	psect	text2
   510  075A                     __ptext2:	
   511 ;; *************** function ___awmod *****************
   512 ;; Defined at:
   513 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awmod.c"
   514 ;; Parameters:    Size  Location     Type
   515 ;;  divisor         2    0[COMMON] int 
   516 ;;  dividend        2    2[COMMON] int 
   517 ;; Auto vars:     Size  Location     Type
   518 ;;  sign            1    6[COMMON] unsigned char 
   519 ;;  counter         1    5[COMMON] unsigned char 
   520 ;; Return value:  Size  Location     Type
   521 ;;                  2    0[COMMON] int 
   522 ;; Registers used:
   523 ;;		wreg, status,2, status,0
   524 ;; Tracked objects:
   525 ;;		On entry : 0/0
   526 ;;		On exit  : 0/0
   527 ;;		Unchanged: 0/0
   528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   529 ;;      Params:         4       0       0       0
   530 ;;      Locals:         2       0       0       0
   531 ;;      Temps:          1       0       0       0
   532 ;;      Totals:         7       0       0       0
   533 ;;Total ram usage:        7 bytes
   534 ;; Hardware stack levels used:    1
   535 ;; This function calls:
   536 ;;		Nothing
   537 ;; This function is called by:
   538 ;;		_mostrar
   539 ;; This function uses a non-reentrant model
   540 ;;
   541                           
   542                           
   543                           ;psect for function ___awmod
   544  075A                     ___awmod:	
   545                           
   546                           ;incstack = 0
   547                           ; Regs used in ___awmod: [wreg+status,2+status,0]
   548  075A  01F6               	clrf	___awmod@sign
   549  075B  1FF3               	btfss	___awmod@dividend+1,7
   550  075C  2F64               	goto	l791
   551  075D  09F2               	comf	___awmod@dividend,f
   552  075E  09F3               	comf	___awmod@dividend+1,f
   553  075F  0AF2               	incf	___awmod@dividend,f
   554  0760  1903               	skipnz
   555  0761  0AF3               	incf	___awmod@dividend+1,f
   556  0762  01F6               	clrf	___awmod@sign
   557  0763  0AF6               	incf	___awmod@sign,f
   558  0764                     l791:	
   559  0764  1FF1               	btfss	___awmod@divisor+1,7
   560  0765  2F6B               	goto	l795
   561  0766  09F0               	comf	___awmod@divisor,f
   562  0767  09F1               	comf	___awmod@divisor+1,f
   563  0768  0AF0               	incf	___awmod@divisor,f
   564  0769  1903               	skipnz
   565  076A  0AF1               	incf	___awmod@divisor+1,f
   566  076B                     l795:	
   567  076B  0870               	movf	___awmod@divisor,w
   568  076C  0471               	iorwf	___awmod@divisor+1,w
   569  076D  1903               	btfsc	3,2
   570  076E  2F98               	goto	l813
   571  076F  01F5               	clrf	___awmod@counter
   572  0770  0AF5               	incf	___awmod@counter,f
   573  0771                     l803:	
   574  0771  1BF1               	btfsc	___awmod@divisor+1,7
   575  0772  2F7F               	goto	l805
   576  0773  3001               	movlw	1
   577  0774                     u355:	
   578  0774  1003               	clrc
   579  0775  0DF0               	rlf	___awmod@divisor,f
   580  0776  0DF1               	rlf	___awmod@divisor+1,f
   581  0777  3EFF               	addlw	-1
   582  0778  1D03               	skipz
   583  0779  2F74               	goto	u355
   584  077A  3001               	movlw	1
   585  077B  00F4               	movwf	??___awmod
   586  077C  0874               	movf	??___awmod,w
   587  077D  07F5               	addwf	___awmod@counter,f
   588  077E  2F71               	goto	l803
   589  077F                     l805:	
   590  077F  0871               	movf	___awmod@divisor+1,w
   591  0780  0273               	subwf	___awmod@dividend+1,w
   592  0781  1D03               	skipz
   593  0782  2F85               	goto	u375
   594  0783  0870               	movf	___awmod@divisor,w
   595  0784  0272               	subwf	___awmod@dividend,w
   596  0785                     u375:	
   597  0785  1C03               	skipc
   598  0786  2F8D               	goto	l809
   599  0787  0870               	movf	___awmod@divisor,w
   600  0788  02F2               	subwf	___awmod@dividend,f
   601  0789  0871               	movf	___awmod@divisor+1,w
   602  078A  1C03               	skipc
   603  078B  03F3               	decf	___awmod@dividend+1,f
   604  078C  02F3               	subwf	___awmod@dividend+1,f
   605  078D                     l809:	
   606  078D  3001               	movlw	1
   607  078E                     u385:	
   608  078E  1003               	clrc
   609  078F  0CF1               	rrf	___awmod@divisor+1,f
   610  0790  0CF0               	rrf	___awmod@divisor,f
   611  0791  3EFF               	addlw	-1
   612  0792  1D03               	skipz
   613  0793  2F8E               	goto	u385
   614  0794  3001               	movlw	1
   615  0795  02F5               	subwf	___awmod@counter,f
   616  0796  1D03               	btfss	3,2
   617  0797  2F7F               	goto	l805
   618  0798                     l813:	
   619  0798  0876               	movf	___awmod@sign,w
   620  0799  1903               	btfsc	3,2
   621  079A  2FA0               	goto	l817
   622  079B  09F2               	comf	___awmod@dividend,f
   623  079C  09F3               	comf	___awmod@dividend+1,f
   624  079D  0AF2               	incf	___awmod@dividend,f
   625  079E  1903               	skipnz
   626  079F  0AF3               	incf	___awmod@dividend+1,f
   627  07A0                     l817:	
   628  07A0  0873               	movf	___awmod@dividend+1,w
   629  07A1  00F1               	movwf	?___awmod+1
   630  07A2  0872               	movf	___awmod@dividend,w
   631  07A3  00F0               	movwf	?___awmod
   632  07A4  0008               	return
   633  07A5                     __end_of___awmod:	
   634                           
   635                           	psect	text3
   636  07A5                     __ptext3:	
   637 ;; *************** function ___awdiv *****************
   638 ;; Defined at:
   639 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awdiv.c"
   640 ;; Parameters:    Size  Location     Type
   641 ;;  divisor         2    0[COMMON] int 
   642 ;;  dividend        2    2[COMMON] int 
   643 ;; Auto vars:     Size  Location     Type
   644 ;;  quotient        2    7[COMMON] int 
   645 ;;  sign            1    6[COMMON] unsigned char 
   646 ;;  counter         1    5[COMMON] unsigned char 
   647 ;; Return value:  Size  Location     Type
   648 ;;                  2    0[COMMON] int 
   649 ;; Registers used:
   650 ;;		wreg, status,2, status,0
   651 ;; Tracked objects:
   652 ;;		On entry : 0/0
   653 ;;		On exit  : 0/0
   654 ;;		Unchanged: 0/0
   655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   656 ;;      Params:         4       0       0       0
   657 ;;      Locals:         4       0       0       0
   658 ;;      Temps:          1       0       0       0
   659 ;;      Totals:         9       0       0       0
   660 ;;Total ram usage:        9 bytes
   661 ;; Hardware stack levels used:    1
   662 ;; This function calls:
   663 ;;		Nothing
   664 ;; This function is called by:
   665 ;;		_mostrar
   666 ;; This function uses a non-reentrant model
   667 ;;
   668                           
   669                           
   670                           ;psect for function ___awdiv
   671  07A5                     ___awdiv:	
   672                           
   673                           ;incstack = 0
   674                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
   675  07A5  01F6               	clrf	___awdiv@sign
   676  07A6  1FF1               	btfss	___awdiv@divisor+1,7
   677  07A7  2FAF               	goto	l747
   678  07A8  09F0               	comf	___awdiv@divisor,f
   679  07A9  09F1               	comf	___awdiv@divisor+1,f
   680  07AA  0AF0               	incf	___awdiv@divisor,f
   681  07AB  1903               	skipnz
   682  07AC  0AF1               	incf	___awdiv@divisor+1,f
   683  07AD  01F6               	clrf	___awdiv@sign
   684  07AE  0AF6               	incf	___awdiv@sign,f
   685  07AF                     l747:	
   686  07AF  1FF3               	btfss	___awdiv@dividend+1,7
   687  07B0  2FBA               	goto	l753
   688  07B1  09F2               	comf	___awdiv@dividend,f
   689  07B2  09F3               	comf	___awdiv@dividend+1,f
   690  07B3  0AF2               	incf	___awdiv@dividend,f
   691  07B4  1903               	skipnz
   692  07B5  0AF3               	incf	___awdiv@dividend+1,f
   693  07B6  3001               	movlw	1
   694  07B7  00F4               	movwf	??___awdiv
   695  07B8  0874               	movf	??___awdiv,w
   696  07B9  06F6               	xorwf	___awdiv@sign,f
   697  07BA                     l753:	
   698  07BA  01F7               	clrf	___awdiv@quotient
   699  07BB  01F8               	clrf	___awdiv@quotient+1
   700  07BC  0870               	movf	___awdiv@divisor,w
   701  07BD  0471               	iorwf	___awdiv@divisor+1,w
   702  07BE  1903               	btfsc	3,2
   703  07BF  2FF1               	goto	l775
   704  07C0  01F5               	clrf	___awdiv@counter
   705  07C1  0AF5               	incf	___awdiv@counter,f
   706  07C2                     l763:	
   707  07C2  1BF1               	btfsc	___awdiv@divisor+1,7
   708  07C3  2FD0               	goto	l765
   709  07C4  3001               	movlw	1
   710  07C5                     u255:	
   711  07C5  1003               	clrc
   712  07C6  0DF0               	rlf	___awdiv@divisor,f
   713  07C7  0DF1               	rlf	___awdiv@divisor+1,f
   714  07C8  3EFF               	addlw	-1
   715  07C9  1D03               	skipz
   716  07CA  2FC5               	goto	u255
   717  07CB  3001               	movlw	1
   718  07CC  00F4               	movwf	??___awdiv
   719  07CD  0874               	movf	??___awdiv,w
   720  07CE  07F5               	addwf	___awdiv@counter,f
   721  07CF  2FC2               	goto	l763
   722  07D0                     l765:	
   723  07D0  3001               	movlw	1
   724  07D1                     u275:	
   725  07D1  1003               	clrc
   726  07D2  0DF7               	rlf	___awdiv@quotient,f
   727  07D3  0DF8               	rlf	___awdiv@quotient+1,f
   728  07D4  3EFF               	addlw	-1
   729  07D5  1D03               	skipz
   730  07D6  2FD1               	goto	u275
   731  07D7  0871               	movf	___awdiv@divisor+1,w
   732  07D8  0273               	subwf	___awdiv@dividend+1,w
   733  07D9  1D03               	skipz
   734  07DA  2FDD               	goto	u285
   735  07DB  0870               	movf	___awdiv@divisor,w
   736  07DC  0272               	subwf	___awdiv@dividend,w
   737  07DD                     u285:	
   738  07DD  1C03               	skipc
   739  07DE  2FE6               	goto	l771
   740  07DF  0870               	movf	___awdiv@divisor,w
   741  07E0  02F2               	subwf	___awdiv@dividend,f
   742  07E1  0871               	movf	___awdiv@divisor+1,w
   743  07E2  1C03               	skipc
   744  07E3  03F3               	decf	___awdiv@dividend+1,f
   745  07E4  02F3               	subwf	___awdiv@dividend+1,f
   746  07E5  1477               	bsf	___awdiv@quotient,0
   747  07E6                     l771:	
   748  07E6  3001               	movlw	1
   749  07E7                     u295:	
   750  07E7  1003               	clrc
   751  07E8  0CF1               	rrf	___awdiv@divisor+1,f
   752  07E9  0CF0               	rrf	___awdiv@divisor,f
   753  07EA  3EFF               	addlw	-1
   754  07EB  1D03               	skipz
   755  07EC  2FE7               	goto	u295
   756  07ED  3001               	movlw	1
   757  07EE  02F5               	subwf	___awdiv@counter,f
   758  07EF  1D03               	btfss	3,2
   759  07F0  2FD0               	goto	l765
   760  07F1                     l775:	
   761  07F1  0876               	movf	___awdiv@sign,w
   762  07F2  1903               	btfsc	3,2
   763  07F3  2FF9               	goto	l779
   764  07F4  09F7               	comf	___awdiv@quotient,f
   765  07F5  09F8               	comf	___awdiv@quotient+1,f
   766  07F6  0AF7               	incf	___awdiv@quotient,f
   767  07F7  1903               	skipnz
   768  07F8  0AF8               	incf	___awdiv@quotient+1,f
   769  07F9                     l779:	
   770  07F9  0878               	movf	___awdiv@quotient+1,w
   771  07FA  00F1               	movwf	?___awdiv+1
   772  07FB  0877               	movf	___awdiv@quotient,w
   773  07FC  00F0               	movwf	?___awdiv
   774  07FD  0008               	return
   775  07FE                     __end_of___awdiv:	
   776  007E                     btemp	set	126	;btemp
   777  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    16
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80      6       6
    BANK1            80      0       0
    BANK2            48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_mostrar
    _mostrar->___awdiv

Critical Paths under _main in BANK0

    _main->_mostrar

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    1083
                                             12 COMMON     1     1      0
                                              3 BANK0      3     3      0
                            _mostrar
 ---------------------------------------------------------------------------------
 (1) _mostrar                                              6     6      0     990
                                              9 COMMON     3     3      0
                                              0 BANK0      3     3      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _mostrar
     ___awdiv
     ___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      D       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50      6       6       3        7.5%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       0       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK2            30      0       0       8        0.0%
BANK2               30      0       0       9        0.0%
DATA                 0      0       0      10        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sat Mar 30 10:41:08 2019

                      pc 0002                       l20 06EC             ___awdiv@sign 0076  
                     fsr 0004                      l803 0771                      l805 077F  
                    l813 0798                      l753 07BA                      l817 07A0  
                    l809 078D                      l771 07E6                      l763 07C2  
                    l747 07AF                      l765 07D0                      l775 07F1  
                    l791 0764                      l847 06EE                      l779 07F9  
                    l795 076B                      u255 07C5                      u415 0703  
                    u275 07D1                      u355 0774                      u285 07DD  
                    u437 0742                      u295 07E7                      u375 0785  
                    u447 0754                      u385 078E                      fsr0 0004  
           ___awmod@sign 0076                     _main 06E5                     btemp 007E  
                   start 0000             main@contador 0025                    ?_main 0070  
        __end_of___awdiv 07FE          __end_of___awmod 07A5          ___awdiv@divisor 0070  
        ___awdiv@counter 0075                    _PORTB 0006                    _TRISA 0085  
                  _TRISB 0086          __end_of_digitos 0017                    main@i 0023  
                  pclath 000A          __end_of_mostrar 075A                    status 0003  
                  wtemp0 007E          __initialization 07FE             __end_of_main 0710  
                 ??_main 007C         ___awdiv@dividend 0072                ??___awdiv 0074  
              ??___awmod 0074         ___awdiv@quotient 0077          ___awmod@divisor 0070  
        ___awmod@counter 0075                ??_mostrar 0079  __end_of__initialization 07FE  
         __pcstackCOMMON 0070               __pmaintext 06E5               __stringtab 0001  
                ___awdiv 07A5                  ___awmod 075A                  _digitos 0007  
                __ptext1 0710                  __ptext2 075A                  __ptext3 07A5  
       ___awmod@dividend 0072                  _mostrar 0710     end_of_initialization 07FE  
              _PORTAbits 0005      start_initialization 07FE                ___latbits 0000  
          __pcstackBANK0 0020                 ?___awdiv 0070                 ?___awmod 0070  
              __pstrings 0001                 ?_mostrar 0070          mostrar@unidades 0020  
            __stringbase 0006         __size_of___awdiv 0059         __size_of___awmod 004B  
     __end_of__stringtab 0007         __size_of_mostrar 004A           mostrar@decenas 0021  
          __size_of_main 002B                stringcode 0001             mostrar@conta 0022  
               stringdir 0001                 stringtab 0001  
