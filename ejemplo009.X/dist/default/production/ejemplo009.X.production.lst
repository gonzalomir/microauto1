

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sat May 18 12:22:38 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F628A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	dabs	1,0x7E,2
    39  0000                     
    40                           ; Version 2.05
    41                           ; Generated 20/12/2018 GMT
    42                           ; 
    43                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC16F628A Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     	;# 
    75  0001                     	;# 
    76  0002                     	;# 
    77  0003                     	;# 
    78  0004                     	;# 
    79  0005                     	;# 
    80  0006                     	;# 
    81  000A                     	;# 
    82  000B                     	;# 
    83  000C                     	;# 
    84  000E                     	;# 
    85  000E                     	;# 
    86  000F                     	;# 
    87  0010                     	;# 
    88  0011                     	;# 
    89  0012                     	;# 
    90  0015                     	;# 
    91  0015                     	;# 
    92  0016                     	;# 
    93  0017                     	;# 
    94  0018                     	;# 
    95  0019                     	;# 
    96  001A                     	;# 
    97  001F                     	;# 
    98  0081                     	;# 
    99  0085                     	;# 
   100  0086                     	;# 
   101  008C                     	;# 
   102  008E                     	;# 
   103  0092                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009F                     	;# 
   111  0000                     	;# 
   112  0001                     	;# 
   113  0002                     	;# 
   114  0003                     	;# 
   115  0004                     	;# 
   116  0005                     	;# 
   117  0006                     	;# 
   118  000A                     	;# 
   119  000B                     	;# 
   120  000C                     	;# 
   121  000E                     	;# 
   122  000E                     	;# 
   123  000F                     	;# 
   124  0010                     	;# 
   125  0011                     	;# 
   126  0012                     	;# 
   127  0015                     	;# 
   128  0015                     	;# 
   129  0016                     	;# 
   130  0017                     	;# 
   131  0018                     	;# 
   132  0019                     	;# 
   133  001A                     	;# 
   134  001F                     	;# 
   135  0081                     	;# 
   136  0085                     	;# 
   137  0086                     	;# 
   138  008C                     	;# 
   139  008E                     	;# 
   140  0092                     	;# 
   141  0098                     	;# 
   142  0099                     	;# 
   143  009A                     	;# 
   144  009B                     	;# 
   145  009C                     	;# 
   146  009D                     	;# 
   147  009F                     	;# 
   148  0000                     	;# 
   149  0001                     	;# 
   150  0002                     	;# 
   151  0003                     	;# 
   152  0004                     	;# 
   153  0005                     	;# 
   154  0006                     	;# 
   155  000A                     	;# 
   156  000B                     	;# 
   157  000C                     	;# 
   158  000E                     	;# 
   159  000E                     	;# 
   160  000F                     	;# 
   161  0010                     	;# 
   162  0011                     	;# 
   163  0012                     	;# 
   164  0015                     	;# 
   165  0015                     	;# 
   166  0016                     	;# 
   167  0017                     	;# 
   168  0018                     	;# 
   169  0019                     	;# 
   170  001A                     	;# 
   171  001F                     	;# 
   172  0081                     	;# 
   173  0085                     	;# 
   174  0086                     	;# 
   175  008C                     	;# 
   176  008E                     	;# 
   177  0092                     	;# 
   178  0098                     	;# 
   179  0099                     	;# 
   180  009A                     	;# 
   181  009B                     	;# 
   182  009C                     	;# 
   183  009D                     	;# 
   184  009F                     	;# 
   185                           
   186                           	psect	idataBANK1
   187  0000'                    __pidataBANK1:	
   188                           
   189                           ;initializer for main@F701
   190  0000' 3406               	retlw	6
   191  0001' 3400               	retlw	0
   192  0002' 341A               	retlw	26
   193  0003' 342C               	retlw	44
   194  0004' 343E               	retlw	62
   195                           
   196                           	psect	strings
   197  0000'                    __pstrings:	
   198  0000'                    stringtab:	
   199  0000'                    __stringtab:	
   200  0000'                    stringcode:	
   201                           ;	String table - string pointers are 1 byte each
   202                           
   203  0000'                    stringdir:	
   204  0000' 3000'              	movlw	high stringdir
   205  0001' 008A               	movwf	10
   206  0002' 0804               	movf	4,w
   207  0003' 0A84               	incf	4,f
   208  0004' 0782               	addwf	2,f
   209  0005'                    __stringbase:	
   210  0005' 3400               	retlw	0
   211  0006'                    __end_of__stringtab:	
   212  0006'                    _dpowers:	
   213  0006' 3401               	retlw	1
   214  0007' 3400               	retlw	0
   215  0008' 3400               	retlw	0
   216  0009' 3400               	retlw	0
   217  000A' 340A               	retlw	10
   218  000B' 3400               	retlw	0
   219  000C' 3400               	retlw	0
   220  000D' 3400               	retlw	0
   221  000E' 3464               	retlw	100
   222  000F' 3400               	retlw	0
   223  0010' 3400               	retlw	0
   224  0011' 3400               	retlw	0
   225  0012' 34E8               	retlw	232
   226  0013' 3403               	retlw	3
   227  0014' 3400               	retlw	0
   228  0015' 3400               	retlw	0
   229  0016' 3410               	retlw	16
   230  0017' 3427               	retlw	39
   231  0018' 3400               	retlw	0
   232  0019' 3400               	retlw	0
   233  001A' 34A0               	retlw	160
   234  001B' 3486               	retlw	134
   235  001C' 3401               	retlw	1
   236  001D' 3400               	retlw	0
   237  001E' 3440               	retlw	64
   238  001F' 3442               	retlw	66
   239  0020' 340F               	retlw	15
   240  0021' 3400               	retlw	0
   241  0022' 3480               	retlw	128
   242  0023' 3496               	retlw	150
   243  0024' 3498               	retlw	152
   244  0025' 3400               	retlw	0
   245  0026' 3400               	retlw	0
   246  0027' 34E1               	retlw	225
   247  0028' 34F5               	retlw	245
   248  0029' 3405               	retlw	5
   249  002A' 3400               	retlw	0
   250  002B' 34CA               	retlw	202
   251  002C' 349A               	retlw	154
   252  002D' 343B               	retlw	59
   253  002E'                    __end_of_dpowers:	
   254  0005                     _PORTA	set	5
   255  0006                     _PORTB	set	6
   256  0085                     _TRISA	set	133
   257  0081                     _OPTION_REGbits	set	129
   258  0086                     _TRISB	set	134
   259  002E'                    STR_1:	
   260  002E' 3449               	retlw	73	;'I'
   261  002F' 346E               	retlw	110	;'n'
   262  0030' 3474               	retlw	116	;'t'
   263  0031' 3420               	retlw	32	;' '
   264  0032' 3461               	retlw	97	;'a'
   265  0033' 3420               	retlw	32	;' '
   266  0034' 3453               	retlw	83	;'S'
   267  0035' 3474               	retlw	116	;'t'
   268  0036' 3472               	retlw	114	;'r'
   269  0037' 3469               	retlw	105	;'i'
   270  0038' 346E               	retlw	110	;'n'
   271  0039' 3467               	retlw	103	;'g'
   272  003A' 3400               	retlw	0
   273  003B'                    STR_2:	
   274  003B' 3425               	retlw	37	;'%'
   275  003C' 346C               	retlw	108	;'l'
   276  003D' 3475               	retlw	117	;'u'
   277  003E' 342E               	retlw	46	;'.'
   278  003F' 3425               	retlw	37	;'%'
   279  0040' 3436               	retlw	54	;'6'
   280  0041' 342E               	retlw	46	;'.'
   281  0042' 3436               	retlw	54	;'6'
   282  0043' 346C               	retlw	108	;'l'
   283  0044' 3475               	retlw	117	;'u'
   284  0045' 3400               	retlw	0
   285                           
   286                           	psect	cinit
   287  0000'                    start_initialization:	
   288                           ; #config settings
   289                           
   290  0000'                    __initialization:	
   291                           
   292                           ; Initialize objects allocated to BANK1
   293  0000' 1683               	bsf	3,5	;RP0=1, select bank1
   294  0001' 1303               	bcf	3,6	;RP1=0, select bank1
   295  0002' 2000'              	fcall	__pidataBANK1	;fetch initializer
   296  0003' 0080'              	movwf	__pdataBANK1& (0+127)
   297  0004' 2000'              	fcall	__pidataBANK1+1	;fetch initializer
   298  0005' 0080'              	movwf	(__pdataBANK1+1)& (0+127)
   299  0006' 2000'              	fcall	__pidataBANK1+2	;fetch initializer
   300  0007' 0080'              	movwf	(__pdataBANK1+2)& (0+127)
   301  0008' 2000'              	fcall	__pidataBANK1+3	;fetch initializer
   302  0009' 0080'              	movwf	(__pdataBANK1+3)& (0+127)
   303  000A' 2000'              	fcall	__pidataBANK1+4	;fetch initializer
   304  000B' 0080'              	movwf	(__pdataBANK1+4)& (0+127)
   305                           
   306                           ; Clear objects allocated to BANK1
   307  000C' 1383               	bcf	3,7	;select IRP bank0
   308  000D' 3000'              	movlw	low __pbssBANK1
   309  000E' 0084               	movwf	4
   310  000F' 3000'              	movlw	low (__pbssBANK1+17)
   311  0010' 2000'              	fcall	clear_ram0
   312                           
   313                           ; Clear objects allocated to BANK0
   314  0011' 3000'              	movlw	low __pbssBANK0
   315  0012' 0084               	movwf	4
   316  0013' 3000'              	movlw	low (__pbssBANK0+5)
   317  0014' 2000'              	fcall	clear_ram0
   318  0015'                    end_of_initialization:	
   319                           ;End of C runtime variable initialization code
   320                           
   321  0015'                    __end_of__initialization:	
   322  0015' 0183               	clrf	3
   323  0016' 2800'              	ljmp	_main	;jump to C main() function
   324                           
   325                           	psect	bssBANK0
   326  0000'                    __pbssBANK0:	
   327  0000'                    _lcd:	
   328  0000'                    	ds	5
   329                           
   330                           	psect	bssBANK1
   331  0000'                    __pbssBANK1:	
   332  0000'                    ftoa@buf:	
   333  0000'                    	ds	17
   334                           
   335                           	psect	dataBANK1
   336  0000'                    __pdataBANK1:	
   337  0000'                    main@F701:	
   338  0000'                    	ds	5
   339                           
   340                           	psect	clrtext
   341  0000'                    clear_ram0:	
   342                           ;	Called with FSR containing the base address, and
   343                           ;	W with the last address+1
   344                           
   345  0000' 0064               	clrwdt	;clear the watchdog before getting into this loop
   346  0001'                    clrloop0:	
   347  0001' 0180               	clrf	0	;clear RAM location pointed to by FSR
   348  0002' 0A84               	incf	4,f	;increment pointer
   349  0003' 0604               	xorwf	4,w	;XOR with final address
   350  0004' 1903               	btfsc	3,2	;have we reached the end yet?
   351  0005' 3400               	retlw	0	;all done for this memory range, return
   352  0006' 0604               	xorwf	4,w	;XOR again to restore value
   353  0007' 2801'              	goto	clrloop0	;do the next byte
   354                           
   355                           	psect	cstackCOMMON
   356  0000'                    __pcstackCOMMON:	
   357  0000'                    ?_isdigit:	
   358  0000'                    ?___flge:	
   359                           ; 1 bit 
   360                           
   361  0000'                    ?_LCD_Write:	
   362                           ; 1 bit 
   363                           
   364  0000'                    ?_LCD_putrs:	
   365                           ; 1 bytes @ 0x0
   366                           
   367  0000'                    ?_LCD_puts:	
   368                           ; 1 bytes @ 0x0
   369                           
   370  0000'                    ??_isdigit:	
   371                           ; 1 bytes @ 0x0
   372                           
   373  0000'                    ?_main:	
   374                           ; 1 bytes @ 0x0
   375                           
   376  0000'                    ?_LCD_Out:	
   377                           ; 1 bytes @ 0x0
   378                           
   379  0000'                    ??_LCD_Out:	
   380                           ; 1 bytes @ 0x0
   381                           
   382  0000'                    ?_LCD_putc:	
   383                           ; 1 bytes @ 0x0
   384                           
   385  0000'                    ?__Umul8_16:	
   386                           ; 1 bytes @ 0x0
   387                           
   388  0000'                    ?___wmul:	
   389                           ; 2 bytes @ 0x0
   390                           
   391  0000'                    ?___lwdiv:	
   392                           ; 2 bytes @ 0x0
   393                           
   394  0000'                    ?___lwmod:	
   395                           ; 2 bytes @ 0x0
   396                           
   397  0000'                    ?___lldiv:	
   398                           ; 2 bytes @ 0x0
   399                           
   400  0000'                    ?___flneg:	
   401                           ; 4 bytes @ 0x0
   402                           
   403  0000'                    ?___fladd:	
   404                           ; 4 bytes @ 0x0
   405                           
   406  0000'                    ?___xxtofl:	
   407                           ; 4 bytes @ 0x0
   408                           
   409  0000'                    _isdigit$654:	
   410                           ; 4 bytes @ 0x0
   411                           
   412  0000'                    __Umul8_16@multiplicand:	
   413                           ; 1 bytes @ 0x0
   414                           
   415  0000'                    ___wmul@multiplier:	
   416                           ; 1 bytes @ 0x0
   417                           
   418  0000'                    ___lwdiv@divisor:	
   419                           ; 2 bytes @ 0x0
   420                           
   421  0000'                    ___lwmod@divisor:	
   422                           ; 2 bytes @ 0x0
   423                           
   424  0000'                    ___lldiv@divisor:	
   425                           ; 2 bytes @ 0x0
   426                           
   427  0000'                    ___flge@ff1:	
   428                           ; 4 bytes @ 0x0
   429                           
   430  0000'                    ___flneg@f1:	
   431                           ; 4 bytes @ 0x0
   432                           
   433  0000'                    ___fladd@b:	
   434                           ; 4 bytes @ 0x0
   435                           
   436  0000'                    ___xxtofl@val:	
   437                           ; 4 bytes @ 0x0
   438                           
   439                           
   440                           ; 4 bytes @ 0x0
   441  0000'                    	ds	1
   442  0001'                    isdigit@c:	
   443                           
   444                           ; 1 bytes @ 0x1
   445  0001'                    	ds	1
   446  0002'                    ??__Umul8_16:	
   447  0002'                    ___wmul@multiplicand:	
   448                           ; 1 bytes @ 0x2
   449                           
   450  0002'                    ___lwdiv@dividend:	
   451                           ; 2 bytes @ 0x2
   452                           
   453  0002'                    ___lwmod@dividend:	
   454                           ; 2 bytes @ 0x2
   455                           
   456                           
   457                           ; 2 bytes @ 0x2
   458  0002'                    	ds	1
   459  0003'                    LCD_Out@c:	
   460                           
   461                           ; 1 bytes @ 0x3
   462  0003'                    	ds	1
   463  0004'                    ??_LCD_Write:	
   464  0004'                    ??_LCD_putc:	
   465                           ; 1 bytes @ 0x4
   466                           
   467  0004'                    ??___wmul:	
   468                           ; 1 bytes @ 0x4
   469                           
   470  0004'                    ??___flneg:	
   471                           ; 1 bytes @ 0x4
   472                           
   473  0004'                    ??___lwdiv:	
   474                           ; 1 bytes @ 0x4
   475                           
   476  0004'                    ??___lwmod:	
   477                           ; 1 bytes @ 0x4
   478                           
   479  0004'                    ??___xxtofl:	
   480                           ; 1 bytes @ 0x4
   481                           
   482  0004'                    ___wmul@product:	
   483                           ; 1 bytes @ 0x4
   484                           
   485  0004'                    __Umul8_16@product:	
   486                           ; 2 bytes @ 0x4
   487                           
   488  0004'                    ___lldiv@dividend:	
   489                           ; 2 bytes @ 0x4
   490                           
   491  0004'                    ___flge@ff2:	
   492                           ; 4 bytes @ 0x4
   493                           
   494  0004'                    ___fladd@a:	
   495                           ; 4 bytes @ 0x4
   496                           
   497                           
   498                           ; 4 bytes @ 0x4
   499  0004'                    	ds	1
   500  0005'                    ___lwmod@counter:	
   501  0005'                    ___lwdiv@quotient:	
   502                           ; 1 bytes @ 0x5
   503                           
   504                           
   505                           ; 2 bytes @ 0x5
   506  0005'                    	ds	1
   507  0006'                    __Umul8_16@word_mpld:	
   508                           
   509                           ; 2 bytes @ 0x6
   510  0006'                    	ds	1
   511  0007'                    LCD_Write@c:	
   512  0007'                    LCD_putc@c:	
   513                           ; 1 bytes @ 0x7
   514                           
   515  0007'                    ___lwdiv@counter:	
   516                           ; 1 bytes @ 0x7
   517                           
   518                           
   519                           ; 1 bytes @ 0x7
   520  0007'                    	ds	1
   521  0008'                    ?_LCD_Init:	
   522  0008'                    ??_LCD_putrs:	
   523                           ; 1 bytes @ 0x8
   524                           
   525  0008'                    ??_LCD_puts:	
   526                           ; 1 bytes @ 0x8
   527                           
   528  0008'                    ?_utoa:	
   529                           ; 1 bytes @ 0x8
   530                           
   531  0008'                    ??___lldiv:	
   532                           ; 1 bytes @ 0x8
   533                           
   534  0008'                    ??___flge:	
   535                           ; 1 bytes @ 0x8
   536                           
   537  0008'                    ___fladd@signs:	
   538                           ; 1 bytes @ 0x8
   539                           
   540  0008'                    ___xxtofl@sign:	
   541                           ; 1 bytes @ 0x8
   542                           
   543  0008'                    __Umul8_16@multiplier:	
   544                           ; 1 bytes @ 0x8
   545                           
   546  0008'                    LCD_putrs@i:	
   547                           ; 1 bytes @ 0x8
   548                           
   549  0008'                    utoa@val:	
   550                           ; 2 bytes @ 0x8
   551                           
   552  0008'                    LCD_Init@display:	
   553                           ; 2 bytes @ 0x8
   554                           
   555                           
   556                           ; 5 bytes @ 0x8
   557  0008'                    	ds	1
   558  0009'                    ??___flmul:	
   559  0009'                    ___fladd@aexp:	
   560                           ; 1 bytes @ 0x9
   561                           
   562  0009'                    ___xxtofl@exp:	
   563                           ; 1 bytes @ 0x9
   564                           
   565  0009'                    LCD_puts@i:	
   566                           ; 1 bytes @ 0x9
   567                           
   568  0009'                    ___lldiv@quotient:	
   569                           ; 2 bytes @ 0x9
   570                           
   571                           
   572                           ; 4 bytes @ 0x9
   573  0009'                    	ds	1
   574  000A'                    LCD_putrs@a:	
   575  000A'                    ___fladd@bexp:	
   576                           ; 1 bytes @ 0xA
   577                           
   578  000A'                    utoa@base:	
   579                           ; 1 bytes @ 0xA
   580                           
   581  000A'                    ___xxtofl@arg:	
   582                           ; 2 bytes @ 0xA
   583                           
   584                           
   585                           ; 4 bytes @ 0xA
   586  000A'                    	ds	1
   587  000B'                    LCD_puts@a:	
   588  000B'                    ___fladd@grs:	
   589                           ; 1 bytes @ 0xB
   590                           
   591                           
   592                           ; 1 bytes @ 0xB
   593  000B'                    	ds	1
   594  000C'                    ??_utoa:	
   595                           
   596                           ; 1 bytes @ 0xC
   597  000C'                    	ds	1
   598  000D'                    ??_itoa:	
   599  000D'                    LCD_Init@cmd:	
   600                           ; 1 bytes @ 0xD
   601                           
   602  000D'                    ___lldiv@counter:	
   603                           ; 1 bytes @ 0xD
   604                           
   605                           
   606                           ; 1 bytes @ 0xD
   607  000D'                    	ds	1
   608  000E'                    ??___flsub:	
   609                           
   610                           	psect	cstackBANK0
   611  0000'                    __pcstackBANK0:	
   612                           ; 1 bytes @ 0xE
   613                           
   614  0000'                    ??_LCD_Init:	
   615  0000'                    ??___fladd:	
   616                           ; 1 bytes @ 0x0
   617                           
   618  0000'                    ?___llmod:	
   619                           ; 1 bytes @ 0x0
   620                           
   621  0000'                    ?___flmul:	
   622                           ; 4 bytes @ 0x0
   623                           
   624  0000'                    utoa@v:	
   625                           ; 4 bytes @ 0x0
   626                           
   627  0000'                    ___llmod@divisor:	
   628                           ; 2 bytes @ 0x0
   629                           
   630  0000'                    ___flmul@b:	
   631                           ; 4 bytes @ 0x0
   632                           
   633                           
   634                           ; 4 bytes @ 0x0
   635  0000'                    	ds	2
   636  0002'                    utoa@c:	
   637                           
   638                           ; 1 bytes @ 0x2
   639  0002'                    	ds	1
   640  0003'                    utoa@buf:	
   641                           
   642                           ; 1 bytes @ 0x3
   643  0003'                    	ds	1
   644  0004'                    ?_itoa:	
   645  0004'                    itoa@val:	
   646                           ; 1 bytes @ 0x4
   647                           
   648  0004'                    ___llmod@dividend:	
   649                           ; 2 bytes @ 0x4
   650                           
   651  0004'                    ___flmul@a:	
   652                           ; 4 bytes @ 0x4
   653                           
   654                           
   655                           ; 4 bytes @ 0x4
   656  0004'                    	ds	2
   657  0006'                    itoa@base:	
   658                           
   659                           ; 2 bytes @ 0x6
   660  0006'                    	ds	2
   661  0008'                    ??___llmod:	
   662  0008'                    ?___flsub:	
   663                           ; 1 bytes @ 0x8
   664                           
   665  0008'                    ___flmul@sign:	
   666                           ; 4 bytes @ 0x8
   667                           
   668  0008'                    ___flsub@a:	
   669                           ; 1 bytes @ 0x8
   670                           
   671                           
   672                           ; 4 bytes @ 0x8
   673  0008'                    	ds	1
   674  0009'                    ___llmod@counter:	
   675  0009'                    itoa@buf:	
   676                           ; 1 bytes @ 0x9
   677                           
   678  0009'                    ___flmul@grs:	
   679                           ; 1 bytes @ 0x9
   680                           
   681                           
   682                           ; 4 bytes @ 0x9
   683  0009'                    	ds	1
   684  000A'                    ?_sprintf:	
   685  000A'                    sprintf@f:	
   686                           ; 2 bytes @ 0xA
   687                           
   688                           
   689                           ; 1 bytes @ 0xA
   690  000A'                    	ds	2
   691  000C'                    ___flsub@b:	
   692                           
   693                           ; 4 bytes @ 0xC
   694  000C'                    	ds	1
   695  000D'                    ___flmul@aexp:	
   696                           
   697                           ; 1 bytes @ 0xD
   698  000D'                    	ds	1
   699  000E'                    ___flmul@bexp:	
   700                           
   701                           ; 1 bytes @ 0xE
   702  000E'                    	ds	1
   703  000F'                    ___flmul@prod:	
   704                           
   705                           ; 4 bytes @ 0xF
   706  000F'                    	ds	4
   707  0013'                    ??_sprintf:	
   708  0013'                    ___flmul@temp:	
   709                           ; 1 bytes @ 0x13
   710                           
   711                           
   712                           ; 2 bytes @ 0x13
   713  0013'                    	ds	2
   714  0015'                    ?___fltol:	
   715  0015'                    ___fltol@f1:	
   716                           ; 4 bytes @ 0x15
   717                           
   718                           
   719                           ; 4 bytes @ 0x15
   720  0015'                    	ds	3
   721  0018'                    sprintf@flag:	
   722                           
   723                           ; 1 bytes @ 0x18
   724  0018'                    	ds	1
   725  0019'                    ??___fltol:	
   726  0019'                    sprintf@ap:	
   727                           ; 1 bytes @ 0x19
   728                           
   729                           
   730                           ; 1 bytes @ 0x19
   731  0019'                    	ds	1
   732  001A'                    sprintf@val:	
   733                           
   734                           ; 4 bytes @ 0x1A
   735  001A'                    	ds	4
   736  001E'                    sprintf@sp:	
   737  001E'                    ___fltol@sign1:	
   738                           ; 1 bytes @ 0x1E
   739                           
   740                           
   741                           ; 1 bytes @ 0x1E
   742  001E'                    	ds	1
   743  001F'                    ___fltol@exp1:	
   744  001F'                    sprintf@width:	
   745                           ; 1 bytes @ 0x1F
   746                           
   747                           
   748                           ; 2 bytes @ 0x1F
   749  001F'                    	ds	2
   750  0021'                    sprintf@prec:	
   751                           
   752                           ; 2 bytes @ 0x21
   753  0021'                    	ds	2
   754  0023'                    sprintf@c:	
   755                           
   756                           ; 1 bytes @ 0x23
   757  0023'                    	ds	1
   758  0024'                    ?_ftoa:	
   759  0024'                    ftoa@f:	
   760                           ; 1 bytes @ 0x24
   761                           
   762                           
   763                           ; 4 bytes @ 0x24
   764  0024'                    	ds	4
   765  0028'                    ftoa@status:	
   766                           
   767                           ; 1 bytes @ 0x28
   768  0028'                    	ds	1
   769  0029'                    ??_ftoa:	
   770                           
   771                           ; 1 bytes @ 0x29
   772  0029'                    	ds	1
   773  002A'                    ftoa@rem:	
   774                           
   775                           ; 4 bytes @ 0x2A
   776  002A'                    	ds	4
   777  002E'                    ftoa@l:	
   778                           
   779                           ; 4 bytes @ 0x2E
   780  002E'                    	ds	4
   781  0032'                    ftoa@cp:	
   782                           
   783                           ; 1 bytes @ 0x32
   784  0032'                    	ds	1
   785  0033'                    ??_main:	
   786                           
   787                           ; 1 bytes @ 0x33
   788  0033'                    	ds	7
   789  003A'                    main@status:	
   790                           
   791                           ; 2 bytes @ 0x3A
   792  003A'                    	ds	2
   793  003C'                    main@lcd:	
   794                           
   795                           ; 5 bytes @ 0x3C
   796  003C'                    	ds	5
   797  0041'                    main@value:	
   798                           
   799                           ; 4 bytes @ 0x41
   800  0041'                    	ds	4
   801  0045'                    main@aux:	
   802                           
   803                           ; 3 bytes @ 0x45
   804  0045'                    	ds	3
   805  0048'                    main@a:	
   806                           
   807                           ; 2 bytes @ 0x48
   808  0048'                    	ds	2
   809  004A'                    main@text:	
   810                           
   811                           ; 1 bytes @ 0x4A
   812  004A'                    	ds	1
   813                           
   814                           	psect	maintext
   815  0000'                    __pmaintext:	
   816 ;;
   817 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   818 ;;
   819 ;; *************** function _main *****************
   820 ;; Defined at:
   821 ;;		line 11 in file "main.c"
   822 ;; Parameters:    Size  Location     Type
   823 ;;		None
   824 ;; Auto vars:     Size  Location     Type
   825 ;;  rxbuffer       20    0        unsigned char [20]
   826 ;;  lcd             5   60[BANK0 ] struct .
   827 ;;  value           4   65[BANK0 ] float 
   828 ;;  b               4    0        float 
   829 ;;  aux             3   69[BANK0 ] unsigned char [3]
   830 ;;  a               2   72[BANK0 ] int 
   831 ;;  status          2   58[BANK0 ] int 
   832 ;;  text            1   74[BANK0 ] PTR unsigned char 
   833 ;;		 -> ftoa@buf(17), 
   834 ;; Return value:  Size  Location     Type
   835 ;;                  1    wreg      void 
   836 ;; Registers used:
   837 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   838 ;; Tracked objects:
   839 ;;		On entry : B00/0
   840 ;;		On exit  : 0/0
   841 ;;		Unchanged: 0/0
   842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   843 ;;      Params:         0       0       0       0
   844 ;;      Locals:         0      21       0       0
   845 ;;      Temps:          0       3       0       0
   846 ;;      Totals:         0      24       0       0
   847 ;;Total ram usage:       24 bytes
   848 ;; Hardware stack levels required when called:    3
   849 ;; This function calls:
   850 ;;		_LCD_Init
   851 ;;		_LCD_Write
   852 ;;		_LCD_putrs
   853 ;;		_LCD_puts
   854 ;;		_ftoa
   855 ;;		_itoa
   856 ;; This function is called by:
   857 ;;		Startup code after reset
   858 ;; This function uses a non-reentrant model
   859 ;;
   860                           
   861                           
   862                           ;psect for function _main
   863  0000'                    _main:	
   864                           
   865                           ;main.c: 12:     LCD lcd = {&PORTB, 2, 3, 4, 5, 6, 7};
   866                           
   867                           ;incstack = 0
   868                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   869  0000' 3000'              	movlw	main@lcd& (0+255)
   870  0001' 0084               	movwf	4
   871  0002' 1683               	bsf	3,5	;RP0=1, select bank1
   872  0003' 1303               	bcf	3,6	;RP1=0, select bank1
   873  0004' 0800'              	movf	main@F701^(0+128),w
   874  0005' 1383               	bcf	3,7	;select IRP bank0
   875  0006' 0080               	movwf	0
   876  0007' 0A84               	incf	4,f
   877  0008' 0801'              	movf	(main@F701^(0+128)+1),w
   878  0009' 0080               	movwf	0
   879  000A' 0A84               	incf	4,f
   880  000B' 0802'              	movf	(main@F701^(0+128)+2),w
   881  000C' 0080               	movwf	0
   882  000D' 0A84               	incf	4,f
   883  000E' 0803'              	movf	(main@F701^(0+128)+3),w
   884  000F' 0080               	movwf	0
   885  0010' 0A84               	incf	4,f
   886  0011' 0804'              	movf	(main@F701^(0+128)+4),w
   887  0012' 0080               	movwf	0
   888                           
   889                           ;main.c: 13:     LCD_Init(lcd);
   890  0013' 3000'              	movlw	LCD_Init@display& (0+255)
   891  0014' 0084               	movwf	4
   892  0015' 1283               	bcf	3,5	;RP0=0, select bank0
   893  0016' 1303               	bcf	3,6	;RP1=0, select bank0
   894  0017' 083C'              	movf	main@lcd,w
   895  0018' 0080               	movwf	0
   896  0019' 0A84               	incf	4,f
   897  001A' 083D'              	movf	main@lcd+1,w
   898  001B' 0080               	movwf	0
   899  001C' 0A84               	incf	4,f
   900  001D' 083E'              	movf	main@lcd+2,w
   901  001E' 0080               	movwf	0
   902  001F' 0A84               	incf	4,f
   903  0020' 083F'              	movf	main@lcd+3,w
   904  0021' 0080               	movwf	0
   905  0022' 0A84               	incf	4,f
   906  0023' 0840'              	movf	main@lcd+4,w
   907  0024' 0080               	movwf	0
   908  0025' 2000'              	fcall	_LCD_Init
   909                           
   910                           ;main.c: 14:     TRISB = 0B00000011;
   911  0026' 3003               	movlw	3
   912  0027' 1683               	bsf	3,5	;RP0=1, select bank1
   913  0028' 1303               	bcf	3,6	;RP1=0, select bank1
   914  0029' 0086               	movwf	6	;volatile
   915                           
   916                           ;main.c: 15:     OPTION_REGbits.nRBPU = 0;
   917  002A' 1381               	bcf	1,7	;volatile
   918  002B' 3000               	movlw	0
   919  002C' 2000'              	fcall	_LCD_Write
   920  002D' 3001               	movlw	1
   921  002E' 2000'              	fcall	_LCD_Write
   922  002F' 3008               	movlw	8
   923  0030' 2000'              	fcall	_LCD_Write
   924  0031' 3000               	movlw	0
   925  0032' 2000'              	fcall	_LCD_Write
   926                           
   927                           ;main.c: 18:     LCD_putrs("Int a String");
   928  0033' 3029               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   929  0034' 2000'              	fcall	_LCD_putrs
   930                           
   931                           ;main.c: 19:     int a = 1;
   932  0035' 3001               	movlw	1
   933  0036' 1283               	bcf	3,5	;RP0=0, select bank0
   934  0037' 1303               	bcf	3,6	;RP1=0, select bank0
   935  0038' 00C8'              	movwf	main@a
   936  0039' 3000               	movlw	0
   937  003A' 00C9'              	movwf	main@a+1
   938                           
   939                           ;main.c: 21:     char aux[3];;main.c: 23:     char rxbuffer[20];;main.c: 24:     int sta
      +                          tus;;main.c: 25:     char *text;;main.c: 26:     float value;;main.c: 27:     value = 12
      +                          3.456;
   940  003B' 3042               	movlw	66
   941  003C' 00C4'              	movwf	main@value+3
   942  003D' 30F6               	movlw	246
   943  003E' 00C3'              	movwf	main@value+2
   944  003F' 30E9               	movlw	233
   945  0040' 00C2'              	movwf	main@value+1
   946  0041' 3079               	movlw	121
   947  0042' 00C1'              	movwf	main@value
   948  0043'                    l2658:	
   949  0043' 300C               	movlw	12
   950  0044' 2000'              	fcall	_LCD_Write
   951  0045' 3000               	movlw	0
   952  0046' 2000'              	fcall	_LCD_Write
   953                           
   954                           ;main.c: 33:         itoa(aux, a, 10);
   955  0047' 1283               	bcf	3,5	;RP0=0, select bank0
   956  0048' 1303               	bcf	3,6	;RP1=0, select bank0
   957  0049' 0849'              	movf	main@a+1,w
   958  004A' 0085'              	movwf	itoa@val+1
   959  004B' 0848'              	movf	main@a,w
   960  004C' 0084'              	movwf	itoa@val
   961  004D' 300A               	movlw	10
   962  004E' 0086'              	movwf	itoa@base
   963  004F' 3000               	movlw	0
   964  0050' 0087'              	movwf	itoa@base+1
   965  0051' 3000'              	movlw	(low (main@aux| 0))& (0+255)
   966  0052' 2000'              	fcall	_itoa
   967                           
   968                           ;main.c: 34:         LCD_puts(aux);
   969  0053' 3000'              	movlw	(low (main@aux| 0))& (0+255)
   970  0054' 2000'              	fcall	_LCD_puts
   971                           
   972                           ;main.c: 35:         a++;
   973  0055' 3001               	movlw	1
   974  0056' 1283               	bcf	3,5	;RP0=0, select bank0
   975  0057' 1303               	bcf	3,6	;RP1=0, select bank0
   976  0058' 07C8'              	addwf	main@a,f
   977  0059' 1803               	skipnc
   978  005A' 0AC9'              	incf	main@a+1,f
   979  005B' 3000               	movlw	0
   980  005C' 07C9'              	addwf	main@a+1,f
   981  005D' 300C               	movlw	12
   982  005E' 2000'              	fcall	_LCD_Write
   983  005F' 3005               	movlw	5
   984  0060' 2000'              	fcall	_LCD_Write
   985                           
   986                           ;main.c: 38:         text = ftoa(value, &status);
   987  0061' 1283               	bcf	3,5	;RP0=0, select bank0
   988  0062' 1303               	bcf	3,6	;RP1=0, select bank0
   989  0063' 0844'              	movf	main@value+3,w
   990  0064' 00A7'              	movwf	ftoa@f+3
   991  0065' 0843'              	movf	main@value+2,w
   992  0066' 00A6'              	movwf	ftoa@f+2
   993  0067' 0842'              	movf	main@value+1,w
   994  0068' 00A5'              	movwf	ftoa@f+1
   995  0069' 0841'              	movf	main@value,w
   996  006A' 00A4'              	movwf	ftoa@f
   997  006B' 3000'              	movlw	(low (main@status| 0))& (0+255)
   998  006C' 00B3'              	movwf	??_main
   999  006D' 0833'              	movf	??_main,w
  1000  006E' 00A8'              	movwf	ftoa@status
  1001  006F' 2000'              	fcall	_ftoa
  1002  0070' 1283               	bcf	3,5	;RP0=0, select bank0
  1003  0071' 1303               	bcf	3,6	;RP1=0, select bank0
  1004  0072' 00B4'              	movwf	??_main+1
  1005  0073' 0834'              	movf	??_main+1,w
  1006  0074' 00CA'              	movwf	main@text
  1007                           
  1008                           ;main.c: 39:         LCD_puts(text);
  1009  0075' 084A'              	movf	main@text,w
  1010  0076' 2000'              	fcall	_LCD_puts
  1011                           
  1012                           ;main.c: 41:         _delay((unsigned long)((250)*(4000000/4000.0)));
  1013  0077' 3002               	movlw	2
  1014  0078' 1283               	bcf	3,5	;RP0=0, select bank0
  1015  0079' 1303               	bcf	3,6	;RP1=0, select bank0
  1016  007A' 00B5'              	movwf	??_main+2
  1017  007B' 3045               	movlw	69
  1018  007C' 00B4'              	movwf	??_main+1
  1019  007D' 30A9               	movlw	169
  1020  007E' 00B3'              	movwf	??_main
  1021  007F'                    u4037:	
  1022  007F' 0BB3'              	decfsz	??_main,f
  1023  0080' 287F'              	goto	u4037
  1024  0081' 0BB4'              	decfsz	??_main+1,f
  1025  0082' 287F'              	goto	u4037
  1026  0083' 0BB5'              	decfsz	??_main+2,f
  1027  0084' 287F'              	goto	u4037
  1028  0085' 0000               	nop
  1029                           
  1030                           ;main.c: 43:     }
  1031  0086' 2843'              	goto	l2658
  1032  0087'                    __end_of_main:	
  1033                           
  1034                           	psect	text1
  1035  0000'                    __ptext1:	
  1036 ;; *************** function _itoa *****************
  1037 ;; Defined at:
  1038 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\itoa.c"
  1039 ;; Parameters:    Size  Location     Type
  1040 ;;  buf             1    wreg     PTR unsigned char 
  1041 ;;		 -> main@aux(3), 
  1042 ;;  val             2    4[BANK0 ] int 
  1043 ;;  base            2    6[BANK0 ] int 
  1044 ;; Auto vars:     Size  Location     Type
  1045 ;;  buf             1    9[BANK0 ] PTR unsigned char 
  1046 ;;		 -> main@aux(3), 
  1047 ;;  cp              1    0        PTR unsigned char 
  1048 ;;		 -> main@aux(3), 
  1049 ;; Return value:  Size  Location     Type
  1050 ;;                  1    wreg      PTR unsigned char 
  1051 ;; Registers used:
  1052 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1053 ;; Tracked objects:
  1054 ;;		On entry : 0/0
  1055 ;;		On exit  : 0/0
  1056 ;;		Unchanged: 0/0
  1057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1058 ;;      Params:         0       4       0       0
  1059 ;;      Locals:         0       2       0       0
  1060 ;;      Temps:          1       0       0       0
  1061 ;;      Totals:         1       6       0       0
  1062 ;;Total ram usage:        7 bytes
  1063 ;; Hardware stack levels used:    1
  1064 ;; Hardware stack levels required when called:    2
  1065 ;; This function calls:
  1066 ;;		_utoa
  1067 ;; This function is called by:
  1068 ;;		_main
  1069 ;; This function uses a non-reentrant model
  1070 ;;
  1071                           
  1072                           
  1073                           ;psect for function _itoa
  1074  0000'                    _itoa:	
  1075                           
  1076                           ;incstack = 0
  1077                           ; Regs used in _itoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1078                           ;itoa@buf stored from wreg
  1079  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  1080  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  1081  0002' 0089'              	movwf	itoa@buf
  1082  0003' 1F85'              	btfss	itoa@val+1,7
  1083  0004' 2815'              	goto	l2594
  1084  0005' 302D               	movlw	45
  1085  0006' 008D'              	movwf	??_itoa
  1086  0007' 0809'              	movf	itoa@buf,w
  1087  0008' 0084               	movwf	4
  1088  0009' 080D'              	movf	??_itoa,w
  1089  000A' 1383               	bcf	3,7	;select IRP bank0
  1090  000B' 0080               	movwf	0
  1091  000C' 3001               	movlw	1
  1092  000D' 008D'              	movwf	??_itoa
  1093  000E' 080D'              	movf	??_itoa,w
  1094  000F' 0789'              	addwf	itoa@buf,f
  1095  0010' 0984'              	comf	itoa@val,f
  1096  0011' 0985'              	comf	itoa@val+1,f
  1097  0012' 0A84'              	incf	itoa@val,f
  1098  0013' 1903               	skipnz
  1099  0014' 0A85'              	incf	itoa@val+1,f
  1100  0015'                    l2594:	
  1101  0015' 0805'              	movf	itoa@val+1,w
  1102  0016' 0089'              	movwf	utoa@val+1
  1103  0017' 0804'              	movf	itoa@val,w
  1104  0018' 0088'              	movwf	utoa@val
  1105  0019' 0807'              	movf	itoa@base+1,w
  1106  001A' 008B'              	movwf	utoa@base+1
  1107  001B' 0806'              	movf	itoa@base,w
  1108  001C' 008A'              	movwf	utoa@base
  1109  001D' 0809'              	movf	itoa@buf,w
  1110  001E' 2000'              	fcall	_utoa
  1111  001F' 0008               	return
  1112  0020'                    __end_of_itoa:	
  1113                           
  1114                           	psect	text2
  1115  0000'                    __ptext2:	
  1116 ;; *************** function _utoa *****************
  1117 ;; Defined at:
  1118 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\itoa.c"
  1119 ;; Parameters:    Size  Location     Type
  1120 ;;  buf             1    wreg     PTR unsigned char 
  1121 ;;		 -> main@aux(3), 
  1122 ;;  val             2    8[COMMON] unsigned int 
  1123 ;;  base            2   10[COMMON] int 
  1124 ;; Auto vars:     Size  Location     Type
  1125 ;;  buf             1    3[BANK0 ] PTR unsigned char 
  1126 ;;		 -> main@aux(3), 
  1127 ;;  v               2    0[BANK0 ] unsigned int 
  1128 ;;  c               1    2[BANK0 ] unsigned char 
  1129 ;; Return value:  Size  Location     Type
  1130 ;;                  1    wreg      PTR unsigned char 
  1131 ;; Registers used:
  1132 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1133 ;; Tracked objects:
  1134 ;;		On entry : 0/0
  1135 ;;		On exit  : 0/0
  1136 ;;		Unchanged: 0/0
  1137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1138 ;;      Params:         4       0       0       0
  1139 ;;      Locals:         0       4       0       0
  1140 ;;      Temps:          1       0       0       0
  1141 ;;      Totals:         5       4       0       0
  1142 ;;Total ram usage:        9 bytes
  1143 ;; Hardware stack levels used:    1
  1144 ;; Hardware stack levels required when called:    1
  1145 ;; This function calls:
  1146 ;;		___lwdiv
  1147 ;;		___lwmod
  1148 ;; This function is called by:
  1149 ;;		_itoa
  1150 ;; This function uses a non-reentrant model
  1151 ;;
  1152                           
  1153                           
  1154                           ;psect for function _utoa
  1155  0000'                    _utoa:	
  1156                           
  1157                           ;incstack = 0
  1158                           ; Regs used in _utoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1159                           ;utoa@buf stored from wreg
  1160  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  1161  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  1162  0002' 0083'              	movwf	utoa@buf
  1163  0003' 0809'              	movf	utoa@val+1,w
  1164  0004' 0081'              	movwf	utoa@v+1
  1165  0005' 0808'              	movf	utoa@val,w
  1166  0006' 0080'              	movwf	utoa@v
  1167  0007'                    l2502:	
  1168  0007' 080B'              	movf	utoa@base+1,w
  1169  0008' 0081'              	movwf	___lwdiv@divisor+1
  1170  0009' 080A'              	movf	utoa@base,w
  1171  000A' 0080'              	movwf	___lwdiv@divisor
  1172  000B' 0801'              	movf	utoa@v+1,w
  1173  000C' 0083'              	movwf	___lwdiv@dividend+1
  1174  000D' 0800'              	movf	utoa@v,w
  1175  000E' 0082'              	movwf	___lwdiv@dividend
  1176  000F' 2000'              	fcall	___lwdiv
  1177  0010' 0801'              	movf	?___lwdiv+1,w
  1178  0011' 1283               	bcf	3,5	;RP0=0, select bank0
  1179  0012' 1303               	bcf	3,6	;RP1=0, select bank0
  1180  0013' 0081'              	movwf	utoa@v+1
  1181  0014' 0800'              	movf	?___lwdiv,w
  1182  0015' 0080'              	movwf	utoa@v
  1183  0016' 3001               	movlw	1
  1184  0017' 008C'              	movwf	??_utoa
  1185  0018' 080C'              	movf	??_utoa,w
  1186  0019' 0783'              	addwf	utoa@buf,f
  1187  001A' 0800'              	movf	utoa@v,w
  1188  001B' 0401'              	iorwf	utoa@v+1,w
  1189  001C' 1D03               	btfss	3,2
  1190  001D' 2807'              	goto	l2502
  1191  001E' 0803'              	movf	utoa@buf,w
  1192  001F' 0084               	movwf	4
  1193  0020' 1383               	bcf	3,7	;select IRP bank0
  1194  0021' 0180               	clrf	0
  1195  0022' 3001               	movlw	1
  1196  0023' 0283'              	subwf	utoa@buf,f
  1197  0024'                    l2512:	
  1198  0024' 080B'              	movf	utoa@base+1,w
  1199  0025' 0081'              	movwf	___lwmod@divisor+1
  1200  0026' 080A'              	movf	utoa@base,w
  1201  0027' 0080'              	movwf	___lwmod@divisor
  1202  0028' 0809'              	movf	utoa@val+1,w
  1203  0029' 0083'              	movwf	___lwmod@dividend+1
  1204  002A' 0808'              	movf	utoa@val,w
  1205  002B' 0082'              	movwf	___lwmod@dividend
  1206  002C' 2000'              	fcall	___lwmod
  1207  002D' 0800'              	movf	?___lwmod,w
  1208  002E' 008C'              	movwf	??_utoa
  1209  002F' 080C'              	movf	??_utoa,w
  1210  0030' 1283               	bcf	3,5	;RP0=0, select bank0
  1211  0031' 1303               	bcf	3,6	;RP1=0, select bank0
  1212  0032' 0082'              	movwf	utoa@c
  1213  0033' 080B'              	movf	utoa@base+1,w
  1214  0034' 0081'              	movwf	___lwdiv@divisor+1
  1215  0035' 080A'              	movf	utoa@base,w
  1216  0036' 0080'              	movwf	___lwdiv@divisor
  1217  0037' 0809'              	movf	utoa@val+1,w
  1218  0038' 0083'              	movwf	___lwdiv@dividend+1
  1219  0039' 0808'              	movf	utoa@val,w
  1220  003A' 0082'              	movwf	___lwdiv@dividend
  1221  003B' 2000'              	fcall	___lwdiv
  1222  003C' 0801'              	movf	?___lwdiv+1,w
  1223  003D' 0089'              	movwf	utoa@val+1
  1224  003E' 0800'              	movf	?___lwdiv,w
  1225  003F' 0088'              	movwf	utoa@val
  1226  0040' 300A               	movlw	10
  1227  0041' 1283               	bcf	3,5	;RP0=0, select bank0
  1228  0042' 1303               	bcf	3,6	;RP1=0, select bank0
  1229  0043' 0202'              	subwf	utoa@c,w
  1230  0044' 1C03               	skipc
  1231  0045' 284A'              	goto	l746
  1232  0046' 3007               	movlw	7
  1233  0047' 008C'              	movwf	??_utoa
  1234  0048' 080C'              	movf	??_utoa,w
  1235  0049' 0782'              	addwf	utoa@c,f
  1236  004A'                    l746:	
  1237  004A' 3030               	movlw	48
  1238  004B' 008C'              	movwf	??_utoa
  1239  004C' 080C'              	movf	??_utoa,w
  1240  004D' 0782'              	addwf	utoa@c,f
  1241  004E' 0802'              	movf	utoa@c,w
  1242  004F' 008C'              	movwf	??_utoa
  1243  0050' 0803'              	movf	utoa@buf,w
  1244  0051' 0084               	movwf	4
  1245  0052' 080C'              	movf	??_utoa,w
  1246  0053' 1383               	bcf	3,7	;select IRP bank0
  1247  0054' 0080               	movwf	0
  1248  0055' 3001               	movlw	1
  1249  0056' 0283'              	subwf	utoa@buf,f
  1250  0057' 0808'              	movf	utoa@val,w
  1251  0058' 0409'              	iorwf	utoa@val+1,w
  1252  0059' 1D03               	btfss	3,2
  1253  005A' 2824'              	goto	l2512
  1254                           
  1255                           ;	Return value of _utoa is never used
  1256  005B' 3001               	movlw	1
  1257  005C' 008C'              	movwf	??_utoa
  1258  005D' 080C'              	movf	??_utoa,w
  1259  005E' 0783'              	addwf	utoa@buf,f
  1260  005F' 0008               	return
  1261  0060'                    __end_of_utoa:	
  1262                           
  1263                           	psect	text3
  1264  0000'                    __ptext3:	
  1265 ;; *************** function ___lwmod *****************
  1266 ;; Defined at:
  1267 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwmod.c"
  1268 ;; Parameters:    Size  Location     Type
  1269 ;;  divisor         2    0[COMMON] unsigned int 
  1270 ;;  dividend        2    2[COMMON] unsigned int 
  1271 ;; Auto vars:     Size  Location     Type
  1272 ;;  counter         1    5[COMMON] unsigned char 
  1273 ;; Return value:  Size  Location     Type
  1274 ;;                  2    0[COMMON] unsigned int 
  1275 ;; Registers used:
  1276 ;;		wreg, status,2, status,0
  1277 ;; Tracked objects:
  1278 ;;		On entry : 0/0
  1279 ;;		On exit  : 0/0
  1280 ;;		Unchanged: 0/0
  1281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1282 ;;      Params:         4       0       0       0
  1283 ;;      Locals:         1       0       0       0
  1284 ;;      Temps:          1       0       0       0
  1285 ;;      Totals:         6       0       0       0
  1286 ;;Total ram usage:        6 bytes
  1287 ;; Hardware stack levels used:    1
  1288 ;; This function calls:
  1289 ;;		Nothing
  1290 ;; This function is called by:
  1291 ;;		_utoa
  1292 ;; This function uses a non-reentrant model
  1293 ;;
  1294                           
  1295                           
  1296                           ;psect for function ___lwmod
  1297  0000'                    ___lwmod:	
  1298                           
  1299                           ;incstack = 0
  1300                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1301  0000' 0800'              	movf	___lwmod@divisor,w
  1302  0001' 0401'              	iorwf	___lwmod@divisor+1,w
  1303  0002' 1903               	btfsc	3,2
  1304  0003' 282D'              	goto	l1902
  1305  0004' 0185'              	clrf	___lwmod@counter
  1306  0005' 0A85'              	incf	___lwmod@counter,f
  1307  0006'                    l1892:	
  1308  0006' 1B81'              	btfsc	___lwmod@divisor+1,7
  1309  0007' 2814'              	goto	l1894
  1310  0008' 3001               	movlw	1
  1311  0009'                    u2415:	
  1312  0009' 1003               	clrc
  1313  000A' 0D80'              	rlf	___lwmod@divisor,f
  1314  000B' 0D81'              	rlf	___lwmod@divisor+1,f
  1315  000C' 3EFF               	addlw	-1
  1316  000D' 1D03               	skipz
  1317  000E' 2809'              	goto	u2415
  1318  000F' 3001               	movlw	1
  1319  0010' 0084'              	movwf	??___lwmod
  1320  0011' 0804'              	movf	??___lwmod,w
  1321  0012' 0785'              	addwf	___lwmod@counter,f
  1322  0013' 2806'              	goto	l1892
  1323  0014'                    l1894:	
  1324  0014' 0801'              	movf	___lwmod@divisor+1,w
  1325  0015' 0203'              	subwf	___lwmod@dividend+1,w
  1326  0016' 1D03               	skipz
  1327  0017' 281A'              	goto	u2435
  1328  0018' 0800'              	movf	___lwmod@divisor,w
  1329  0019' 0202'              	subwf	___lwmod@dividend,w
  1330  001A'                    u2435:	
  1331  001A' 1C03               	skipc
  1332  001B' 2822'              	goto	l1898
  1333  001C' 0800'              	movf	___lwmod@divisor,w
  1334  001D' 0282'              	subwf	___lwmod@dividend,f
  1335  001E' 0801'              	movf	___lwmod@divisor+1,w
  1336  001F' 1C03               	skipc
  1337  0020' 0383'              	decf	___lwmod@dividend+1,f
  1338  0021' 0283'              	subwf	___lwmod@dividend+1,f
  1339  0022'                    l1898:	
  1340  0022' 3001               	movlw	1
  1341  0023'                    u2445:	
  1342  0023' 1003               	clrc
  1343  0024' 0C81'              	rrf	___lwmod@divisor+1,f
  1344  0025' 0C80'              	rrf	___lwmod@divisor,f
  1345  0026' 3EFF               	addlw	-1
  1346  0027' 1D03               	skipz
  1347  0028' 2823'              	goto	u2445
  1348  0029' 3001               	movlw	1
  1349  002A' 0285'              	subwf	___lwmod@counter,f
  1350  002B' 1D03               	btfss	3,2
  1351  002C' 2814'              	goto	l1894
  1352  002D'                    l1902:	
  1353  002D' 0803'              	movf	___lwmod@dividend+1,w
  1354  002E' 0081'              	movwf	?___lwmod+1
  1355  002F' 0802'              	movf	___lwmod@dividend,w
  1356  0030' 0080'              	movwf	?___lwmod
  1357  0031' 0008               	return
  1358  0032'                    __end_of___lwmod:	
  1359                           
  1360                           	psect	text4
  1361  0000'                    __ptext4:	
  1362 ;; *************** function ___lwdiv *****************
  1363 ;; Defined at:
  1364 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwdiv.c"
  1365 ;; Parameters:    Size  Location     Type
  1366 ;;  divisor         2    0[COMMON] unsigned int 
  1367 ;;  dividend        2    2[COMMON] unsigned int 
  1368 ;; Auto vars:     Size  Location     Type
  1369 ;;  quotient        2    5[COMMON] unsigned int 
  1370 ;;  counter         1    7[COMMON] unsigned char 
  1371 ;; Return value:  Size  Location     Type
  1372 ;;                  2    0[COMMON] unsigned int 
  1373 ;; Registers used:
  1374 ;;		wreg, status,2, status,0
  1375 ;; Tracked objects:
  1376 ;;		On entry : 0/0
  1377 ;;		On exit  : 0/0
  1378 ;;		Unchanged: 0/0
  1379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1380 ;;      Params:         4       0       0       0
  1381 ;;      Locals:         3       0       0       0
  1382 ;;      Temps:          1       0       0       0
  1383 ;;      Totals:         8       0       0       0
  1384 ;;Total ram usage:        8 bytes
  1385 ;; Hardware stack levels used:    1
  1386 ;; This function calls:
  1387 ;;		Nothing
  1388 ;; This function is called by:
  1389 ;;		_utoa
  1390 ;; This function uses a non-reentrant model
  1391 ;;
  1392                           
  1393                           
  1394                           ;psect for function ___lwdiv
  1395  0000'                    ___lwdiv:	
  1396                           
  1397                           ;incstack = 0
  1398                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1399  0000' 0185'              	clrf	___lwdiv@quotient
  1400  0001' 0186'              	clrf	___lwdiv@quotient+1
  1401  0002' 0800'              	movf	___lwdiv@divisor,w
  1402  0003' 0401'              	iorwf	___lwdiv@divisor+1,w
  1403  0004' 1903               	btfsc	3,2
  1404  0005' 2837'              	goto	l1880
  1405  0006' 0187'              	clrf	___lwdiv@counter
  1406  0007' 0A87'              	incf	___lwdiv@counter,f
  1407  0008'                    l1868:	
  1408  0008' 1B81'              	btfsc	___lwdiv@divisor+1,7
  1409  0009' 2816'              	goto	l1870
  1410  000A' 3001               	movlw	1
  1411  000B'                    u2345:	
  1412  000B' 1003               	clrc
  1413  000C' 0D80'              	rlf	___lwdiv@divisor,f
  1414  000D' 0D81'              	rlf	___lwdiv@divisor+1,f
  1415  000E' 3EFF               	addlw	-1
  1416  000F' 1D03               	skipz
  1417  0010' 280B'              	goto	u2345
  1418  0011' 3001               	movlw	1
  1419  0012' 0084'              	movwf	??___lwdiv
  1420  0013' 0804'              	movf	??___lwdiv,w
  1421  0014' 0787'              	addwf	___lwdiv@counter,f
  1422  0015' 2808'              	goto	l1868
  1423  0016'                    l1870:	
  1424  0016' 3001               	movlw	1
  1425  0017'                    u2365:	
  1426  0017' 1003               	clrc
  1427  0018' 0D85'              	rlf	___lwdiv@quotient,f
  1428  0019' 0D86'              	rlf	___lwdiv@quotient+1,f
  1429  001A' 3EFF               	addlw	-1
  1430  001B' 1D03               	skipz
  1431  001C' 2817'              	goto	u2365
  1432  001D' 0801'              	movf	___lwdiv@divisor+1,w
  1433  001E' 0203'              	subwf	___lwdiv@dividend+1,w
  1434  001F' 1D03               	skipz
  1435  0020' 2823'              	goto	u2375
  1436  0021' 0800'              	movf	___lwdiv@divisor,w
  1437  0022' 0202'              	subwf	___lwdiv@dividend,w
  1438  0023'                    u2375:	
  1439  0023' 1C03               	skipc
  1440  0024' 282C'              	goto	l1876
  1441  0025' 0800'              	movf	___lwdiv@divisor,w
  1442  0026' 0282'              	subwf	___lwdiv@dividend,f
  1443  0027' 0801'              	movf	___lwdiv@divisor+1,w
  1444  0028' 1C03               	skipc
  1445  0029' 0383'              	decf	___lwdiv@dividend+1,f
  1446  002A' 0283'              	subwf	___lwdiv@dividend+1,f
  1447  002B' 1405'              	bsf	___lwdiv@quotient,0
  1448  002C'                    l1876:	
  1449  002C' 3001               	movlw	1
  1450  002D'                    u2385:	
  1451  002D' 1003               	clrc
  1452  002E' 0C81'              	rrf	___lwdiv@divisor+1,f
  1453  002F' 0C80'              	rrf	___lwdiv@divisor,f
  1454  0030' 3EFF               	addlw	-1
  1455  0031' 1D03               	skipz
  1456  0032' 282D'              	goto	u2385
  1457  0033' 3001               	movlw	1
  1458  0034' 0287'              	subwf	___lwdiv@counter,f
  1459  0035' 1D03               	btfss	3,2
  1460  0036' 2816'              	goto	l1870
  1461  0037'                    l1880:	
  1462  0037' 0806'              	movf	___lwdiv@quotient+1,w
  1463  0038' 0081'              	movwf	?___lwdiv+1
  1464  0039' 0805'              	movf	___lwdiv@quotient,w
  1465  003A' 0080'              	movwf	?___lwdiv
  1466  003B' 0008               	return
  1467  003C'                    __end_of___lwdiv:	
  1468                           
  1469                           	psect	text5
  1470  0000'                    __ptext5:	
  1471 ;; *************** function _ftoa *****************
  1472 ;; Defined at:
  1473 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\ftoa.c"
  1474 ;; Parameters:    Size  Location     Type
  1475 ;;  f               4   36[BANK0 ] float 
  1476 ;;  status          1   40[BANK0 ] PTR int 
  1477 ;;		 -> main@status(2), 
  1478 ;; Auto vars:     Size  Location     Type
  1479 ;;  l               4   46[BANK0 ] unsigned long 
  1480 ;;  rem             4   42[BANK0 ] unsigned long 
  1481 ;;  cp              1   50[BANK0 ] PTR unsigned char 
  1482 ;;		 -> ftoa@buf(17), 
  1483 ;; Return value:  Size  Location     Type
  1484 ;;                  1    wreg      PTR unsigned char 
  1485 ;; Registers used:
  1486 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1487 ;; Tracked objects:
  1488 ;;		On entry : 0/0
  1489 ;;		On exit  : 0/0
  1490 ;;		Unchanged: 0/0
  1491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1492 ;;      Params:         0       5       0       0
  1493 ;;      Locals:         0       9       0       0
  1494 ;;      Temps:          0       1       0       0
  1495 ;;      Totals:         0      15       0       0
  1496 ;;Total ram usage:       15 bytes
  1497 ;; Hardware stack levels used:    1
  1498 ;; Hardware stack levels required when called:    2
  1499 ;; This function calls:
  1500 ;;		___flge
  1501 ;;		___flmul
  1502 ;;		___flneg
  1503 ;;		___flsub
  1504 ;;		___fltol
  1505 ;;		___xxtofl
  1506 ;;		_sprintf
  1507 ;; This function is called by:
  1508 ;;		_main
  1509 ;; This function uses a non-reentrant model
  1510 ;;
  1511                           
  1512                           
  1513                           ;psect for function _ftoa
  1514  0000'                    _ftoa:	
  1515                           
  1516                           ;incstack = 0
  1517                           ; Regs used in _ftoa: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1518  0000' 3000'              	movlw	(low (ftoa@buf| 0))& (0+255)
  1519  0001' 1283               	bcf	3,5	;RP0=0, select bank0
  1520  0002' 1303               	bcf	3,6	;RP1=0, select bank0
  1521  0003' 00A9'              	movwf	??_ftoa
  1522  0004' 0829'              	movf	??_ftoa,w
  1523  0005' 00B2'              	movwf	ftoa@cp
  1524  0006' 0827'              	movf	ftoa@f+3,w
  1525  0007' 0083'              	movwf	___flge@ff1+3
  1526  0008' 0826'              	movf	ftoa@f+2,w
  1527  0009' 0082'              	movwf	___flge@ff1+2
  1528  000A' 0825'              	movf	ftoa@f+1,w
  1529  000B' 0081'              	movwf	___flge@ff1+1
  1530  000C' 0824'              	movf	ftoa@f,w
  1531  000D' 0080'              	movwf	___flge@ff1
  1532  000E' 3000               	movlw	0
  1533  000F' 0087'              	movwf	___flge@ff2+3
  1534  0010' 3000               	movlw	0
  1535  0011' 0086'              	movwf	___flge@ff2+2
  1536  0012' 3000               	movlw	0
  1537  0013' 0085'              	movwf	___flge@ff2+1
  1538  0014' 3000               	movlw	0
  1539  0015' 0084'              	movwf	___flge@ff2
  1540  0016' 2000'              	fcall	___flge
  1541  0017' 1803               	btfsc	3,0
  1542  0018' 2839'              	goto	l2616
  1543  0019' 302D               	movlw	45
  1544  001A' 1283               	bcf	3,5	;RP0=0, select bank0
  1545  001B' 1303               	bcf	3,6	;RP1=0, select bank0
  1546  001C' 00A9'              	movwf	??_ftoa
  1547  001D' 0832'              	movf	ftoa@cp,w
  1548  001E' 0084               	movwf	4
  1549  001F' 0829'              	movf	??_ftoa,w
  1550  0020' 1383               	bcf	3,7	;select IRP bank0
  1551  0021' 0080               	movwf	0
  1552  0022' 3001               	movlw	1
  1553  0023' 00A9'              	movwf	??_ftoa
  1554  0024' 0829'              	movf	??_ftoa,w
  1555  0025' 07B2'              	addwf	ftoa@cp,f
  1556  0026' 0827'              	movf	ftoa@f+3,w
  1557  0027' 0083'              	movwf	___flneg@f1+3
  1558  0028' 0826'              	movf	ftoa@f+2,w
  1559  0029' 0082'              	movwf	___flneg@f1+2
  1560  002A' 0825'              	movf	ftoa@f+1,w
  1561  002B' 0081'              	movwf	___flneg@f1+1
  1562  002C' 0824'              	movf	ftoa@f,w
  1563  002D' 0080'              	movwf	___flneg@f1
  1564  002E' 2000'              	fcall	___flneg
  1565  002F' 0803'              	movf	?___flneg+3,w
  1566  0030' 1283               	bcf	3,5	;RP0=0, select bank0
  1567  0031' 1303               	bcf	3,6	;RP1=0, select bank0
  1568  0032' 00A7'              	movwf	ftoa@f+3
  1569  0033' 0802'              	movf	?___flneg+2,w
  1570  0034' 00A6'              	movwf	ftoa@f+2
  1571  0035' 0801'              	movf	?___flneg+1,w
  1572  0036' 00A5'              	movwf	ftoa@f+1
  1573  0037' 0800'              	movf	?___flneg,w
  1574  0038' 00A4'              	movwf	ftoa@f
  1575  0039'                    l2616:	
  1576  0039' 1283               	bcf	3,5	;RP0=0, select bank0
  1577  003A' 1303               	bcf	3,6	;RP1=0, select bank0
  1578  003B' 0827'              	movf	ftoa@f+3,w
  1579  003C' 0098'              	movwf	___fltol@f1+3
  1580  003D' 0826'              	movf	ftoa@f+2,w
  1581  003E' 0097'              	movwf	___fltol@f1+2
  1582  003F' 0825'              	movf	ftoa@f+1,w
  1583  0040' 0096'              	movwf	___fltol@f1+1
  1584  0041' 0824'              	movf	ftoa@f,w
  1585  0042' 0095'              	movwf	___fltol@f1
  1586  0043' 2000'              	fcall	___fltol
  1587  0044' 1283               	bcf	3,5	;RP0=0, select bank0
  1588  0045' 1303               	bcf	3,6	;RP1=0, select bank0
  1589  0046' 0818'              	movf	?___fltol+3,w
  1590  0047' 00B1'              	movwf	ftoa@l+3
  1591  0048' 0817'              	movf	?___fltol+2,w
  1592  0049' 00B0'              	movwf	ftoa@l+2
  1593  004A' 0816'              	movf	?___fltol+1,w
  1594  004B' 00AF'              	movwf	ftoa@l+1
  1595  004C' 0815'              	movf	?___fltol,w
  1596  004D' 00AE'              	movwf	ftoa@l
  1597  004E' 0831'              	movf	ftoa@l+3,w
  1598  004F' 0083'              	movwf	___xxtofl@val+3
  1599  0050' 0830'              	movf	ftoa@l+2,w
  1600  0051' 0082'              	movwf	___xxtofl@val+2
  1601  0052' 082F'              	movf	ftoa@l+1,w
  1602  0053' 0081'              	movwf	___xxtofl@val+1
  1603  0054' 082E'              	movf	ftoa@l,w
  1604  0055' 0080'              	movwf	___xxtofl@val
  1605  0056' 3000               	movlw	0
  1606  0057' 2000'              	fcall	___xxtofl
  1607  0058' 0803'              	movf	?___xxtofl+3,w
  1608  0059' 1283               	bcf	3,5	;RP0=0, select bank0
  1609  005A' 1303               	bcf	3,6	;RP1=0, select bank0
  1610  005B' 008B'              	movwf	___flsub@a+3
  1611  005C' 0802'              	movf	?___xxtofl+2,w
  1612  005D' 008A'              	movwf	___flsub@a+2
  1613  005E' 0801'              	movf	?___xxtofl+1,w
  1614  005F' 0089'              	movwf	___flsub@a+1
  1615  0060' 0800'              	movf	?___xxtofl,w
  1616  0061' 0088'              	movwf	___flsub@a
  1617  0062' 0827'              	movf	ftoa@f+3,w
  1618  0063' 008F'              	movwf	___flsub@b+3
  1619  0064' 0826'              	movf	ftoa@f+2,w
  1620  0065' 008E'              	movwf	___flsub@b+2
  1621  0066' 0825'              	movf	ftoa@f+1,w
  1622  0067' 008D'              	movwf	___flsub@b+1
  1623  0068' 0824'              	movf	ftoa@f,w
  1624  0069' 008C'              	movwf	___flsub@b
  1625  006A' 2000'              	fcall	___flsub
  1626  006B' 1283               	bcf	3,5	;RP0=0, select bank0
  1627  006C' 1303               	bcf	3,6	;RP1=0, select bank0
  1628  006D' 080B'              	movf	?___flsub+3,w
  1629  006E' 00A7'              	movwf	ftoa@f+3
  1630  006F' 080A'              	movf	?___flsub+2,w
  1631  0070' 00A6'              	movwf	ftoa@f+2
  1632  0071' 0809'              	movf	?___flsub+1,w
  1633  0072' 00A5'              	movwf	ftoa@f+1
  1634  0073' 0808'              	movf	?___flsub,w
  1635  0074' 00A4'              	movwf	ftoa@f
  1636  0075' 0827'              	movf	ftoa@f+3,w
  1637  0076' 0087'              	movwf	___flmul@a+3
  1638  0077' 0826'              	movf	ftoa@f+2,w
  1639  0078' 0086'              	movwf	___flmul@a+2
  1640  0079' 0825'              	movf	ftoa@f+1,w
  1641  007A' 0085'              	movwf	___flmul@a+1
  1642  007B' 0824'              	movf	ftoa@f,w
  1643  007C' 0084'              	movwf	___flmul@a
  1644  007D' 3049               	movlw	73
  1645  007E' 0083'              	movwf	___flmul@b+3
  1646  007F' 3074               	movlw	116
  1647  0080' 0082'              	movwf	___flmul@b+2
  1648  0081' 3024               	movlw	36
  1649  0082' 0081'              	movwf	___flmul@b+1
  1650  0083' 3000               	movlw	0
  1651  0084' 0080'              	movwf	___flmul@b
  1652  0085' 2000'              	fcall	___flmul
  1653  0086' 1283               	bcf	3,5	;RP0=0, select bank0
  1654  0087' 1303               	bcf	3,6	;RP1=0, select bank0
  1655  0088' 0803'              	movf	?___flmul+3,w
  1656  0089' 0098'              	movwf	___fltol@f1+3
  1657  008A' 0802'              	movf	?___flmul+2,w
  1658  008B' 0097'              	movwf	___fltol@f1+2
  1659  008C' 0801'              	movf	?___flmul+1,w
  1660  008D' 0096'              	movwf	___fltol@f1+1
  1661  008E' 0800'              	movf	?___flmul,w
  1662  008F' 0095'              	movwf	___fltol@f1
  1663  0090' 2000'              	fcall	___fltol
  1664  0091' 1283               	bcf	3,5	;RP0=0, select bank0
  1665  0092' 1303               	bcf	3,6	;RP1=0, select bank0
  1666  0093' 0818'              	movf	?___fltol+3,w
  1667  0094' 00AD'              	movwf	ftoa@rem+3
  1668  0095' 0817'              	movf	?___fltol+2,w
  1669  0096' 00AC'              	movwf	ftoa@rem+2
  1670  0097' 0816'              	movf	?___fltol+1,w
  1671  0098' 00AB'              	movwf	ftoa@rem+1
  1672  0099' 0815'              	movf	?___fltol,w
  1673  009A' 00AA'              	movwf	ftoa@rem
  1674  009B' 3036               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1675  009C' 00A9'              	movwf	??_ftoa
  1676  009D' 0829'              	movf	??_ftoa,w
  1677  009E' 008A'              	movwf	sprintf@f
  1678  009F' 0831'              	movf	ftoa@l+3,w
  1679  00A0' 008E'              	movwf	?_sprintf+4
  1680  00A1' 0830'              	movf	ftoa@l+2,w
  1681  00A2' 008D'              	movwf	?_sprintf+3
  1682  00A3' 082F'              	movf	ftoa@l+1,w
  1683  00A4' 008C'              	movwf	?_sprintf+2
  1684  00A5' 082E'              	movf	ftoa@l,w
  1685  00A6' 008B'              	movwf	?_sprintf+1
  1686  00A7' 082D'              	movf	ftoa@rem+3,w
  1687  00A8' 0092'              	movwf	?_sprintf+8
  1688  00A9' 082C'              	movf	ftoa@rem+2,w
  1689  00AA' 0091'              	movwf	?_sprintf+7
  1690  00AB' 082B'              	movf	ftoa@rem+1,w
  1691  00AC' 0090'              	movwf	?_sprintf+6
  1692  00AD' 082A'              	movf	ftoa@rem,w
  1693  00AE' 008F'              	movwf	?_sprintf+5
  1694  00AF' 0832'              	movf	ftoa@cp,w
  1695  00B0' 2000'              	fcall	_sprintf
  1696  00B1' 3000'              	movlw	(low (ftoa@buf| 0))& (0+255)
  1697  00B2' 0008               	return
  1698  00B3'                    __end_of_ftoa:	
  1699                           
  1700                           	psect	text6
  1701  0000'                    __ptext6:	
  1702 ;; *************** function _sprintf *****************
  1703 ;; Defined at:
  1704 ;;		line 500 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
  1705 ;; Parameters:    Size  Location     Type
  1706 ;;  sp              1    wreg     PTR unsigned char 
  1707 ;;		 -> ftoa@buf(17), 
  1708 ;;  f               1   10[BANK0 ] PTR const unsigned char 
  1709 ;;		 -> STR_2(11), 
  1710 ;; Auto vars:     Size  Location     Type
  1711 ;;  sp              1   30[BANK0 ] PTR unsigned char 
  1712 ;;		 -> ftoa@buf(17), 
  1713 ;;  val             4   26[BANK0 ] unsigned long 
  1714 ;;  tmpval          4    0        struct .
  1715 ;;  prec            2   33[BANK0 ] int 
  1716 ;;  width           2   31[BANK0 ] int 
  1717 ;;  cp              2    0        PTR const unsigned char 
  1718 ;;  len             2    0        unsigned int 
  1719 ;;  c               1   35[BANK0 ] unsigned char 
  1720 ;;  ap              1   25[BANK0 ] PTR void [1]
  1721 ;;		 -> ?_sprintf(2), 
  1722 ;;  flag            1   24[BANK0 ] unsigned char 
  1723 ;; Return value:  Size  Location     Type
  1724 ;;                  2   10[BANK0 ] int 
  1725 ;; Registers used:
  1726 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1727 ;; Tracked objects:
  1728 ;;		On entry : 0/0
  1729 ;;		On exit  : 0/0
  1730 ;;		Unchanged: 0/0
  1731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1732 ;;      Params:         0       9       0       0
  1733 ;;      Locals:         0      12       0       0
  1734 ;;      Temps:          0       5       0       0
  1735 ;;      Totals:         0      26       0       0
  1736 ;;Total ram usage:       26 bytes
  1737 ;; Hardware stack levels used:    1
  1738 ;; Hardware stack levels required when called:    1
  1739 ;; This function calls:
  1740 ;;		___lldiv
  1741 ;;		___llmod
  1742 ;;		___wmul
  1743 ;;		_isdigit
  1744 ;; This function is called by:
  1745 ;;		_ftoa
  1746 ;; This function uses a non-reentrant model
  1747 ;;
  1748                           
  1749                           
  1750                           ;psect for function _sprintf
  1751  0000'                    _sprintf:	
  1752                           
  1753                           ;incstack = 0
  1754                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1755                           ;sprintf@sp stored from wreg
  1756  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  1757  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  1758  0002' 009E'              	movwf	sprintf@sp
  1759                           
  1760                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 500: sprint
      +                          f(char * sp, const char * f, ...);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources
      +                          \c90\common\doprnt.c: 501: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\
      +                          common\doprnt.c: 502:  va_list ap;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\source
      +                          s\c90\common\doprnt.c: 507:  char c;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c90\common\doprnt.c: 509:  int width;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic
      +                          \sources\c90\common\doprnt.c: 512:  int prec;
  1761  0003' 3000'              	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1762  0004' 0093'              	movwf	??_sprintf
  1763  0005' 0813'              	movf	??_sprintf,w
  1764  0006' 0099'              	movwf	sprintf@ap
  1765  0007'                    l2236:	
  1766                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 548:  while
      +                          ((c = *f++)) {
  1767                           
  1768                           
  1769                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 548:  while
      +                          ((c = *f++)) {
  1770  0007' 3001               	movlw	1
  1771  0008' 078A'              	addwf	sprintf@f,f
  1772  0009' 30FF               	movlw	-1
  1773  000A' 070A'              	addwf	sprintf@f,w
  1774  000B' 0084               	movwf	4
  1775  000C' 2000'              	fcall	stringdir
  1776  000D' 0093'              	movwf	??_sprintf
  1777  000E' 0813'              	movf	??_sprintf,w
  1778  000F' 00A3'              	movwf	sprintf@c
  1779  0010' 0823'              	movf	sprintf@c,w
  1780  0011' 1903               	btfsc	3,2
  1781  0012' 29BF'              	goto	l2238
  1782                           
  1783                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 550:   if(c
      +                           != '%')
  1784  0013' 3025               	movlw	37
  1785  0014' 0623'              	xorwf	sprintf@c,w
  1786  0015' 1903               	btfsc	3,2
  1787  0016' 2823'              	goto	l2148
  1788                           
  1789                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 552:   {;C:
      +                          \Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 553:    ((*sp+
      +                          + = (c)));
  1790  0017' 0823'              	movf	sprintf@c,w
  1791  0018' 0093'              	movwf	??_sprintf
  1792  0019' 081E'              	movf	sprintf@sp,w
  1793  001A' 0084               	movwf	4
  1794  001B' 0813'              	movf	??_sprintf,w
  1795  001C' 1383               	bcf	3,7	;select IRP bank0
  1796  001D' 0080               	movwf	0
  1797  001E' 3001               	movlw	1
  1798  001F' 0093'              	movwf	??_sprintf
  1799  0020' 0813'              	movf	??_sprintf,w
  1800  0021' 079E'              	addwf	sprintf@sp,f
  1801                           
  1802                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 554:    con
      +                          tinue;
  1803  0022' 2807'              	goto	l2236
  1804  0023'                    l2148:	
  1805                           
  1806                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 558:   widt
      +                          h = 0;
  1807  0023' 019F'              	clrf	sprintf@width
  1808  0024' 01A0'              	clrf	sprintf@width+1
  1809                           
  1810                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 560:   flag
      +                           = 0;
  1811  0025' 0198'              	clrf	sprintf@flag
  1812                           
  1813                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 609:   if(i
      +                          sdigit((unsigned)*f)) {
  1814  0026' 080A'              	movf	sprintf@f,w
  1815  0027' 0084               	movwf	4
  1816  0028' 2000'              	fcall	stringdir
  1817  0029' 2000'              	fcall	_isdigit
  1818  002A' 1C03               	btfss	3,0
  1819  002B' 285A'              	goto	l2162
  1820                           
  1821                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 610:    wid
      +                          th = 0;
  1822  002C' 1283               	bcf	3,5	;RP0=0, select bank0
  1823  002D' 1303               	bcf	3,6	;RP1=0, select bank0
  1824  002E' 019F'              	clrf	sprintf@width
  1825  002F' 01A0'              	clrf	sprintf@width+1
  1826  0030'                    l2154:	
  1827                           
  1828                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 612:     wi
      +                          dth *= 10;
  1829  0030' 300A               	movlw	10
  1830  0031' 0080'              	movwf	___wmul@multiplier
  1831  0032' 3000               	movlw	0
  1832  0033' 0081'              	movwf	___wmul@multiplier+1
  1833  0034' 1283               	bcf	3,5	;RP0=0, select bank0
  1834  0035' 1303               	bcf	3,6	;RP1=0, select bank0
  1835  0036' 0820'              	movf	sprintf@width+1,w
  1836  0037' 0083'              	movwf	___wmul@multiplicand+1
  1837  0038' 081F'              	movf	sprintf@width,w
  1838  0039' 0082'              	movwf	___wmul@multiplicand
  1839  003A' 2000'              	fcall	___wmul
  1840  003B' 0801'              	movf	?___wmul+1,w
  1841  003C' 1283               	bcf	3,5	;RP0=0, select bank0
  1842  003D' 1303               	bcf	3,6	;RP1=0, select bank0
  1843  003E' 00A0'              	movwf	sprintf@width+1
  1844  003F' 0800'              	movf	?___wmul,w
  1845  0040' 009F'              	movwf	sprintf@width
  1846                           
  1847                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 613:       
      +                           width += *f++ - '0';
  1848  0041' 080A'              	movf	sprintf@f,w
  1849  0042' 0084               	movwf	4
  1850  0043' 2000'              	fcall	stringdir
  1851  0044' 3ED0               	addlw	208
  1852  0045' 0093'              	movwf	??_sprintf
  1853  0046' 30FF               	movlw	255
  1854  0047' 1803               	skipnc
  1855  0048' 3000               	movlw	0
  1856  0049' 0094'              	movwf	??_sprintf+1
  1857  004A' 0813'              	movf	??_sprintf,w
  1858  004B' 079F'              	addwf	sprintf@width,f
  1859  004C' 1803               	skipnc
  1860  004D' 0AA0'              	incf	sprintf@width+1,f
  1861  004E' 0814'              	movf	??_sprintf+1,w
  1862  004F' 07A0'              	addwf	sprintf@width+1,f
  1863  0050' 3001               	movlw	1
  1864  0051' 0093'              	movwf	??_sprintf
  1865  0052' 0813'              	movf	??_sprintf,w
  1866  0053' 078A'              	addwf	sprintf@f,f
  1867                           
  1868                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 614:    } w
      +                          hile(isdigit((unsigned)*f));
  1869  0054' 080A'              	movf	sprintf@f,w
  1870  0055' 0084               	movwf	4
  1871  0056' 2000'              	fcall	stringdir
  1872  0057' 2000'              	fcall	_isdigit
  1873  0058' 1803               	btfsc	3,0
  1874  0059' 2830'              	goto	l2154
  1875  005A'                    l2162:	
  1876                           
  1877                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 623:   if(*
      +                          f == '.') {
  1878  005A' 1283               	bcf	3,5	;RP0=0, select bank0
  1879  005B' 1303               	bcf	3,6	;RP1=0, select bank0
  1880  005C' 080A'              	movf	sprintf@f,w
  1881  005D' 0084               	movwf	4
  1882  005E' 2000'              	fcall	stringdir
  1883  005F' 3A2E               	xorlw	46
  1884  0060' 1D03               	skipz
  1885  0061' 2892'              	goto	l2174
  1886                           
  1887                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 625:    f++
      +                          ;
  1888  0062' 3001               	movlw	1
  1889  0063' 0093'              	movwf	??_sprintf
  1890  0064' 0813'              	movf	??_sprintf,w
  1891  0065' 078A'              	addwf	sprintf@f,f
  1892                           
  1893                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 639:    {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 640:     prec
      +                           = 0;
  1894  0066' 01A1'              	clrf	sprintf@prec
  1895  0067' 01A2'              	clrf	sprintf@prec+1
  1896  0068'                    l2172:	
  1897                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 641:     wh
      +                          ile(isdigit((unsigned)*f))
  1898                           
  1899                           
  1900                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 641:     wh
      +                          ile(isdigit((unsigned)*f))
  1901  0068' 080A'              	movf	sprintf@f,w
  1902  0069' 0084               	movwf	4
  1903  006A' 2000'              	fcall	stringdir
  1904  006B' 2000'              	fcall	_isdigit
  1905  006C' 1C03               	btfss	3,0
  1906  006D' 289C'              	goto	l2180
  1907                           
  1908                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 642:      p
      +                          rec = prec*10 + *f++ - '0';
  1909  006E' 1283               	bcf	3,5	;RP0=0, select bank0
  1910  006F' 1303               	bcf	3,6	;RP1=0, select bank0
  1911  0070' 0822'              	movf	sprintf@prec+1,w
  1912  0071' 0081'              	movwf	___wmul@multiplier+1
  1913  0072' 0821'              	movf	sprintf@prec,w
  1914  0073' 0080'              	movwf	___wmul@multiplier
  1915  0074' 300A               	movlw	10
  1916  0075' 0082'              	movwf	___wmul@multiplicand
  1917  0076' 3000               	movlw	0
  1918  0077' 0083'              	movwf	___wmul@multiplicand+1
  1919  0078' 2000'              	fcall	___wmul
  1920  0079' 1283               	bcf	3,5	;RP0=0, select bank0
  1921  007A' 1303               	bcf	3,6	;RP1=0, select bank0
  1922  007B' 080A'              	movf	sprintf@f,w
  1923  007C' 0084               	movwf	4
  1924  007D' 2000'              	fcall	stringdir
  1925  007E' 0700'              	addwf	?___wmul,w
  1926  007F' 0093'              	movwf	??_sprintf
  1927  0080' 3000               	movlw	0
  1928  0081' 1803               	skipnc
  1929  0082' 3001               	movlw	1
  1930  0083' 0701'              	addwf	?___wmul+1,w
  1931  0084' 0094'              	movwf	??_sprintf+1
  1932  0085' 0813'              	movf	??_sprintf,w
  1933  0086' 3ED0               	addlw	208
  1934  0087' 00A1'              	movwf	sprintf@prec
  1935  0088' 0814'              	movf	??_sprintf+1,w
  1936  0089' 1803               	skipnc
  1937  008A' 3E01               	addlw	1
  1938  008B' 3EFF               	addlw	255
  1939  008C' 00A2'              	movwf	sprintf@prec+1
  1940  008D' 3001               	movlw	1
  1941  008E' 0093'              	movwf	??_sprintf
  1942  008F' 0813'              	movf	??_sprintf,w
  1943  0090' 078A'              	addwf	sprintf@f,f
  1944  0091' 2868'              	goto	l2172
  1945  0092'                    l2174:	
  1946                           
  1947                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 645:    pre
      +                          c = 0;
  1948  0092' 01A1'              	clrf	sprintf@prec
  1949  0093' 01A2'              	clrf	sprintf@prec+1
  1950  0094' 289C'              	goto	l2180
  1951  0095'                    l253:	
  1952                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 660:   case
      +                           'l':
  1953                           
  1954                           
  1955                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 662:    fla
      +                          g |= 0x10;
  1956  0095' 1618'              	bsf	sprintf@flag,4
  1957                           
  1958                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 663:    got
      +                          o loop;
  1959  0096' 289C'              	goto	l2180
  1960  0097'                    l2176:	
  1961                           
  1962                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 837:    fla
      +                          g |= 0xC0;
  1963  0097' 30C0               	movlw	192
  1964  0098' 0093'              	movwf	??_sprintf
  1965  0099' 0813'              	movf	??_sprintf,w
  1966  009A' 0498'              	iorwf	sprintf@flag,f
  1967                           
  1968                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 838:    bre
      +                          ak;
  1969  009B' 28B7'              	goto	l256
  1970  009C'                    l2180:	
  1971  009C' 3001               	movlw	1
  1972  009D' 1283               	bcf	3,5	;RP0=0, select bank0
  1973  009E' 1303               	bcf	3,6	;RP1=0, select bank0
  1974  009F' 078A'              	addwf	sprintf@f,f
  1975  00A0' 30FF               	movlw	-1
  1976  00A1' 070A'              	addwf	sprintf@f,w
  1977  00A2' 0084               	movwf	4
  1978  00A3' 2000'              	fcall	stringdir
  1979  00A4' 00A3'              	movwf	sprintf@c
  1980  00A5' 0093'              	movwf	??_sprintf
  1981  00A6' 0194'              	clrf	??_sprintf+1
  1982                           
  1983                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1984                           ; Switch size 1, requested type "simple"
  1985                           ; Number of cases is 1, Range of values is 0 to 0
  1986                           ; switch strategies available:
  1987                           ; Name         Instructions Cycles
  1988                           ; simple_byte            4     3 (average)
  1989                           ; direct_byte            7     6 (fixed)
  1990                           ; jumptable            260     6 (fixed)
  1991                           ;	Chosen strategy is simple_byte
  1992  00A7' 0814'              	movf	??_sprintf+1,w
  1993  00A8' 3A00               	xorlw	0	; case 0
  1994  00A9' 1903               	skipnz
  1995  00AA' 28AC'              	goto	l2700
  1996  00AB' 2807'              	goto	l2236
  1997  00AC'                    l2700:	
  1998                           
  1999                           ; Switch size 1, requested type "simple"
  2000                           ; Number of cases is 3, Range of values is 0 to 117
  2001                           ; switch strategies available:
  2002                           ; Name         Instructions Cycles
  2003                           ; simple_byte           10     6 (average)
  2004                           ; direct_byte          124     6 (fixed)
  2005                           ; jumptable            260     6 (fixed)
  2006                           ;	Chosen strategy is simple_byte
  2007  00AC' 0813'              	movf	??_sprintf,w
  2008  00AD' 3A00               	xorlw	0	; case 0
  2009  00AE' 1903               	skipnz
  2010  00AF' 29BF'              	goto	l2238
  2011  00B0' 3A6C               	xorlw	108	; case 108
  2012  00B1' 1903               	skipnz
  2013  00B2' 2895'              	goto	l253
  2014  00B3' 3A19               	xorlw	25	; case 117
  2015  00B4' 1903               	skipnz
  2016  00B5' 2897'              	goto	l2176
  2017  00B6' 2807'              	goto	l2236
  2018  00B7'                    l256:	
  2019                           
  2020                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1292:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1300:     if(
      +                          flag & 0x10)
  2021  00B7' 1E18'              	btfss	sprintf@flag,4
  2022  00B8' 28C9'              	goto	l2186
  2023                           
  2024                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1301:     v
      +                          al = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned long)0));
  2025  00B9' 0819'              	movf	sprintf@ap,w
  2026  00BA' 0084               	movwf	4
  2027  00BB' 1383               	bcf	3,7	;select IRP bank0
  2028  00BC' 0800               	movf	0,w
  2029  00BD' 009A'              	movwf	sprintf@val
  2030  00BE' 0A84               	incf	4,f
  2031  00BF' 0800               	movf	0,w
  2032  00C0' 009B'              	movwf	sprintf@val+1
  2033  00C1' 0A84               	incf	4,f
  2034  00C2' 0800               	movf	0,w
  2035  00C3' 009C'              	movwf	sprintf@val+2
  2036  00C4' 0A84               	incf	4,f
  2037  00C5' 0800               	movf	0,w
  2038  00C6' 009D'              	movwf	sprintf@val+3
  2039  00C7' 3004               	movlw	4
  2040  00C8' 28D8'              	goto	L1
  2041  00C9'                    l2186:	
  2042                           
  2043                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1305:     v
      +                          al = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  2044  00C9' 0819'              	movf	sprintf@ap,w
  2045  00CA' 0084               	movwf	4
  2046  00CB' 1383               	bcf	3,7	;select IRP bank0
  2047  00CC' 0800               	movf	0,w
  2048  00CD' 0093'              	movwf	??_sprintf
  2049  00CE' 0A84               	incf	4,f
  2050  00CF' 0800               	movf	0,w
  2051  00D0' 0094'              	movwf	??_sprintf+1
  2052  00D1' 0813'              	movf	??_sprintf,w
  2053  00D2' 009A'              	movwf	sprintf@val
  2054  00D3' 0814'              	movf	??_sprintf+1,w
  2055  00D4' 009B'              	movwf	sprintf@val+1
  2056  00D5' 019C'              	clrf	sprintf@val+2
  2057  00D6' 019D'              	clrf	sprintf@val+3
  2058  00D7' 3002               	movlw	2
  2059  00D8'                    L1:	
  2060  00D8' 0093'              	movwf	??_sprintf
  2061  00D9' 0813'              	movf	??_sprintf,w
  2062  00DA' 0799'              	addwf	sprintf@ap,f
  2063                           
  2064                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1306:   };C
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1309:   if(pr
      +                          ec == 0 && val == 0)
  2065  00DB' 0821'              	movf	sprintf@prec,w
  2066  00DC' 0422'              	iorwf	sprintf@prec+1,w
  2067  00DD' 1D03               	btfss	3,2
  2068  00DE' 28EB'              	goto	l2196
  2069  00DF' 081D'              	movf	sprintf@val+3,w
  2070  00E0' 041C'              	iorwf	sprintf@val+2,w
  2071  00E1' 041B'              	iorwf	sprintf@val+1,w
  2072  00E2' 041A'              	iorwf	sprintf@val,w
  2073  00E3' 1D03               	skipz
  2074  00E4' 28EB'              	goto	l2196
  2075                           
  2076                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1310:    pr
      +                          ec++;
  2077  00E5' 3001               	movlw	1
  2078  00E6' 07A1'              	addwf	sprintf@prec,f
  2079  00E7' 1803               	skipnc
  2080  00E8' 0AA2'              	incf	sprintf@prec+1,f
  2081  00E9' 3000               	movlw	0
  2082  00EA' 07A2'              	addwf	sprintf@prec+1,f
  2083  00EB'                    l2196:	
  2084                           
  2085                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1324:    fo
      +                          r(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2086  00EB' 01A3'              	clrf	sprintf@c
  2087  00EC' 0AA3'              	incf	sprintf@c,f
  2088  00ED'                    l2202:	
  2089                           
  2090                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1325:     i
      +                          f(val < dpowers[c])
  2091  00ED' 0823'              	movf	sprintf@c,w
  2092  00EE' 0093'              	movwf	??_sprintf
  2093  00EF' 3001               	movlw	1
  2094  00F0'                    u3125:	
  2095  00F0' 1003               	clrc
  2096  00F1' 0D93'              	rlf	??_sprintf,f
  2097  00F2' 3EFF               	addlw	-1
  2098  00F3' 1D03               	skipz
  2099  00F4' 28F0'              	goto	u3125
  2100  00F5' 1003               	clrc
  2101  00F6' 0D13'              	rlf	??_sprintf,w
  2102  00F7' 3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2103  00F8' 0084               	movwf	4
  2104  00F9' 2000'              	fcall	stringdir
  2105  00FA' 0094'              	movwf	??_sprintf+1
  2106  00FB' 2000'              	fcall	stringdir
  2107  00FC' 0095'              	movwf	??_sprintf+2
  2108  00FD' 2000'              	fcall	stringdir
  2109  00FE' 0096'              	movwf	??_sprintf+3
  2110  00FF' 2000'              	fcall	stringdir
  2111  0100' 0097'              	movwf	??_sprintf+4
  2112  0101' 0817'              	movf	??_sprintf+4,w
  2113  0102' 021D'              	subwf	sprintf@val+3,w
  2114  0103' 1D03               	skipz
  2115  0104' 290F'              	goto	u3135
  2116  0105' 0816'              	movf	??_sprintf+3,w
  2117  0106' 021C'              	subwf	sprintf@val+2,w
  2118  0107' 1D03               	skipz
  2119  0108' 290F'              	goto	u3135
  2120  0109' 0815'              	movf	??_sprintf+2,w
  2121  010A' 021B'              	subwf	sprintf@val+1,w
  2122  010B' 1D03               	skipz
  2123  010C' 290F'              	goto	u3135
  2124  010D' 0814'              	movf	??_sprintf+1,w
  2125  010E' 021A'              	subwf	sprintf@val,w
  2126  010F'                    u3135:	
  2127  010F' 1C03               	btfss	3,0
  2128  0110' 2919'              	goto	l2208
  2129  0111' 3001               	movlw	1
  2130  0112' 0093'              	movwf	??_sprintf
  2131  0113' 0813'              	movf	??_sprintf,w
  2132  0114' 07A3'              	addwf	sprintf@c,f
  2133  0115' 300A               	movlw	10
  2134  0116' 0623'              	xorwf	sprintf@c,w
  2135  0117' 1D03               	btfss	3,2
  2136  0118' 28ED'              	goto	l2202
  2137  0119'                    l2208:	
  2138                           
  2139                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1358:   if(
      +                          c < prec)
  2140  0119' 0822'              	movf	sprintf@prec+1,w
  2141  011A' 3A80               	xorlw	128
  2142  011B' 3C80               	sublw	128
  2143  011C' 1D03               	skipz
  2144  011D' 2920'              	goto	u3155
  2145  011E' 0821'              	movf	sprintf@prec,w
  2146  011F' 0223'              	subwf	sprintf@c,w
  2147  0120'                    u3155:	
  2148  0120' 1803               	skipnc
  2149  0121' 2929'              	goto	l2212
  2150                           
  2151                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1359:    c 
      +                          = prec;
  2152  0122' 1283               	bcf	3,5	;RP0=0, select bank0
  2153  0123' 1303               	bcf	3,6	;RP1=0, select bank0
  2154  0124' 0821'              	movf	sprintf@prec,w
  2155  0125' 0093'              	movwf	??_sprintf
  2156  0126' 0813'              	movf	??_sprintf,w
  2157  0127' 00A3'              	movwf	sprintf@c
  2158  0128' 293F'              	goto	l264
  2159  0129'                    l2212:	
  2160  0129' 1283               	bcf	3,5	;RP0=0, select bank0
  2161  012A' 1303               	bcf	3,6	;RP1=0, select bank0
  2162  012B' 0822'              	movf	sprintf@prec+1,w
  2163  012C' 3A80               	xorlw	128
  2164  012D' 0093'              	movwf	??_sprintf
  2165  012E' 3080               	movlw	128
  2166  012F' 0213'              	subwf	??_sprintf,w
  2167  0130' 1D03               	skipz
  2168  0131' 2934'              	goto	u3165
  2169  0132' 0823'              	movf	sprintf@c,w
  2170  0133' 0221'              	subwf	sprintf@prec,w
  2171  0134'                    u3165:	
  2172  0134' 1803               	skipnc
  2173  0135' 293F'              	goto	l264
  2174                           
  2175                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1361:    pr
      +                          ec = c;
  2176  0136' 1283               	bcf	3,5	;RP0=0, select bank0
  2177  0137' 1303               	bcf	3,6	;RP1=0, select bank0
  2178  0138' 0823'              	movf	sprintf@c,w
  2179  0139' 0093'              	movwf	??_sprintf
  2180  013A' 0194'              	clrf	??_sprintf+1
  2181  013B' 0813'              	movf	??_sprintf,w
  2182  013C' 00A1'              	movwf	sprintf@prec
  2183  013D' 0814'              	movf	??_sprintf+1,w
  2184  013E' 00A2'              	movwf	sprintf@prec+1
  2185  013F'                    l264:	
  2186                           
  2187                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1400:   if(
      +                          width > c)
  2188  013F' 1283               	bcf	3,5	;RP0=0, select bank0
  2189  0140' 1303               	bcf	3,6	;RP1=0, select bank0
  2190  0141' 0820'              	movf	sprintf@width+1,w
  2191  0142' 3A80               	xorlw	128
  2192  0143' 3C80               	sublw	128
  2193  0144' 1D03               	skipz
  2194  0145' 2948'              	goto	u3175
  2195  0146' 081F'              	movf	sprintf@width,w
  2196  0147' 0223'              	subwf	sprintf@c,w
  2197  0148'                    u3175:	
  2198  0148' 1803               	skipnc
  2199  0149' 2956'              	goto	l2218
  2200                           
  2201                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1401:    wi
      +                          dth -= c;
  2202  014A' 1283               	bcf	3,5	;RP0=0, select bank0
  2203  014B' 1303               	bcf	3,6	;RP1=0, select bank0
  2204  014C' 0823'              	movf	sprintf@c,w
  2205  014D' 0093'              	movwf	??_sprintf
  2206  014E' 0194'              	clrf	??_sprintf+1
  2207  014F' 0813'              	movf	??_sprintf,w
  2208  0150' 029F'              	subwf	sprintf@width,f
  2209  0151' 0814'              	movf	??_sprintf+1,w
  2210  0152' 1C03               	skipc
  2211  0153' 03A0'              	decf	sprintf@width+1,f
  2212  0154' 02A0'              	subwf	sprintf@width+1,f
  2213  0155' 295A'              	goto	l2220
  2214  0156'                    l2218:	
  2215                           
  2216                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1403:    wi
      +                          dth = 0;
  2217  0156' 1283               	bcf	3,5	;RP0=0, select bank0
  2218  0157' 1303               	bcf	3,6	;RP1=0, select bank0
  2219  0158' 019F'              	clrf	sprintf@width
  2220  0159' 01A0'              	clrf	sprintf@width+1
  2221  015A'                    l2220:	
  2222                           
  2223                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1441:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1443:    if(w
      +                          idth
  2224  015A' 081F'              	movf	sprintf@width,w
  2225  015B' 0420'              	iorwf	sprintf@width+1,w
  2226  015C' 1903               	btfsc	3,2
  2227  015D' 29B2'              	goto	l2234
  2228                           
  2229                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1449:      
      +                          ((*sp++ = (' ')));
  2230  015E' 3020               	movlw	32
  2231  015F' 0093'              	movwf	??_sprintf
  2232  0160' 081E'              	movf	sprintf@sp,w
  2233  0161' 0084               	movwf	4
  2234  0162' 0813'              	movf	??_sprintf,w
  2235  0163' 1383               	bcf	3,7	;select IRP bank0
  2236  0164' 0080               	movwf	0
  2237  0165' 3001               	movlw	1
  2238  0166' 0093'              	movwf	??_sprintf
  2239  0167' 0813'              	movf	??_sprintf,w
  2240  0168' 079E'              	addwf	sprintf@sp,f
  2241  0169' 30FF               	movlw	255
  2242  016A' 079F'              	addwf	sprintf@width,f
  2243  016B' 1803               	skipnc
  2244  016C' 0AA0'              	incf	sprintf@width+1,f
  2245  016D' 30FF               	movlw	255
  2246  016E' 07A0'              	addwf	sprintf@width+1,f
  2247  016F' 295A'              	goto	l2220
  2248  0170'                    l2228:	
  2249                           
  2250                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1497:    {;
      +                          C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1508:     c 
      +                          = (val / dpowers[prec]) % 10 + '0';
  2251  0170' 3000               	movlw	0
  2252  0171' 0083'              	movwf	___llmod@divisor+3
  2253  0172' 3000               	movlw	0
  2254  0173' 0082'              	movwf	___llmod@divisor+2
  2255  0174' 3000               	movlw	0
  2256  0175' 0081'              	movwf	___llmod@divisor+1
  2257  0176' 300A               	movlw	10
  2258  0177' 0080'              	movwf	___llmod@divisor
  2259  0178' 0821'              	movf	sprintf@prec,w
  2260  0179' 0093'              	movwf	??_sprintf
  2261  017A' 3001               	movlw	1
  2262  017B'                    u3205:	
  2263  017B' 1003               	clrc
  2264  017C' 0D93'              	rlf	??_sprintf,f
  2265  017D' 3EFF               	addlw	-1
  2266  017E' 1D03               	skipz
  2267  017F' 297B'              	goto	u3205
  2268  0180' 1003               	clrc
  2269  0181' 0D13'              	rlf	??_sprintf,w
  2270  0182' 3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2271  0183' 0084               	movwf	4
  2272  0184' 2000'              	fcall	stringdir
  2273  0185' 0080'              	movwf	___lldiv@divisor
  2274  0186' 2000'              	fcall	stringdir
  2275  0187' 0081'              	movwf	___lldiv@divisor+1
  2276  0188' 2000'              	fcall	stringdir
  2277  0189' 0082'              	movwf	___lldiv@divisor+2
  2278  018A' 2000'              	fcall	stringdir
  2279  018B' 0083'              	movwf	___lldiv@divisor+3
  2280  018C' 081D'              	movf	sprintf@val+3,w
  2281  018D' 0087'              	movwf	___lldiv@dividend+3
  2282  018E' 081C'              	movf	sprintf@val+2,w
  2283  018F' 0086'              	movwf	___lldiv@dividend+2
  2284  0190' 081B'              	movf	sprintf@val+1,w
  2285  0191' 0085'              	movwf	___lldiv@dividend+1
  2286  0192' 081A'              	movf	sprintf@val,w
  2287  0193' 0084'              	movwf	___lldiv@dividend
  2288  0194' 2000'              	fcall	___lldiv
  2289  0195' 0803'              	movf	?___lldiv+3,w
  2290  0196' 1283               	bcf	3,5	;RP0=0, select bank0
  2291  0197' 1303               	bcf	3,6	;RP1=0, select bank0
  2292  0198' 0087'              	movwf	___llmod@dividend+3
  2293  0199' 0802'              	movf	?___lldiv+2,w
  2294  019A' 0086'              	movwf	___llmod@dividend+2
  2295  019B' 0801'              	movf	?___lldiv+1,w
  2296  019C' 0085'              	movwf	___llmod@dividend+1
  2297  019D' 0800'              	movf	?___lldiv,w
  2298  019E' 0084'              	movwf	___llmod@dividend
  2299  019F' 2000'              	fcall	___llmod
  2300  01A0' 1283               	bcf	3,5	;RP0=0, select bank0
  2301  01A1' 1303               	bcf	3,6	;RP1=0, select bank0
  2302  01A2' 0800'              	movf	?___llmod,w
  2303  01A3' 3E30               	addlw	48
  2304  01A4' 0094'              	movwf	??_sprintf+1
  2305  01A5' 0814'              	movf	??_sprintf+1,w
  2306  01A6' 00A3'              	movwf	sprintf@c
  2307                           
  2308                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1542:    };
      +                          C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1543:    ((*
      +                          sp++ = (c)));
  2309  01A7' 0823'              	movf	sprintf@c,w
  2310  01A8' 0093'              	movwf	??_sprintf
  2311  01A9' 081E'              	movf	sprintf@sp,w
  2312  01AA' 0084               	movwf	4
  2313  01AB' 0813'              	movf	??_sprintf,w
  2314  01AC' 1383               	bcf	3,7	;select IRP bank0
  2315  01AD' 0080               	movwf	0
  2316  01AE' 3001               	movlw	1
  2317  01AF' 0093'              	movwf	??_sprintf
  2318  01B0' 0813'              	movf	??_sprintf,w
  2319  01B1' 079E'              	addwf	sprintf@sp,f
  2320  01B2'                    l2234:	
  2321                           
  2322                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1493:   whi
      +                          le(prec--) {
  2323  01B2' 30FF               	movlw	255
  2324  01B3' 07A1'              	addwf	sprintf@prec,f
  2325  01B4' 1803               	skipnc
  2326  01B5' 0AA2'              	incf	sprintf@prec+1,f
  2327  01B6' 30FF               	movlw	255
  2328  01B7' 07A2'              	addwf	sprintf@prec+1,f
  2329  01B8' 0A21'              	incf	sprintf@prec,w
  2330  01B9' 1D03               	skipz
  2331  01BA' 2970'              	goto	l2228
  2332  01BB' 0A22'              	incf	sprintf@prec+1,w
  2333  01BC' 1903               	btfsc	3,2
  2334  01BD' 2807'              	goto	l2236
  2335  01BE' 2970'              	goto	l2228
  2336  01BF'                    l2238:	
  2337                           
  2338                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1557:  *sp 
      +                          = 0;
  2339  01BF' 081E'              	movf	sprintf@sp,w
  2340  01C0' 0084               	movwf	4
  2341  01C1' 1383               	bcf	3,7	;select IRP bank0
  2342  01C2' 0180               	clrf	0
  2343  01C3' 0008               	return
  2344  01C4'                    __end_of_sprintf:	
  2345                           
  2346                           	psect	text7
  2347  0000'                    __ptext7:	
  2348 ;; *************** function _isdigit *****************
  2349 ;; Defined at:
  2350 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\isdigit.c"
  2351 ;; Parameters:    Size  Location     Type
  2352 ;;  c               1    wreg     unsigned char 
  2353 ;; Auto vars:     Size  Location     Type
  2354 ;;  c               1    1[COMMON] unsigned char 
  2355 ;; Return value:  Size  Location     Type
  2356 ;;		None               void
  2357 ;; Registers used:
  2358 ;;		wreg, status,2, status,0
  2359 ;; Tracked objects:
  2360 ;;		On entry : 0/0
  2361 ;;		On exit  : 0/0
  2362 ;;		Unchanged: 0/0
  2363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2364 ;;      Params:         0       0       0       0
  2365 ;;      Locals:         2       0       0       0
  2366 ;;      Temps:          0       0       0       0
  2367 ;;      Totals:         2       0       0       0
  2368 ;;Total ram usage:        2 bytes
  2369 ;; Hardware stack levels used:    1
  2370 ;; This function calls:
  2371 ;;		Nothing
  2372 ;; This function is called by:
  2373 ;;		_sprintf
  2374 ;; This function uses a non-reentrant model
  2375 ;;
  2376                           
  2377                           
  2378                           ;psect for function _isdigit
  2379  0000'                    _isdigit:	
  2380                           
  2381                           ;incstack = 0
  2382                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  2383                           ;isdigit@c stored from wreg
  2384  0000' 0081'              	movwf	isdigit@c
  2385  0001' 0180'              	clrf	_isdigit$654
  2386  0002' 303A               	movlw	58
  2387  0003' 0201'              	subwf	isdigit@c,w
  2388  0004' 1803               	skipnc
  2389  0005' 280C'              	goto	l1796
  2390  0006' 3030               	movlw	48
  2391  0007' 0201'              	subwf	isdigit@c,w
  2392  0008' 1C03               	skipc
  2393  0009' 280C'              	goto	l1796
  2394  000A' 0180'              	clrf	_isdigit$654
  2395  000B' 0A80'              	incf	_isdigit$654,f
  2396  000C'                    l1796:	
  2397  000C' 0C00'              	rrf	_isdigit$654,w
  2398  000D' 0008               	return
  2399  000E'                    __end_of_isdigit:	
  2400                           
  2401                           	psect	text8
  2402  0000'                    __ptext8:	
  2403 ;; *************** function ___wmul *****************
  2404 ;; Defined at:
  2405 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul16.c"
  2406 ;; Parameters:    Size  Location     Type
  2407 ;;  multiplier      2    0[COMMON] unsigned int 
  2408 ;;  multiplicand    2    2[COMMON] unsigned int 
  2409 ;; Auto vars:     Size  Location     Type
  2410 ;;  product         2    4[COMMON] unsigned int 
  2411 ;; Return value:  Size  Location     Type
  2412 ;;                  2    0[COMMON] unsigned int 
  2413 ;; Registers used:
  2414 ;;		wreg, status,2, status,0
  2415 ;; Tracked objects:
  2416 ;;		On entry : 0/0
  2417 ;;		On exit  : 0/0
  2418 ;;		Unchanged: 0/0
  2419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2420 ;;      Params:         4       0       0       0
  2421 ;;      Locals:         2       0       0       0
  2422 ;;      Temps:          0       0       0       0
  2423 ;;      Totals:         6       0       0       0
  2424 ;;Total ram usage:        6 bytes
  2425 ;; Hardware stack levels used:    1
  2426 ;; This function calls:
  2427 ;;		Nothing
  2428 ;; This function is called by:
  2429 ;;		_sprintf
  2430 ;; This function uses a non-reentrant model
  2431 ;;
  2432                           
  2433                           
  2434                           ;psect for function ___wmul
  2435  0000'                    ___wmul:	
  2436                           
  2437                           ;incstack = 0
  2438                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2439  0000' 0184'              	clrf	___wmul@product
  2440  0001' 0185'              	clrf	___wmul@product+1
  2441  0002'                    l1802:	
  2442  0002' 1C00'              	btfss	___wmul@multiplier,0
  2443  0003' 280A'              	goto	l279
  2444  0004' 0802'              	movf	___wmul@multiplicand,w
  2445  0005' 0784'              	addwf	___wmul@product,f
  2446  0006' 1803               	skipnc
  2447  0007' 0A85'              	incf	___wmul@product+1,f
  2448  0008' 0803'              	movf	___wmul@multiplicand+1,w
  2449  0009' 0785'              	addwf	___wmul@product+1,f
  2450  000A'                    l279:	
  2451  000A' 3001               	movlw	1
  2452  000B'                    u2175:	
  2453  000B' 1003               	clrc
  2454  000C' 0D82'              	rlf	___wmul@multiplicand,f
  2455  000D' 0D83'              	rlf	___wmul@multiplicand+1,f
  2456  000E' 3EFF               	addlw	-1
  2457  000F' 1D03               	skipz
  2458  0010' 280B'              	goto	u2175
  2459  0011' 3001               	movlw	1
  2460  0012'                    u2185:	
  2461  0012' 1003               	clrc
  2462  0013' 0C81'              	rrf	___wmul@multiplier+1,f
  2463  0014' 0C80'              	rrf	___wmul@multiplier,f
  2464  0015' 3EFF               	addlw	-1
  2465  0016' 1D03               	skipz
  2466  0017' 2812'              	goto	u2185
  2467  0018' 0800'              	movf	___wmul@multiplier,w
  2468  0019' 0401'              	iorwf	___wmul@multiplier+1,w
  2469  001A' 1D03               	btfss	3,2
  2470  001B' 2802'              	goto	l1802
  2471  001C' 0805'              	movf	___wmul@product+1,w
  2472  001D' 0081'              	movwf	?___wmul+1
  2473  001E' 0804'              	movf	___wmul@product,w
  2474  001F' 0080'              	movwf	?___wmul
  2475  0020' 0008               	return
  2476  0021'                    __end_of___wmul:	
  2477                           
  2478                           	psect	text9
  2479  0000'                    __ptext9:	
  2480 ;; *************** function ___llmod *****************
  2481 ;; Defined at:
  2482 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\llmod.c"
  2483 ;; Parameters:    Size  Location     Type
  2484 ;;  divisor         4    0[BANK0 ] unsigned long 
  2485 ;;  dividend        4    4[BANK0 ] unsigned long 
  2486 ;; Auto vars:     Size  Location     Type
  2487 ;;  counter         1    9[BANK0 ] unsigned char 
  2488 ;; Return value:  Size  Location     Type
  2489 ;;                  4    0[BANK0 ] unsigned long 
  2490 ;; Registers used:
  2491 ;;		wreg, status,2, status,0
  2492 ;; Tracked objects:
  2493 ;;		On entry : 0/0
  2494 ;;		On exit  : 0/0
  2495 ;;		Unchanged: 0/0
  2496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2497 ;;      Params:         0       8       0       0
  2498 ;;      Locals:         0       1       0       0
  2499 ;;      Temps:          0       1       0       0
  2500 ;;      Totals:         0      10       0       0
  2501 ;;Total ram usage:       10 bytes
  2502 ;; Hardware stack levels used:    1
  2503 ;; This function calls:
  2504 ;;		Nothing
  2505 ;; This function is called by:
  2506 ;;		_sprintf
  2507 ;; This function uses a non-reentrant model
  2508 ;;
  2509                           
  2510                           
  2511                           ;psect for function ___llmod
  2512  0000'                    ___llmod:	
  2513                           
  2514                           ;incstack = 0
  2515                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  2516  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  2517  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  2518  0002' 0803'              	movf	___llmod@divisor+3,w
  2519  0003' 0402'              	iorwf	___llmod@divisor+2,w
  2520  0004' 0401'              	iorwf	___llmod@divisor+1,w
  2521  0005' 0400'              	iorwf	___llmod@divisor,w
  2522  0006' 1903               	skipnz
  2523  0007' 2845'              	goto	l1854
  2524  0008' 0189'              	clrf	___llmod@counter
  2525  0009' 0A89'              	incf	___llmod@counter,f
  2526  000A'                    l1844:	
  2527  000A' 1B83'              	btfsc	___llmod@divisor+3,7
  2528  000B' 281A'              	goto	l1846
  2529  000C' 3001               	movlw	1
  2530  000D' 0088'              	movwf	??___llmod
  2531  000E'                    u2285:	
  2532  000E' 1003               	clrc
  2533  000F' 0D80'              	rlf	___llmod@divisor,f
  2534  0010' 0D81'              	rlf	___llmod@divisor+1,f
  2535  0011' 0D82'              	rlf	___llmod@divisor+2,f
  2536  0012' 0D83'              	rlf	___llmod@divisor+3,f
  2537  0013' 0B88'              	decfsz	??___llmod,f
  2538  0014' 280E'              	goto	u2285
  2539  0015' 3001               	movlw	1
  2540  0016' 0088'              	movwf	??___llmod
  2541  0017' 0808'              	movf	??___llmod,w
  2542  0018' 0789'              	addwf	___llmod@counter,f
  2543  0019' 280A'              	goto	l1844
  2544  001A'                    l1846:	
  2545  001A' 0803'              	movf	___llmod@divisor+3,w
  2546  001B' 0207'              	subwf	___llmod@dividend+3,w
  2547  001C' 1D03               	skipz
  2548  001D' 2828'              	goto	u2305
  2549  001E' 0802'              	movf	___llmod@divisor+2,w
  2550  001F' 0206'              	subwf	___llmod@dividend+2,w
  2551  0020' 1D03               	skipz
  2552  0021' 2828'              	goto	u2305
  2553  0022' 0801'              	movf	___llmod@divisor+1,w
  2554  0023' 0205'              	subwf	___llmod@dividend+1,w
  2555  0024' 1D03               	skipz
  2556  0025' 2828'              	goto	u2305
  2557  0026' 0800'              	movf	___llmod@divisor,w
  2558  0027' 0204'              	subwf	___llmod@dividend,w
  2559  0028'                    u2305:	
  2560  0028' 1C03               	skipc
  2561  0029' 2838'              	goto	l1850
  2562  002A' 0800'              	movf	___llmod@divisor,w
  2563  002B' 0284'              	subwf	___llmod@dividend,f
  2564  002C' 0801'              	movf	___llmod@divisor+1,w
  2565  002D' 1C03               	skipc
  2566  002E' 0F01'              	incfsz	___llmod@divisor+1,w
  2567  002F' 0285'              	subwf	___llmod@dividend+1,f
  2568  0030' 0802'              	movf	___llmod@divisor+2,w
  2569  0031' 1C03               	skipc
  2570  0032' 0F02'              	incfsz	___llmod@divisor+2,w
  2571  0033' 0286'              	subwf	___llmod@dividend+2,f
  2572  0034' 0803'              	movf	___llmod@divisor+3,w
  2573  0035' 1C03               	skipc
  2574  0036' 0F03'              	incfsz	___llmod@divisor+3,w
  2575  0037' 0287'              	subwf	___llmod@dividend+3,f
  2576  0038'                    l1850:	
  2577  0038' 3001               	movlw	1
  2578  0039'                    u2315:	
  2579  0039' 1003               	clrc
  2580  003A' 0C83'              	rrf	___llmod@divisor+3,f
  2581  003B' 0C82'              	rrf	___llmod@divisor+2,f
  2582  003C' 0C81'              	rrf	___llmod@divisor+1,f
  2583  003D' 0C80'              	rrf	___llmod@divisor,f
  2584  003E' 3EFF               	addlw	-1
  2585  003F' 1D03               	skipz
  2586  0040' 2839'              	goto	u2315
  2587  0041' 3001               	movlw	1
  2588  0042' 0289'              	subwf	___llmod@counter,f
  2589  0043' 1D03               	btfss	3,2
  2590  0044' 281A'              	goto	l1846
  2591  0045'                    l1854:	
  2592  0045' 0807'              	movf	___llmod@dividend+3,w
  2593  0046' 0083'              	movwf	?___llmod+3
  2594  0047' 0806'              	movf	___llmod@dividend+2,w
  2595  0048' 0082'              	movwf	?___llmod+2
  2596  0049' 0805'              	movf	___llmod@dividend+1,w
  2597  004A' 0081'              	movwf	?___llmod+1
  2598  004B' 0804'              	movf	___llmod@dividend,w
  2599  004C' 0080'              	movwf	?___llmod
  2600  004D' 0008               	return
  2601  004E'                    __end_of___llmod:	
  2602                           
  2603                           	psect	text10
  2604  0000'                    __ptext10:	
  2605 ;; *************** function ___lldiv *****************
  2606 ;; Defined at:
  2607 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\__lldiv.c"
  2608 ;; Parameters:    Size  Location     Type
  2609 ;;  divisor         4    0[COMMON] unsigned long 
  2610 ;;  dividend        4    4[COMMON] unsigned long 
  2611 ;; Auto vars:     Size  Location     Type
  2612 ;;  quotient        4    9[COMMON] unsigned long 
  2613 ;;  counter         1   13[COMMON] unsigned char 
  2614 ;; Return value:  Size  Location     Type
  2615 ;;                  4    0[COMMON] unsigned long 
  2616 ;; Registers used:
  2617 ;;		wreg, status,2, status,0
  2618 ;; Tracked objects:
  2619 ;;		On entry : 0/0
  2620 ;;		On exit  : 0/0
  2621 ;;		Unchanged: 0/0
  2622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2623 ;;      Params:         8       0       0       0
  2624 ;;      Locals:         5       0       0       0
  2625 ;;      Temps:          1       0       0       0
  2626 ;;      Totals:        14       0       0       0
  2627 ;;Total ram usage:       14 bytes
  2628 ;; Hardware stack levels used:    1
  2629 ;; This function calls:
  2630 ;;		Nothing
  2631 ;; This function is called by:
  2632 ;;		_sprintf
  2633 ;; This function uses a non-reentrant model
  2634 ;;
  2635                           
  2636                           
  2637                           ;psect for function ___lldiv
  2638  0000'                    ___lldiv:	
  2639                           
  2640                           ;incstack = 0
  2641                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2642  0000' 3000               	movlw	0
  2643  0001' 008C'              	movwf	___lldiv@quotient+3
  2644  0002' 3000               	movlw	0
  2645  0003' 008B'              	movwf	___lldiv@quotient+2
  2646  0004' 3000               	movlw	0
  2647  0005' 008A'              	movwf	___lldiv@quotient+1
  2648  0006' 3000               	movlw	0
  2649  0007' 0089'              	movwf	___lldiv@quotient
  2650  0008' 0803'              	movf	___lldiv@divisor+3,w
  2651  0009' 0402'              	iorwf	___lldiv@divisor+2,w
  2652  000A' 0401'              	iorwf	___lldiv@divisor+1,w
  2653  000B' 0400'              	iorwf	___lldiv@divisor,w
  2654  000C' 1903               	skipnz
  2655  000D' 2855'              	goto	l1834
  2656  000E' 018D'              	clrf	___lldiv@counter
  2657  000F' 0A8D'              	incf	___lldiv@counter,f
  2658  0010'                    l1820:	
  2659  0010' 1B83'              	btfsc	___lldiv@divisor+3,7
  2660  0011' 2820'              	goto	l1822
  2661  0012' 3001               	movlw	1
  2662  0013' 0088'              	movwf	??___lldiv
  2663  0014'                    u2215:	
  2664  0014' 1003               	clrc
  2665  0015' 0D80'              	rlf	___lldiv@divisor,f
  2666  0016' 0D81'              	rlf	___lldiv@divisor+1,f
  2667  0017' 0D82'              	rlf	___lldiv@divisor+2,f
  2668  0018' 0D83'              	rlf	___lldiv@divisor+3,f
  2669  0019' 0B88'              	decfsz	??___lldiv,f
  2670  001A' 2814'              	goto	u2215
  2671  001B' 3001               	movlw	1
  2672  001C' 0088'              	movwf	??___lldiv
  2673  001D' 0808'              	movf	??___lldiv,w
  2674  001E' 078D'              	addwf	___lldiv@counter,f
  2675  001F' 2810'              	goto	l1820
  2676  0020'                    l1822:	
  2677  0020' 3001               	movlw	1
  2678  0021' 0088'              	movwf	??___lldiv
  2679  0022'                    u2235:	
  2680  0022' 1003               	clrc
  2681  0023' 0D89'              	rlf	___lldiv@quotient,f
  2682  0024' 0D8A'              	rlf	___lldiv@quotient+1,f
  2683  0025' 0D8B'              	rlf	___lldiv@quotient+2,f
  2684  0026' 0D8C'              	rlf	___lldiv@quotient+3,f
  2685  0027' 0B88'              	decfsz	??___lldiv,f
  2686  0028' 2822'              	goto	u2235
  2687  0029' 0803'              	movf	___lldiv@divisor+3,w
  2688  002A' 0207'              	subwf	___lldiv@dividend+3,w
  2689  002B' 1D03               	skipz
  2690  002C' 2837'              	goto	u2245
  2691  002D' 0802'              	movf	___lldiv@divisor+2,w
  2692  002E' 0206'              	subwf	___lldiv@dividend+2,w
  2693  002F' 1D03               	skipz
  2694  0030' 2837'              	goto	u2245
  2695  0031' 0801'              	movf	___lldiv@divisor+1,w
  2696  0032' 0205'              	subwf	___lldiv@dividend+1,w
  2697  0033' 1D03               	skipz
  2698  0034' 2837'              	goto	u2245
  2699  0035' 0800'              	movf	___lldiv@divisor,w
  2700  0036' 0204'              	subwf	___lldiv@dividend,w
  2701  0037'                    u2245:	
  2702  0037' 1C03               	skipc
  2703  0038' 2848'              	goto	l1830
  2704  0039' 0800'              	movf	___lldiv@divisor,w
  2705  003A' 0284'              	subwf	___lldiv@dividend,f
  2706  003B' 0801'              	movf	___lldiv@divisor+1,w
  2707  003C' 1C03               	skipc
  2708  003D' 0F01'              	incfsz	___lldiv@divisor+1,w
  2709  003E' 0285'              	subwf	___lldiv@dividend+1,f
  2710  003F' 0802'              	movf	___lldiv@divisor+2,w
  2711  0040' 1C03               	skipc
  2712  0041' 0F02'              	incfsz	___lldiv@divisor+2,w
  2713  0042' 0286'              	subwf	___lldiv@dividend+2,f
  2714  0043' 0803'              	movf	___lldiv@divisor+3,w
  2715  0044' 1C03               	skipc
  2716  0045' 0F03'              	incfsz	___lldiv@divisor+3,w
  2717  0046' 0287'              	subwf	___lldiv@dividend+3,f
  2718  0047' 1409'              	bsf	___lldiv@quotient,0
  2719  0048'                    l1830:	
  2720  0048' 3001               	movlw	1
  2721  0049'                    u2255:	
  2722  0049' 1003               	clrc
  2723  004A' 0C83'              	rrf	___lldiv@divisor+3,f
  2724  004B' 0C82'              	rrf	___lldiv@divisor+2,f
  2725  004C' 0C81'              	rrf	___lldiv@divisor+1,f
  2726  004D' 0C80'              	rrf	___lldiv@divisor,f
  2727  004E' 3EFF               	addlw	-1
  2728  004F' 1D03               	skipz
  2729  0050' 2849'              	goto	u2255
  2730  0051' 3001               	movlw	1
  2731  0052' 028D'              	subwf	___lldiv@counter,f
  2732  0053' 1D03               	btfss	3,2
  2733  0054' 2820'              	goto	l1822
  2734  0055'                    l1834:	
  2735  0055' 080C'              	movf	___lldiv@quotient+3,w
  2736  0056' 0083'              	movwf	?___lldiv+3
  2737  0057' 080B'              	movf	___lldiv@quotient+2,w
  2738  0058' 0082'              	movwf	?___lldiv+2
  2739  0059' 080A'              	movf	___lldiv@quotient+1,w
  2740  005A' 0081'              	movwf	?___lldiv+1
  2741  005B' 0809'              	movf	___lldiv@quotient,w
  2742  005C' 0080'              	movwf	?___lldiv
  2743  005D' 0008               	return
  2744  005E'                    __end_of___lldiv:	
  2745                           
  2746                           	psect	text11
  2747  0000'                    __ptext11:	
  2748 ;; *************** function ___xxtofl *****************
  2749 ;; Defined at:
  2750 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\xxtofl.c"
  2751 ;; Parameters:    Size  Location     Type
  2752 ;;  sign            1    wreg     unsigned char 
  2753 ;;  val             4    0[COMMON] long 
  2754 ;; Auto vars:     Size  Location     Type
  2755 ;;  sign            1    8[COMMON] unsigned char 
  2756 ;;  arg             4   10[COMMON] unsigned long 
  2757 ;;  exp             1    9[COMMON] unsigned char 
  2758 ;; Return value:  Size  Location     Type
  2759 ;;                  4    0[COMMON] unsigned char 
  2760 ;; Registers used:
  2761 ;;		wreg, status,2, status,0
  2762 ;; Tracked objects:
  2763 ;;		On entry : 0/0
  2764 ;;		On exit  : 0/0
  2765 ;;		Unchanged: 0/0
  2766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2767 ;;      Params:         4       0       0       0
  2768 ;;      Locals:         6       0       0       0
  2769 ;;      Temps:          4       0       0       0
  2770 ;;      Totals:        14       0       0       0
  2771 ;;Total ram usage:       14 bytes
  2772 ;; Hardware stack levels used:    1
  2773 ;; This function calls:
  2774 ;;		Nothing
  2775 ;; This function is called by:
  2776 ;;		_ftoa
  2777 ;; This function uses a non-reentrant model
  2778 ;;
  2779                           
  2780                           
  2781                           ;psect for function ___xxtofl
  2782  0000'                    ___xxtofl:	
  2783                           
  2784                           ;incstack = 0
  2785                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  2786                           ;___xxtofl@sign stored from wreg
  2787  0000' 0088'              	movwf	___xxtofl@sign
  2788  0001' 0808'              	movf	___xxtofl@sign,w
  2789  0002' 1D03               	btfss	3,2
  2790  0003' 1F83'              	btfss	___xxtofl@val+3,7
  2791  0004' 2815'              	goto	l2462
  2792  0005' 0900'              	comf	___xxtofl@val,w
  2793  0006' 008A'              	movwf	___xxtofl@arg
  2794  0007' 0901'              	comf	___xxtofl@val+1,w
  2795  0008' 008B'              	movwf	___xxtofl@arg+1
  2796  0009' 0902'              	comf	___xxtofl@val+2,w
  2797  000A' 008C'              	movwf	___xxtofl@arg+2
  2798  000B' 0903'              	comf	___xxtofl@val+3,w
  2799  000C' 008D'              	movwf	___xxtofl@arg+3
  2800  000D' 0A8A'              	incf	___xxtofl@arg,f
  2801  000E' 1903               	skipnz
  2802  000F' 0A8B'              	incf	___xxtofl@arg+1,f
  2803  0010' 1903               	skipnz
  2804  0011' 0A8C'              	incf	___xxtofl@arg+2,f
  2805  0012' 1903               	skipnz
  2806  0013' 0A8D'              	incf	___xxtofl@arg+3,f
  2807  0014' 281D'              	goto	l706
  2808  0015'                    l2462:	
  2809  0015' 0803'              	movf	___xxtofl@val+3,w
  2810  0016' 008D'              	movwf	___xxtofl@arg+3
  2811  0017' 0802'              	movf	___xxtofl@val+2,w
  2812  0018' 008C'              	movwf	___xxtofl@arg+2
  2813  0019' 0801'              	movf	___xxtofl@val+1,w
  2814  001A' 008B'              	movwf	___xxtofl@arg+1
  2815  001B' 0800'              	movf	___xxtofl@val,w
  2816  001C' 008A'              	movwf	___xxtofl@arg
  2817  001D'                    l706:	
  2818  001D' 0803'              	movf	___xxtofl@val+3,w
  2819  001E' 0402'              	iorwf	___xxtofl@val+2,w
  2820  001F' 0401'              	iorwf	___xxtofl@val+1,w
  2821  0020' 0400'              	iorwf	___xxtofl@val,w
  2822  0021' 1D03               	skipz
  2823  0022' 282C'              	goto	l2468
  2824  0023' 3000               	movlw	0
  2825  0024' 0083'              	movwf	?___xxtofl+3
  2826  0025' 3000               	movlw	0
  2827  0026' 0082'              	movwf	?___xxtofl+2
  2828  0027' 3000               	movlw	0
  2829  0028' 0081'              	movwf	?___xxtofl+1
  2830  0029' 3000               	movlw	0
  2831  002A' 0080'              	movwf	?___xxtofl
  2832  002B' 0008               	return
  2833  002C'                    l2468:	
  2834  002C' 3096               	movlw	150
  2835  002D' 0084'              	movwf	??___xxtofl
  2836  002E' 0804'              	movf	??___xxtofl,w
  2837  002F' 0089'              	movwf	___xxtofl@exp
  2838  0030'                    l2472:	
  2839  0030' 30FE               	movlw	254
  2840  0031' 050D'              	andwf	___xxtofl@arg+3,w
  2841  0032' 1903               	btfsc	3,2
  2842  0033' 285D'              	goto	l712
  2843  0034' 3001               	movlw	1
  2844  0035' 0084'              	movwf	??___xxtofl
  2845  0036' 0804'              	movf	??___xxtofl,w
  2846  0037' 0789'              	addwf	___xxtofl@exp,f
  2847  0038' 3001               	movlw	1
  2848  0039'                    u3815:	
  2849  0039' 1003               	clrc
  2850  003A' 0C8D'              	rrf	___xxtofl@arg+3,f
  2851  003B' 0C8C'              	rrf	___xxtofl@arg+2,f
  2852  003C' 0C8B'              	rrf	___xxtofl@arg+1,f
  2853  003D' 0C8A'              	rrf	___xxtofl@arg,f
  2854  003E' 3EFF               	addlw	-1
  2855  003F' 1D03               	skipz
  2856  0040' 2839'              	goto	u3815
  2857  0041' 2830'              	goto	l2472
  2858  0042'                    l2474:	
  2859  0042' 3001               	movlw	1
  2860  0043' 0084'              	movwf	??___xxtofl
  2861  0044' 0804'              	movf	??___xxtofl,w
  2862  0045' 0789'              	addwf	___xxtofl@exp,f
  2863  0046' 3001               	movlw	1
  2864  0047' 078A'              	addwf	___xxtofl@arg,f
  2865  0048' 3000               	movlw	0
  2866  0049' 1803               	skipnc
  2867  004A' 3001               	movlw	1
  2868  004B' 078B'              	addwf	___xxtofl@arg+1,f
  2869  004C' 3000               	movlw	0
  2870  004D' 1803               	skipnc
  2871  004E' 3001               	movlw	1
  2872  004F' 078C'              	addwf	___xxtofl@arg+2,f
  2873  0050' 3000               	movlw	0
  2874  0051' 1803               	skipnc
  2875  0052' 3001               	movlw	1
  2876  0053' 078D'              	addwf	___xxtofl@arg+3,f
  2877  0054' 3001               	movlw	1
  2878  0055'                    u3835:	
  2879  0055' 1003               	clrc
  2880  0056' 0C8D'              	rrf	___xxtofl@arg+3,f
  2881  0057' 0C8C'              	rrf	___xxtofl@arg+2,f
  2882  0058' 0C8B'              	rrf	___xxtofl@arg+1,f
  2883  0059' 0C8A'              	rrf	___xxtofl@arg,f
  2884  005A' 3EFF               	addlw	-1
  2885  005B' 1D03               	skipz
  2886  005C' 2855'              	goto	u3835
  2887  005D'                    l712:	
  2888  005D' 30FF               	movlw	255
  2889  005E' 050D'              	andwf	___xxtofl@arg+3,w
  2890  005F' 1903               	btfsc	3,2
  2891  0060' 2871'              	goto	l2482
  2892  0061' 2842'              	goto	l2474
  2893  0062'                    l2484:	
  2894  0062' 3002               	movlw	2
  2895  0063' 0209'              	subwf	___xxtofl@exp,w
  2896  0064' 1C03               	btfss	3,0
  2897  0065' 2873'              	goto	l719
  2898  0066' 3001               	movlw	1
  2899  0067' 0289'              	subwf	___xxtofl@exp,f
  2900  0068' 3001               	movlw	1
  2901  0069' 0084'              	movwf	??___xxtofl
  2902  006A'                    u3855:	
  2903  006A' 1003               	clrc
  2904  006B' 0D8A'              	rlf	___xxtofl@arg,f
  2905  006C' 0D8B'              	rlf	___xxtofl@arg+1,f
  2906  006D' 0D8C'              	rlf	___xxtofl@arg+2,f
  2907  006E' 0D8D'              	rlf	___xxtofl@arg+3,f
  2908  006F' 0B84'              	decfsz	??___xxtofl,f
  2909  0070' 286A'              	goto	u3855
  2910  0071'                    l2482:	
  2911  0071' 1F8C'              	btfss	___xxtofl@arg+2,7
  2912  0072' 2862'              	goto	l2484
  2913  0073'                    l719:	
  2914  0073' 1809'              	btfsc	___xxtofl@exp,0
  2915  0074' 287D'              	goto	l720
  2916  0075' 30FF               	movlw	255
  2917  0076' 058A'              	andwf	___xxtofl@arg,f
  2918  0077' 30FF               	movlw	255
  2919  0078' 058B'              	andwf	___xxtofl@arg+1,f
  2920  0079' 307F               	movlw	127
  2921  007A' 058C'              	andwf	___xxtofl@arg+2,f
  2922  007B' 30FF               	movlw	255
  2923  007C' 058D'              	andwf	___xxtofl@arg+3,f
  2924  007D'                    l720:	
  2925  007D' 1003               	clrc
  2926  007E' 0C89'              	rrf	___xxtofl@exp,f
  2927  007F' 0809'              	movf	___xxtofl@exp,w
  2928  0080' 0084'              	movwf	??___xxtofl
  2929  0081' 0185'              	clrf	??___xxtofl+1
  2930  0082' 0186'              	clrf	??___xxtofl+2
  2931  0083' 0187'              	clrf	??___xxtofl+3
  2932  0084' 3018               	movlw	24
  2933  0085'                    u3895:	
  2934  0085' 1003               	clrc
  2935  0086' 0D84'              	rlf	??___xxtofl,f
  2936  0087' 0D85'              	rlf	??___xxtofl+1,f
  2937  0088' 0D86'              	rlf	??___xxtofl+2,f
  2938  0089' 0D87'              	rlf	??___xxtofl+3,f
  2939  008A' 3EFF               	addlw	-1
  2940  008B' 1D03               	skipz
  2941  008C' 2885'              	goto	u3895
  2942  008D' 0804'              	movf	??___xxtofl,w
  2943  008E' 048A'              	iorwf	___xxtofl@arg,f
  2944  008F' 0805'              	movf	??___xxtofl+1,w
  2945  0090' 048B'              	iorwf	___xxtofl@arg+1,f
  2946  0091' 0806'              	movf	??___xxtofl+2,w
  2947  0092' 048C'              	iorwf	___xxtofl@arg+2,f
  2948  0093' 0807'              	movf	??___xxtofl+3,w
  2949  0094' 048D'              	iorwf	___xxtofl@arg+3,f
  2950  0095' 0808'              	movf	___xxtofl@sign,w
  2951  0096' 1D03               	btfss	3,2
  2952  0097' 1F83'              	btfss	___xxtofl@val+3,7
  2953  0098' 289A'              	goto	l2496
  2954  0099' 178D'              	bsf	___xxtofl@arg+3,7
  2955  009A'                    l2496:	
  2956  009A' 080D'              	movf	___xxtofl@arg+3,w
  2957  009B' 0083'              	movwf	?___xxtofl+3
  2958  009C' 080C'              	movf	___xxtofl@arg+2,w
  2959  009D' 0082'              	movwf	?___xxtofl+2
  2960  009E' 080B'              	movf	___xxtofl@arg+1,w
  2961  009F' 0081'              	movwf	?___xxtofl+1
  2962  00A0' 080A'              	movf	___xxtofl@arg,w
  2963  00A1' 0080'              	movwf	?___xxtofl
  2964  00A2' 0008               	return
  2965  00A3'                    __end_of___xxtofl:	
  2966                           
  2967                           	psect	text12
  2968  0000'                    __ptext12:	
  2969 ;; *************** function ___fltol *****************
  2970 ;; Defined at:
  2971 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fltol.c"
  2972 ;; Parameters:    Size  Location     Type
  2973 ;;  f1              4   21[BANK0 ] unsigned char 
  2974 ;; Auto vars:     Size  Location     Type
  2975 ;;  exp1            1   31[BANK0 ] unsigned char 
  2976 ;;  sign1           1   30[BANK0 ] unsigned char 
  2977 ;; Return value:  Size  Location     Type
  2978 ;;                  4   21[BANK0 ] long 
  2979 ;; Registers used:
  2980 ;;		wreg, status,2, status,0
  2981 ;; Tracked objects:
  2982 ;;		On entry : 0/0
  2983 ;;		On exit  : 0/0
  2984 ;;		Unchanged: 0/0
  2985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2986 ;;      Params:         0       4       0       0
  2987 ;;      Locals:         0       2       0       0
  2988 ;;      Temps:          0       5       0       0
  2989 ;;      Totals:         0      11       0       0
  2990 ;;Total ram usage:       11 bytes
  2991 ;; Hardware stack levels used:    1
  2992 ;; This function calls:
  2993 ;;		Nothing
  2994 ;; This function is called by:
  2995 ;;		_ftoa
  2996 ;; This function uses a non-reentrant model
  2997 ;;
  2998                           
  2999                           
  3000                           ;psect for function ___fltol
  3001  0000'                    ___fltol:	
  3002                           
  3003                           ;incstack = 0
  3004                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  3005  0000' 1003               	clrc
  3006  0001' 1283               	bcf	3,5	;RP0=0, select bank0
  3007  0002' 1303               	bcf	3,6	;RP1=0, select bank0
  3008  0003' 0D17'              	rlf	___fltol@f1+2,w
  3009  0004' 0D18'              	rlf	___fltol@f1+3,w
  3010  0005' 0099'              	movwf	??___fltol
  3011  0006' 0819'              	movf	??___fltol,w
  3012  0007' 009F'              	movwf	___fltol@exp1
  3013  0008' 081F'              	movf	___fltol@exp1,w
  3014  0009' 1D03               	btfss	3,2
  3015  000A' 2814'              	goto	l2280
  3016  000B'                    l2276:	
  3017  000B' 3000               	movlw	0
  3018  000C' 0098'              	movwf	?___fltol+3
  3019  000D' 3000               	movlw	0
  3020  000E' 0097'              	movwf	?___fltol+2
  3021  000F' 3000               	movlw	0
  3022  0010' 0096'              	movwf	?___fltol+1
  3023  0011' 3000               	movlw	0
  3024  0012' 0095'              	movwf	?___fltol
  3025  0013' 0008               	return
  3026  0014'                    l2280:	
  3027  0014' 0815'              	movf	___fltol@f1,w
  3028  0015' 0099'              	movwf	??___fltol
  3029  0016' 0816'              	movf	___fltol@f1+1,w
  3030  0017' 009A'              	movwf	??___fltol+1
  3031  0018' 0817'              	movf	___fltol@f1+2,w
  3032  0019' 009B'              	movwf	??___fltol+2
  3033  001A' 0818'              	movf	___fltol@f1+3,w
  3034  001B' 009C'              	movwf	??___fltol+3
  3035  001C' 301F               	movlw	31
  3036  001D'                    u3325:	
  3037  001D' 1003               	clrc
  3038  001E' 0C9C'              	rrf	??___fltol+3,f
  3039  001F' 0C9B'              	rrf	??___fltol+2,f
  3040  0020' 0C9A'              	rrf	??___fltol+1,f
  3041  0021' 0C99'              	rrf	??___fltol,f
  3042  0022' 3EFF               	addlw	-1
  3043  0023' 1D03               	skipz
  3044  0024' 281D'              	goto	u3325
  3045  0025' 0819'              	movf	??___fltol,w
  3046  0026' 009D'              	movwf	??___fltol+4
  3047  0027' 081D'              	movf	??___fltol+4,w
  3048  0028' 009E'              	movwf	___fltol@sign1
  3049  0029' 1797'              	bsf	___fltol@f1+2,7
  3050  002A' 30FF               	movlw	255
  3051  002B' 0595'              	andwf	___fltol@f1,f
  3052  002C' 30FF               	movlw	255
  3053  002D' 0596'              	andwf	___fltol@f1+1,f
  3054  002E' 30FF               	movlw	255
  3055  002F' 0597'              	andwf	___fltol@f1+2,f
  3056  0030' 3000               	movlw	0
  3057  0031' 0598'              	andwf	___fltol@f1+3,f
  3058  0032' 3096               	movlw	150
  3059  0033' 029F'              	subwf	___fltol@exp1,f
  3060  0034' 1F9F'              	btfss	___fltol@exp1,7
  3061  0035' 284B'              	goto	l2298
  3062  0036' 081F'              	movf	___fltol@exp1,w
  3063  0037' 3A80               	xorlw	128
  3064  0038' 3E97               	addlw	151
  3065  0039' 1C03               	btfss	3,0
  3066  003A' 280B'              	goto	l2276
  3067  003B'                    l2296:	
  3068  003B' 3001               	movlw	1
  3069  003C'                    u3355:	
  3070  003C' 1003               	clrc
  3071  003D' 0C98'              	rrf	___fltol@f1+3,f
  3072  003E' 0C97'              	rrf	___fltol@f1+2,f
  3073  003F' 0C96'              	rrf	___fltol@f1+1,f
  3074  0040' 0C95'              	rrf	___fltol@f1,f
  3075  0041' 3EFF               	addlw	-1
  3076  0042' 1D03               	skipz
  3077  0043' 283C'              	goto	u3355
  3078  0044' 3001               	movlw	1
  3079  0045' 0099'              	movwf	??___fltol
  3080  0046' 0819'              	movf	??___fltol,w
  3081  0047' 079F'              	addwf	___fltol@exp1,f
  3082  0048' 1903               	btfsc	3,2
  3083  0049' 285E'              	goto	l2306
  3084  004A' 283B'              	goto	l2296
  3085  004B'                    l2298:	
  3086  004B' 3020               	movlw	32
  3087  004C' 021F'              	subwf	___fltol@exp1,w
  3088  004D' 1803               	btfsc	3,0
  3089  004E' 280B'              	goto	l2276
  3090  004F'                    l472:	
  3091  004F' 081F'              	movf	___fltol@exp1,w
  3092  0050' 1903               	btfsc	3,2
  3093  0051' 285E'              	goto	l2306
  3094  0052' 3001               	movlw	1
  3095  0053' 0099'              	movwf	??___fltol
  3096  0054'                    u3385:	
  3097  0054' 1003               	clrc
  3098  0055' 0D95'              	rlf	___fltol@f1,f
  3099  0056' 0D96'              	rlf	___fltol@f1+1,f
  3100  0057' 0D97'              	rlf	___fltol@f1+2,f
  3101  0058' 0D98'              	rlf	___fltol@f1+3,f
  3102  0059' 0B99'              	decfsz	??___fltol,f
  3103  005A' 2854'              	goto	u3385
  3104  005B' 3001               	movlw	1
  3105  005C' 029F'              	subwf	___fltol@exp1,f
  3106  005D' 284F'              	goto	l472
  3107  005E'                    l2306:	
  3108  005E' 081E'              	movf	___fltol@sign1,w
  3109  005F' 1903               	btfsc	3,2
  3110  0060' 0008               	return
  3111  0061' 0995'              	comf	___fltol@f1,f
  3112  0062' 0996'              	comf	___fltol@f1+1,f
  3113  0063' 0997'              	comf	___fltol@f1+2,f
  3114  0064' 0998'              	comf	___fltol@f1+3,f
  3115  0065' 0A95'              	incf	___fltol@f1,f
  3116  0066' 1903               	skipnz
  3117  0067' 0A96'              	incf	___fltol@f1+1,f
  3118  0068' 1903               	skipnz
  3119  0069' 0A97'              	incf	___fltol@f1+2,f
  3120  006A' 1903               	skipnz
  3121  006B' 0A98'              	incf	___fltol@f1+3,f
  3122  006C' 0008               	return
  3123  006D'                    __end_of___fltol:	
  3124                           
  3125                           	psect	text13
  3126  0000'                    __ptext13:	
  3127 ;; *************** function ___flsub *****************
  3128 ;; Defined at:
  3129 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
  3130 ;; Parameters:    Size  Location     Type
  3131 ;;  a               4    8[BANK0 ] long 
  3132 ;;  b               4   12[BANK0 ] long 
  3133 ;; Auto vars:     Size  Location     Type
  3134 ;;		None
  3135 ;; Return value:  Size  Location     Type
  3136 ;;                  4    8[BANK0 ] long 
  3137 ;; Registers used:
  3138 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3139 ;; Tracked objects:
  3140 ;;		On entry : 0/0
  3141 ;;		On exit  : 0/0
  3142 ;;		Unchanged: 0/0
  3143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3144 ;;      Params:         0       8       0       0
  3145 ;;      Locals:         0       0       0       0
  3146 ;;      Temps:          0       0       0       0
  3147 ;;      Totals:         0       8       0       0
  3148 ;;Total ram usage:        8 bytes
  3149 ;; Hardware stack levels used:    1
  3150 ;; Hardware stack levels required when called:    1
  3151 ;; This function calls:
  3152 ;;		___fladd
  3153 ;; This function is called by:
  3154 ;;		_ftoa
  3155 ;; This function uses a non-reentrant model
  3156 ;;
  3157                           
  3158                           
  3159                           ;psect for function ___flsub
  3160  0000'                    ___flsub:	
  3161                           
  3162                           ;incstack = 0
  3163                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3164  0000' 3080               	movlw	128
  3165  0001' 1283               	bcf	3,5	;RP0=0, select bank0
  3166  0002' 1303               	bcf	3,6	;RP1=0, select bank0
  3167  0003' 068B'              	xorwf	___flsub@a+3,f
  3168  0004' 080F'              	movf	___flsub@b+3,w
  3169  0005' 0083'              	movwf	___fladd@b+3
  3170  0006' 080E'              	movf	___flsub@b+2,w
  3171  0007' 0082'              	movwf	___fladd@b+2
  3172  0008' 080D'              	movf	___flsub@b+1,w
  3173  0009' 0081'              	movwf	___fladd@b+1
  3174  000A' 080C'              	movf	___flsub@b,w
  3175  000B' 0080'              	movwf	___fladd@b
  3176  000C' 080B'              	movf	___flsub@a+3,w
  3177  000D' 0087'              	movwf	___fladd@a+3
  3178  000E' 080A'              	movf	___flsub@a+2,w
  3179  000F' 0086'              	movwf	___fladd@a+2
  3180  0010' 0809'              	movf	___flsub@a+1,w
  3181  0011' 0085'              	movwf	___fladd@a+1
  3182  0012' 0808'              	movf	___flsub@a,w
  3183  0013' 0084'              	movwf	___fladd@a
  3184  0014' 2000'              	fcall	___fladd
  3185  0015' 0803'              	movf	?___fladd+3,w
  3186  0016' 1283               	bcf	3,5	;RP0=0, select bank0
  3187  0017' 1303               	bcf	3,6	;RP1=0, select bank0
  3188  0018' 008B'              	movwf	?___flsub+3
  3189  0019' 0802'              	movf	?___fladd+2,w
  3190  001A' 008A'              	movwf	?___flsub+2
  3191  001B' 0801'              	movf	?___fladd+1,w
  3192  001C' 0089'              	movwf	?___flsub+1
  3193  001D' 0800'              	movf	?___fladd,w
  3194  001E' 0088'              	movwf	?___flsub
  3195  001F' 0008               	return
  3196  0020'                    __end_of___flsub:	
  3197                           
  3198                           	psect	text14
  3199  0000'                    __ptext14:	
  3200 ;; *************** function ___fladd *****************
  3201 ;; Defined at:
  3202 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
  3203 ;; Parameters:    Size  Location     Type
  3204 ;;  b               4    0[COMMON] long 
  3205 ;;  a               4    4[COMMON] long 
  3206 ;; Auto vars:     Size  Location     Type
  3207 ;;  grs             1   11[COMMON] unsigned char 
  3208 ;;  bexp            1   10[COMMON] unsigned char 
  3209 ;;  aexp            1    9[COMMON] unsigned char 
  3210 ;;  signs           1    8[COMMON] unsigned char 
  3211 ;; Return value:  Size  Location     Type
  3212 ;;                  4    0[COMMON] unsigned char 
  3213 ;; Registers used:
  3214 ;;		wreg, status,2, status,0, btemp+1
  3215 ;; Tracked objects:
  3216 ;;		On entry : 0/0
  3217 ;;		On exit  : 0/0
  3218 ;;		Unchanged: 0/0
  3219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3220 ;;      Params:         8       0       0       0
  3221 ;;      Locals:         4       0       0       0
  3222 ;;      Temps:          0       8       0       0
  3223 ;;      Totals:        12       8       0       0
  3224 ;;Total ram usage:       20 bytes
  3225 ;; Hardware stack levels used:    1
  3226 ;; This function calls:
  3227 ;;		Nothing
  3228 ;; This function is called by:
  3229 ;;		___flsub
  3230 ;; This function uses a non-reentrant model
  3231 ;;
  3232                           
  3233                           
  3234                           ;psect for function ___fladd
  3235  0000'                    ___fladd:	
  3236                           
  3237                           ;incstack = 0
  3238                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  3239  0000' 0803'              	movf	___fladd@b+3,w
  3240  0001' 3980               	andlw	128
  3241  0002' 1283               	bcf	3,5	;RP0=0, select bank0
  3242  0003' 1303               	bcf	3,6	;RP1=0, select bank0
  3243  0004' 0080'              	movwf	??___fladd
  3244  0005' 0800'              	movf	??___fladd,w
  3245  0006' 0088'              	movwf	___fladd@signs
  3246  0007' 0803'              	movf	___fladd@b+3,w
  3247  0008' 0080'              	movwf	??___fladd
  3248  0009' 0700'              	addwf	??___fladd,w
  3249  000A' 0081'              	movwf	??___fladd+1
  3250  000B' 0801'              	movf	??___fladd+1,w
  3251  000C' 008A'              	movwf	___fladd@bexp
  3252  000D' 1B82'              	btfsc	___fladd@b+2,7
  3253  000E' 140A'              	bsf	___fladd@bexp,0
  3254  000F' 080A'              	movf	___fladd@bexp,w
  3255  0010' 1903               	btfsc	3,2
  3256  0011' 2820'              	goto	l1924
  3257  0012' 0A0A'              	incf	___fladd@bexp,w
  3258  0013' 1D03               	btfss	3,2
  3259  0014' 281D'              	goto	l1920
  3260  0015' 3000               	movlw	0
  3261  0016' 0083'              	movwf	___fladd@b+3
  3262  0017' 3000               	movlw	0
  3263  0018' 0082'              	movwf	___fladd@b+2
  3264  0019' 3000               	movlw	0
  3265  001A' 0081'              	movwf	___fladd@b+1
  3266  001B' 3000               	movlw	0
  3267  001C' 0080'              	movwf	___fladd@b
  3268  001D'                    l1920:	
  3269  001D' 1782'              	bsf	___fladd@b+2,7
  3270  001E' 0183'              	clrf	___fladd@b+3
  3271  001F' 2828'              	goto	l1926
  3272  0020'                    l1924:	
  3273  0020' 3000               	movlw	0
  3274  0021' 0083'              	movwf	___fladd@b+3
  3275  0022' 3000               	movlw	0
  3276  0023' 0082'              	movwf	___fladd@b+2
  3277  0024' 3000               	movlw	0
  3278  0025' 0081'              	movwf	___fladd@b+1
  3279  0026' 3000               	movlw	0
  3280  0027' 0080'              	movwf	___fladd@b
  3281  0028'                    l1926:	
  3282  0028' 0807'              	movf	___fladd@a+3,w
  3283  0029' 3980               	andlw	128
  3284  002A' 0080'              	movwf	??___fladd
  3285  002B' 0800'              	movf	??___fladd,w
  3286  002C' 0089'              	movwf	___fladd@aexp
  3287  002D' 0809'              	movf	___fladd@aexp,w
  3288  002E' 0608'              	xorwf	___fladd@signs,w
  3289  002F' 1D03               	btfss	3,2
  3290  0030' 1708'              	bsf	___fladd@signs,6
  3291  0031' 0807'              	movf	___fladd@a+3,w
  3292  0032' 0080'              	movwf	??___fladd
  3293  0033' 0700'              	addwf	??___fladd,w
  3294  0034' 0081'              	movwf	??___fladd+1
  3295  0035' 0801'              	movf	??___fladd+1,w
  3296  0036' 0089'              	movwf	___fladd@aexp
  3297  0037' 1B86'              	btfsc	___fladd@a+2,7
  3298  0038' 1409'              	bsf	___fladd@aexp,0
  3299  0039' 0809'              	movf	___fladd@aexp,w
  3300  003A' 1903               	btfsc	3,2
  3301  003B' 284A'              	goto	l1948
  3302  003C' 0A09'              	incf	___fladd@aexp,w
  3303  003D' 1D03               	btfss	3,2
  3304  003E' 2847'              	goto	l1944
  3305  003F' 3000               	movlw	0
  3306  0040' 0087'              	movwf	___fladd@a+3
  3307  0041' 3000               	movlw	0
  3308  0042' 0086'              	movwf	___fladd@a+2
  3309  0043' 3000               	movlw	0
  3310  0044' 0085'              	movwf	___fladd@a+1
  3311  0045' 3000               	movlw	0
  3312  0046' 0084'              	movwf	___fladd@a
  3313  0047'                    l1944:	
  3314  0047' 1786'              	bsf	___fladd@a+2,7
  3315  0048' 0187'              	clrf	___fladd@a+3
  3316  0049' 2852'              	goto	l572
  3317  004A'                    l1948:	
  3318  004A' 3000               	movlw	0
  3319  004B' 0087'              	movwf	___fladd@a+3
  3320  004C' 3000               	movlw	0
  3321  004D' 0086'              	movwf	___fladd@a+2
  3322  004E' 3000               	movlw	0
  3323  004F' 0085'              	movwf	___fladd@a+1
  3324  0050' 3000               	movlw	0
  3325  0051' 0084'              	movwf	___fladd@a
  3326  0052'                    l572:	
  3327  0052' 080A'              	movf	___fladd@bexp,w
  3328  0053' 0209'              	subwf	___fladd@aexp,w
  3329  0054' 1803               	skipnc
  3330  0055' 2898'              	goto	l1984
  3331  0056' 1F08'              	btfss	___fladd@signs,6
  3332  0057' 285C'              	goto	l1954
  3333  0058' 3080               	movlw	128
  3334  0059' 0080'              	movwf	??___fladd
  3335  005A' 0800'              	movf	??___fladd,w
  3336  005B' 0688'              	xorwf	___fladd@signs,f
  3337  005C'                    l1954:	
  3338  005C' 080A'              	movf	___fladd@bexp,w
  3339  005D' 0080'              	movwf	??___fladd
  3340  005E' 0800'              	movf	??___fladd,w
  3341  005F' 008B'              	movwf	___fladd@grs
  3342  0060' 0809'              	movf	___fladd@aexp,w
  3343  0061' 0080'              	movwf	??___fladd
  3344  0062' 0800'              	movf	??___fladd,w
  3345  0063' 008A'              	movwf	___fladd@bexp
  3346  0064' 080B'              	movf	___fladd@grs,w
  3347  0065' 0080'              	movwf	??___fladd
  3348  0066' 0800'              	movf	??___fladd,w
  3349  0067' 0089'              	movwf	___fladd@aexp
  3350  0068' 0800'              	movf	___fladd@b,w
  3351  0069' 0080'              	movwf	??___fladd
  3352  006A' 0800'              	movf	??___fladd,w
  3353  006B' 008B'              	movwf	___fladd@grs
  3354  006C' 0804'              	movf	___fladd@a,w
  3355  006D' 0080'              	movwf	??___fladd
  3356  006E' 0800'              	movf	??___fladd,w
  3357  006F' 0080'              	movwf	___fladd@b
  3358  0070' 080B'              	movf	___fladd@grs,w
  3359  0071' 0080'              	movwf	??___fladd
  3360  0072' 0800'              	movf	??___fladd,w
  3361  0073' 0084'              	movwf	___fladd@a
  3362  0074' 0801'              	movf	___fladd@b+1,w
  3363  0075' 0080'              	movwf	??___fladd
  3364  0076' 0800'              	movf	??___fladd,w
  3365  0077' 008B'              	movwf	___fladd@grs
  3366  0078' 0805'              	movf	___fladd@a+1,w
  3367  0079' 0080'              	movwf	??___fladd
  3368  007A' 0800'              	movf	??___fladd,w
  3369  007B' 0081'              	movwf	___fladd@b+1
  3370  007C' 080B'              	movf	___fladd@grs,w
  3371  007D' 0080'              	movwf	??___fladd
  3372  007E' 0800'              	movf	??___fladd,w
  3373  007F' 0085'              	movwf	___fladd@a+1
  3374  0080' 0802'              	movf	___fladd@b+2,w
  3375  0081' 0080'              	movwf	??___fladd
  3376  0082' 0800'              	movf	??___fladd,w
  3377  0083' 008B'              	movwf	___fladd@grs
  3378  0084' 0806'              	movf	___fladd@a+2,w
  3379  0085' 0080'              	movwf	??___fladd
  3380  0086' 0800'              	movf	??___fladd,w
  3381  0087' 0082'              	movwf	___fladd@b+2
  3382  0088' 080B'              	movf	___fladd@grs,w
  3383  0089' 0080'              	movwf	??___fladd
  3384  008A' 0800'              	movf	??___fladd,w
  3385  008B' 0086'              	movwf	___fladd@a+2
  3386  008C' 0803'              	movf	___fladd@b+3,w
  3387  008D' 0080'              	movwf	??___fladd
  3388  008E' 0800'              	movf	??___fladd,w
  3389  008F' 008B'              	movwf	___fladd@grs
  3390  0090' 0807'              	movf	___fladd@a+3,w
  3391  0091' 0080'              	movwf	??___fladd
  3392  0092' 0800'              	movf	??___fladd,w
  3393  0093' 0083'              	movwf	___fladd@b+3
  3394  0094' 080B'              	movf	___fladd@grs,w
  3395  0095' 0080'              	movwf	??___fladd
  3396  0096' 0800'              	movf	??___fladd,w
  3397  0097' 0087'              	movwf	___fladd@a+3
  3398  0098'                    l1984:	
  3399  0098' 018B'              	clrf	___fladd@grs
  3400  0099' 0809'              	movf	___fladd@aexp,w
  3401  009A' 0080'              	movwf	??___fladd
  3402  009B' 0181'              	clrf	??___fladd+1
  3403  009C' 0801'              	movf	??___fladd+1,w
  3404  009D' 0083'              	movwf	??___fladd+3
  3405  009E' 080A'              	movf	___fladd@bexp,w
  3406  009F' 0200'              	subwf	??___fladd,w
  3407  00A0' 0082'              	movwf	??___fladd+2
  3408  00A1' 1C03               	skipc
  3409  00A2' 0383'              	decf	??___fladd+3,f
  3410  00A3' 0803'              	movf	??___fladd+3,w
  3411  00A4' 3A80               	xorlw	128
  3412  00A5' 00FF               	movwf	127
  3413  00A6' 3080               	movlw	128
  3414  00A7' 027F               	subwf	127,w
  3415  00A8' 1D03               	skipz
  3416  00A9' 28AC'              	goto	u2555
  3417  00AA' 301A               	movlw	26
  3418  00AB' 0202'              	subwf	??___fladd+2,w
  3419  00AC'                    u2555:	
  3420  00AC' 1C03               	skipc
  3421  00AD' 28E9'              	goto	l2002
  3422  00AE' 0803'              	movf	___fladd@b+3,w
  3423  00AF' 0402'              	iorwf	___fladd@b+2,w
  3424  00B0' 0401'              	iorwf	___fladd@b+1,w
  3425  00B1' 0400'              	iorwf	___fladd@b,w
  3426  00B2' 1903               	btfsc	3,2
  3427  00B3' 28B6'              	goto	u2560
  3428  00B4' 3001               	movlw	1
  3429  00B5' 28B7'              	goto	u2570
  3430  00B6'                    u2560:	
  3431  00B6' 3000               	movlw	0
  3432  00B7'                    u2570:	
  3433  00B7' 1283               	bcf	3,5	;RP0=0, select bank0
  3434  00B8' 1303               	bcf	3,6	;RP1=0, select bank0
  3435  00B9' 0080'              	movwf	??___fladd
  3436  00BA' 0800'              	movf	??___fladd,w
  3437  00BB' 008B'              	movwf	___fladd@grs
  3438  00BC' 3000               	movlw	0
  3439  00BD' 0083'              	movwf	___fladd@b+3
  3440  00BE' 3000               	movlw	0
  3441  00BF' 0082'              	movwf	___fladd@b+2
  3442  00C0' 3000               	movlw	0
  3443  00C1' 0081'              	movwf	___fladd@b+1
  3444  00C2' 3000               	movlw	0
  3445  00C3' 0080'              	movwf	___fladd@b
  3446  00C4' 0809'              	movf	___fladd@aexp,w
  3447  00C5' 0080'              	movwf	??___fladd
  3448  00C6' 0800'              	movf	??___fladd,w
  3449  00C7' 008A'              	movwf	___fladd@bexp
  3450  00C8' 28ED'              	goto	l576
  3451  00C9'                    l578:	
  3452  00C9' 1C0B'              	btfss	___fladd@grs,0
  3453  00CA' 28D6'              	goto	l1992
  3454  00CB' 080B'              	movf	___fladd@grs,w
  3455  00CC' 1283               	bcf	3,5	;RP0=0, select bank0
  3456  00CD' 1303               	bcf	3,6	;RP1=0, select bank0
  3457  00CE' 0080'              	movwf	??___fladd
  3458  00CF' 1003               	clrc
  3459  00D0' 0C00'              	rrf	??___fladd,w
  3460  00D1' 3801               	iorlw	1
  3461  00D2' 0081'              	movwf	??___fladd+1
  3462  00D3' 0801'              	movf	??___fladd+1,w
  3463  00D4' 008B'              	movwf	___fladd@grs
  3464  00D5' 28D8'              	goto	l1994
  3465  00D6'                    l1992:	
  3466  00D6' 1003               	clrc
  3467  00D7' 0C8B'              	rrf	___fladd@grs,f
  3468  00D8'                    l1994:	
  3469  00D8' 1800'              	btfsc	___fladd@b,0
  3470  00D9' 178B'              	bsf	___fladd@grs,7
  3471  00DA' 3001               	movlw	1
  3472  00DB' 1283               	bcf	3,5	;RP0=0, select bank0
  3473  00DC' 1303               	bcf	3,6	;RP1=0, select bank0
  3474  00DD' 0080'              	movwf	??___fladd
  3475  00DE'                    u2605:	
  3476  00DE' 0D03'              	rlf	___fladd@b+3,w
  3477  00DF' 0C83'              	rrf	___fladd@b+3,f
  3478  00E0' 0C82'              	rrf	___fladd@b+2,f
  3479  00E1' 0C81'              	rrf	___fladd@b+1,f
  3480  00E2' 0C80'              	rrf	___fladd@b,f
  3481  00E3' 0B80'              	decfsz	??___fladd& (0+127),f
  3482  00E4' 28DE'              	goto	u2605
  3483  00E5' 3001               	movlw	1
  3484  00E6' 0080'              	movwf	??___fladd
  3485  00E7' 0800'              	movf	??___fladd,w
  3486  00E8' 078A'              	addwf	___fladd@bexp,f
  3487  00E9'                    l2002:	
  3488  00E9' 0809'              	movf	___fladd@aexp,w
  3489  00EA' 020A'              	subwf	___fladd@bexp,w
  3490  00EB' 1C03               	skipc
  3491  00EC' 28C9'              	goto	l578
  3492  00ED'                    l576:	
  3493  00ED' 1B08'              	btfsc	___fladd@signs,6
  3494  00EE' 2932'              	goto	l2028
  3495  00EF' 080A'              	movf	___fladd@bexp,w
  3496  00F0' 1D03               	btfss	3,2
  3497  00F1' 28FB'              	goto	l2010
  3498  00F2' 3000               	movlw	0
  3499  00F3' 0083'              	movwf	?___fladd+3
  3500  00F4' 3000               	movlw	0
  3501  00F5' 0082'              	movwf	?___fladd+2
  3502  00F6' 3000               	movlw	0
  3503  00F7' 0081'              	movwf	?___fladd+1
  3504  00F8' 3000               	movlw	0
  3505  00F9' 0080'              	movwf	?___fladd
  3506  00FA' 0008               	return
  3507  00FB'                    l2010:	
  3508  00FB' 0804'              	movf	___fladd@a,w
  3509  00FC' 0780'              	addwf	___fladd@b,f
  3510  00FD' 0805'              	movf	___fladd@a+1,w
  3511  00FE' 1103               	clrz
  3512  00FF' 1803               	skipnc
  3513  0100' 3E01               	addlw	1
  3514  0101' 1D03               	btfss	3,2
  3515  0102' 0781'              	addwf	___fladd@b+1,f
  3516  0103' 0806'              	movf	___fladd@a+2,w
  3517  0104' 1103               	clrz
  3518  0105' 1803               	skipnc
  3519  0106' 3E01               	addlw	1
  3520  0107' 1D03               	btfss	3,2
  3521  0108' 0782'              	addwf	___fladd@b+2,f
  3522  0109' 0807'              	movf	___fladd@a+3,w
  3523  010A' 1103               	clrz
  3524  010B' 1803               	skipnc
  3525  010C' 3E01               	addlw	1
  3526  010D' 1D03               	btfss	3,2
  3527  010E' 0783'              	addwf	___fladd@b+3,f
  3528  010F' 1C03'              	btfss	___fladd@b+3,0
  3529  0110' 29D8'              	goto	l2062
  3530  0111' 1C0B'              	btfss	___fladd@grs,0
  3531  0112' 291E'              	goto	l2018
  3532  0113' 080B'              	movf	___fladd@grs,w
  3533  0114' 1283               	bcf	3,5	;RP0=0, select bank0
  3534  0115' 1303               	bcf	3,6	;RP1=0, select bank0
  3535  0116' 0080'              	movwf	??___fladd
  3536  0117' 1003               	clrc
  3537  0118' 0C00'              	rrf	??___fladd,w
  3538  0119' 3801               	iorlw	1
  3539  011A' 0081'              	movwf	??___fladd+1
  3540  011B' 0801'              	movf	??___fladd+1,w
  3541  011C' 008B'              	movwf	___fladd@grs
  3542  011D' 2920'              	goto	l2020
  3543  011E'                    l2018:	
  3544  011E' 1003               	clrc
  3545  011F' 0C8B'              	rrf	___fladd@grs,f
  3546  0120'                    l2020:	
  3547  0120' 1800'              	btfsc	___fladd@b,0
  3548  0121' 178B'              	bsf	___fladd@grs,7
  3549  0122' 3001               	movlw	1
  3550  0123' 1283               	bcf	3,5	;RP0=0, select bank0
  3551  0124' 1303               	bcf	3,6	;RP1=0, select bank0
  3552  0125' 0080'              	movwf	??___fladd
  3553  0126'                    u2685:	
  3554  0126' 0D03'              	rlf	___fladd@b+3,w
  3555  0127' 0C83'              	rrf	___fladd@b+3,f
  3556  0128' 0C82'              	rrf	___fladd@b+2,f
  3557  0129' 0C81'              	rrf	___fladd@b+1,f
  3558  012A' 0C80'              	rrf	___fladd@b,f
  3559  012B' 0B80'              	decfsz	??___fladd& (0+127),f
  3560  012C' 2926'              	goto	u2685
  3561  012D' 3001               	movlw	1
  3562  012E' 0080'              	movwf	??___fladd
  3563  012F' 0800'              	movf	??___fladd,w
  3564  0130' 078A'              	addwf	___fladd@bexp,f
  3565  0131' 29D8'              	goto	l2062
  3566  0132'                    l2028:	
  3567  0132' 0803'              	movf	___fladd@b+3,w
  3568  0133' 3A80               	xorlw	128
  3569  0134' 00FF               	movwf	127
  3570  0135' 0807'              	movf	___fladd@a+3,w
  3571  0136' 3A80               	xorlw	128
  3572  0137' 027F               	subwf	127,w
  3573  0138' 1D03               	skipz
  3574  0139' 2944'              	goto	u2693
  3575  013A' 0806'              	movf	___fladd@a+2,w
  3576  013B' 0202'              	subwf	___fladd@b+2,w
  3577  013C' 1D03               	skipz
  3578  013D' 2944'              	goto	u2693
  3579  013E' 0805'              	movf	___fladd@a+1,w
  3580  013F' 0201'              	subwf	___fladd@b+1,w
  3581  0140' 1D03               	skipz
  3582  0141' 2944'              	goto	u2693
  3583  0142' 0804'              	movf	___fladd@a,w
  3584  0143' 0200'              	subwf	___fladd@b,w
  3585  0144'                    u2693:	
  3586  0144' 1803               	skipnc
  3587  0145' 299E'              	goto	l2038
  3588  0146' 30FF               	movlw	255
  3589  0147' 1283               	bcf	3,5	;RP0=0, select bank0
  3590  0148' 1303               	bcf	3,6	;RP1=0, select bank0
  3591  0149' 0080'              	movwf	??___fladd
  3592  014A' 30FF               	movlw	255
  3593  014B' 0081'              	movwf	??___fladd+1
  3594  014C' 30FF               	movlw	255
  3595  014D' 0082'              	movwf	??___fladd+2
  3596  014E' 30FF               	movlw	255
  3597  014F' 0083'              	movwf	??___fladd+3
  3598  0150' 0804'              	movf	___fladd@a,w
  3599  0151' 0084'              	movwf	??___fladd+4
  3600  0152' 0805'              	movf	___fladd@a+1,w
  3601  0153' 0085'              	movwf	??___fladd+5
  3602  0154' 0806'              	movf	___fladd@a+2,w
  3603  0155' 0086'              	movwf	??___fladd+6
  3604  0156' 0807'              	movf	___fladd@a+3,w
  3605  0157' 0087'              	movwf	??___fladd+7
  3606  0158' 0800'              	movf	___fladd@b,w
  3607  0159' 0284'              	subwf	??___fladd+4,f
  3608  015A' 0801'              	movf	___fladd@b+1,w
  3609  015B' 1C03               	skipc
  3610  015C' 0F01'              	incfsz	___fladd@b+1,w
  3611  015D' 295F'              	goto	u2701
  3612  015E' 2960'              	goto	u2702
  3613  015F'                    u2701:	
  3614  015F' 0285'              	subwf	??___fladd+5,f
  3615  0160'                    u2702:	
  3616  0160' 0802'              	movf	___fladd@b+2,w
  3617  0161' 1C03               	skipc
  3618  0162' 0F02'              	incfsz	___fladd@b+2,w
  3619  0163' 2965'              	goto	u2703
  3620  0164' 2966'              	goto	u2704
  3621  0165'                    u2703:	
  3622  0165' 0286'              	subwf	??___fladd+6,f
  3623  0166'                    u2704:	
  3624  0166' 0803'              	movf	___fladd@b+3,w
  3625  0167' 1C03               	skipc
  3626  0168' 0F03'              	incfsz	___fladd@b+3,w
  3627  0169' 296B'              	goto	u2705
  3628  016A' 296C'              	goto	u2706
  3629  016B'                    u2705:	
  3630  016B' 0287'              	subwf	??___fladd+7,f
  3631  016C'                    u2706:	
  3632  016C' 0804'              	movf	??___fladd+4,w
  3633  016D' 0780'              	addwf	??___fladd,f
  3634  016E' 0805'              	movf	??___fladd+5,w
  3635  016F' 1803               	skipnc
  3636  0170' 0F05'              	incfsz	??___fladd+5,w
  3637  0171' 2973'              	goto	u2710
  3638  0172' 2974'              	goto	u2711
  3639  0173'                    u2710:	
  3640  0173' 0781'              	addwf	??___fladd+1,f
  3641  0174'                    u2711:	
  3642  0174' 0806'              	movf	??___fladd+6,w
  3643  0175' 1803               	skipnc
  3644  0176' 0F06'              	incfsz	??___fladd+6,w
  3645  0177' 2979'              	goto	u2712
  3646  0178' 297A'              	goto	u2713
  3647  0179'                    u2712:	
  3648  0179' 0782'              	addwf	??___fladd+2,f
  3649  017A'                    u2713:	
  3650  017A' 0807'              	movf	??___fladd+7,w
  3651  017B' 1803               	skipnc
  3652  017C' 0A07'              	incf	??___fladd+7,w
  3653  017D' 0783'              	addwf	??___fladd+3,f
  3654  017E' 0803'              	movf	??___fladd+3,w
  3655  017F' 0083'              	movwf	___fladd@b+3
  3656  0180' 0802'              	movf	??___fladd+2,w
  3657  0181' 0082'              	movwf	___fladd@b+2
  3658  0182' 0801'              	movf	??___fladd+1,w
  3659  0183' 0081'              	movwf	___fladd@b+1
  3660  0184' 0800'              	movf	??___fladd,w
  3661  0185' 0080'              	movwf	___fladd@b
  3662  0186' 3080               	movlw	128
  3663  0187' 0080'              	movwf	??___fladd
  3664  0188' 0800'              	movf	??___fladd,w
  3665  0189' 0688'              	xorwf	___fladd@signs,f
  3666  018A' 098B'              	comf	___fladd@grs,f
  3667  018B' 0A8B'              	incf	___fladd@grs,f
  3668  018C' 080B'              	movf	___fladd@grs,w
  3669  018D' 1D03               	btfss	3,2
  3670  018E' 29AC'              	goto	l593
  3671  018F' 3001               	movlw	1
  3672  0190' 0780'              	addwf	___fladd@b,f
  3673  0191' 3000               	movlw	0
  3674  0192' 1803               	skipnc
  3675  0193' 3001               	movlw	1
  3676  0194' 0781'              	addwf	___fladd@b+1,f
  3677  0195' 3000               	movlw	0
  3678  0196' 1803               	skipnc
  3679  0197' 3001               	movlw	1
  3680  0198' 0782'              	addwf	___fladd@b+2,f
  3681  0199' 3000               	movlw	0
  3682  019A' 1803               	skipnc
  3683  019B' 3001               	movlw	1
  3684  019C' 0783'              	addwf	___fladd@b+3,f
  3685  019D' 29AC'              	goto	l593
  3686  019E'                    l2038:	
  3687  019E' 0804'              	movf	___fladd@a,w
  3688  019F' 0280'              	subwf	___fladd@b,f
  3689  01A0' 0805'              	movf	___fladd@a+1,w
  3690  01A1' 1C03               	skipc
  3691  01A2' 0F05'              	incfsz	___fladd@a+1,w
  3692  01A3' 0281'              	subwf	___fladd@b+1,f
  3693  01A4' 0806'              	movf	___fladd@a+2,w
  3694  01A5' 1C03               	skipc
  3695  01A6' 0F06'              	incfsz	___fladd@a+2,w
  3696  01A7' 0282'              	subwf	___fladd@b+2,f
  3697  01A8' 0807'              	movf	___fladd@a+3,w
  3698  01A9' 1C03               	skipc
  3699  01AA' 0F07'              	incfsz	___fladd@a+3,w
  3700  01AB' 0283'              	subwf	___fladd@b+3,f
  3701  01AC'                    l593:	
  3702  01AC' 0803'              	movf	___fladd@b+3,w
  3703  01AD' 0402'              	iorwf	___fladd@b+2,w
  3704  01AE' 0401'              	iorwf	___fladd@b+1,w
  3705  01AF' 0400'              	iorwf	___fladd@b,w
  3706  01B0' 1D03               	skipz
  3707  01B1' 29D6'              	goto	l2060
  3708  01B2' 080B'              	movf	___fladd@grs,w
  3709  01B3' 1D03               	btfss	3,2
  3710  01B4' 29D6'              	goto	l2060
  3711  01B5' 3000               	movlw	0
  3712  01B6' 0083'              	movwf	?___fladd+3
  3713  01B7' 3000               	movlw	0
  3714  01B8' 0082'              	movwf	?___fladd+2
  3715  01B9' 3000               	movlw	0
  3716  01BA' 0081'              	movwf	?___fladd+1
  3717  01BB' 3000               	movlw	0
  3718  01BC' 0080'              	movwf	?___fladd
  3719  01BD' 0008               	return
  3720  01BE'                    l2046:	
  3721  01BE' 3001               	movlw	1
  3722  01BF' 1283               	bcf	3,5	;RP0=0, select bank0
  3723  01C0' 1303               	bcf	3,6	;RP1=0, select bank0
  3724  01C1' 0080'              	movwf	??___fladd
  3725  01C2'                    u2755:	
  3726  01C2' 1003               	clrc
  3727  01C3' 0D80'              	rlf	___fladd@b,f
  3728  01C4' 0D81'              	rlf	___fladd@b+1,f
  3729  01C5' 0D82'              	rlf	___fladd@b+2,f
  3730  01C6' 0D83'              	rlf	___fladd@b+3,f
  3731  01C7' 0B80'              	decfsz	??___fladd,f
  3732  01C8' 29C2'              	goto	u2755
  3733  01C9' 1B8B'              	btfsc	___fladd@grs,7
  3734  01CA' 1400'              	bsf	___fladd@b,0
  3735  01CB' 1C0B'              	btfss	___fladd@grs,0
  3736  01CC' 29CF'              	goto	l2054
  3737  01CD' 1403               	setc
  3738  01CE' 29D0'              	goto	L2
  3739  01CF'                    l2054:	
  3740  01CF' 1003               	clrc
  3741  01D0'                    L2:	
  3742  01D0' 0D8B'              	rlf	___fladd@grs,f
  3743  01D1' 080A'              	movf	___fladd@bexp,w
  3744  01D2' 1903               	btfsc	3,2
  3745  01D3' 29D6'              	goto	l2060
  3746  01D4' 3001               	movlw	1
  3747  01D5' 028A'              	subwf	___fladd@bexp,f
  3748  01D6'                    l2060:	
  3749  01D6' 1F82'              	btfss	___fladd@b+2,7
  3750  01D7' 29BE'              	goto	l2046
  3751  01D8'                    l2062:	
  3752  01D8' 0189'              	clrf	___fladd@aexp
  3753  01D9' 1F8B'              	btfss	___fladd@grs,7
  3754  01DA' 29E3'              	goto	l2072
  3755  01DB' 080B'              	movf	___fladd@grs,w
  3756  01DC' 397F               	andlw	127
  3757  01DD' 1903               	btfsc	3,2
  3758  01DE' 1800'              	btfsc	___fladd@b,0
  3759  01DF' 29E1'              	goto	l2068
  3760  01E0' 29E3'              	goto	l2072
  3761  01E1'                    l2068:	
  3762  01E1' 0189'              	clrf	___fladd@aexp
  3763  01E2' 0A89'              	incf	___fladd@aexp,f
  3764  01E3'                    l2072:	
  3765  01E3' 0809'              	movf	___fladd@aexp,w
  3766  01E4' 1903               	btfsc	3,2
  3767  01E5' 2A18'              	goto	l606
  3768  01E6' 3001               	movlw	1
  3769  01E7' 0780'              	addwf	___fladd@b,f
  3770  01E8' 3000               	movlw	0
  3771  01E9' 1803               	skipnc
  3772  01EA' 3001               	movlw	1
  3773  01EB' 0781'              	addwf	___fladd@b+1,f
  3774  01EC' 3000               	movlw	0
  3775  01ED' 1803               	skipnc
  3776  01EE' 3001               	movlw	1
  3777  01EF' 0782'              	addwf	___fladd@b+2,f
  3778  01F0' 3000               	movlw	0
  3779  01F1' 1803               	skipnc
  3780  01F2' 3001               	movlw	1
  3781  01F3' 0783'              	addwf	___fladd@b+3,f
  3782  01F4' 1C03'              	btfss	___fladd@b+3,0
  3783  01F5' 2A18'              	goto	l606
  3784  01F6' 0800'              	movf	___fladd@b,w
  3785  01F7' 1283               	bcf	3,5	;RP0=0, select bank0
  3786  01F8' 1303               	bcf	3,6	;RP1=0, select bank0
  3787  01F9' 0080'              	movwf	??___fladd
  3788  01FA' 0801'              	movf	___fladd@b+1,w
  3789  01FB' 0081'              	movwf	??___fladd+1
  3790  01FC' 0802'              	movf	___fladd@b+2,w
  3791  01FD' 0082'              	movwf	??___fladd+2
  3792  01FE' 0803'              	movf	___fladd@b+3,w
  3793  01FF' 0083'              	movwf	??___fladd+3
  3794  0200' 3001               	movlw	1
  3795  0201' 0084'              	movwf	??___fladd+4
  3796  0202'                    u2855:	
  3797  0202' 0D03'              	rlf	??___fladd+3,w
  3798  0203' 0C83'              	rrf	??___fladd+3,f
  3799  0204' 0C82'              	rrf	??___fladd+2,f
  3800  0205' 0C81'              	rrf	??___fladd+1,f
  3801  0206' 0C80'              	rrf	??___fladd,f
  3802  0207' 0B84'              	decfsz	??___fladd+4,f
  3803  0208' 2A02'              	goto	u2855
  3804  0209' 0803'              	movf	??___fladd+3,w
  3805  020A' 0083'              	movwf	___fladd@b+3
  3806  020B' 0802'              	movf	??___fladd+2,w
  3807  020C' 0082'              	movwf	___fladd@b+2
  3808  020D' 0801'              	movf	??___fladd+1,w
  3809  020E' 0081'              	movwf	___fladd@b+1
  3810  020F' 0800'              	movf	??___fladd,w
  3811  0210' 0080'              	movwf	___fladd@b
  3812  0211' 0A0A'              	incf	___fladd@bexp,w
  3813  0212' 1903               	btfsc	3,2
  3814  0213' 2A18'              	goto	l606
  3815  0214' 3001               	movlw	1
  3816  0215' 0080'              	movwf	??___fladd
  3817  0216' 0800'              	movf	??___fladd,w
  3818  0217' 078A'              	addwf	___fladd@bexp,f
  3819  0218'                    l606:	
  3820  0218' 0A0A'              	incf	___fladd@bexp,w
  3821  0219' 1D03               	btfss	3,2
  3822  021A' 080A'              	movf	___fladd@bexp,w
  3823  021B' 1D03               	btfss	3,2
  3824  021C' 2A28'              	goto	l2090
  3825  021D' 3000               	movlw	0
  3826  021E' 0083'              	movwf	___fladd@b+3
  3827  021F' 3000               	movlw	0
  3828  0220' 0082'              	movwf	___fladd@b+2
  3829  0221' 3000               	movlw	0
  3830  0222' 0081'              	movwf	___fladd@b+1
  3831  0223' 3000               	movlw	0
  3832  0224' 0080'              	movwf	___fladd@b
  3833  0225' 080A'              	movf	___fladd@bexp,w
  3834  0226' 1903               	btfsc	3,2
  3835  0227' 0188'              	clrf	___fladd@signs
  3836  0228'                    l2090:	
  3837  0228' 1C0A'              	btfss	___fladd@bexp,0
  3838  0229' 2A2C'              	goto	l2094
  3839  022A' 1782'              	bsf	___fladd@b+2,7
  3840  022B' 2A32'              	goto	l614
  3841  022C'                    l2094:	
  3842  022C' 307F               	movlw	127
  3843  022D' 1283               	bcf	3,5	;RP0=0, select bank0
  3844  022E' 1303               	bcf	3,6	;RP1=0, select bank0
  3845  022F' 0080'              	movwf	??___fladd
  3846  0230' 0800'              	movf	??___fladd,w
  3847  0231' 0582'              	andwf	___fladd@b+2,f
  3848  0232'                    l614:	
  3849  0232' 080A'              	movf	___fladd@bexp,w
  3850  0233' 1283               	bcf	3,5	;RP0=0, select bank0
  3851  0234' 1303               	bcf	3,6	;RP1=0, select bank0
  3852  0235' 0080'              	movwf	??___fladd
  3853  0236' 1003               	clrc
  3854  0237' 0C00'              	rrf	??___fladd,w
  3855  0238' 0081'              	movwf	??___fladd+1
  3856  0239' 0801'              	movf	??___fladd+1,w
  3857  023A' 0083'              	movwf	___fladd@b+3
  3858  023B' 1F88'              	btfss	___fladd@signs,7
  3859  023C' 0008               	return
  3860  023D' 1783'              	bsf	___fladd@b+3,7
  3861  023E' 0008               	return
  3862  023F'                    __end_of___fladd:	
  3863                           
  3864                           	psect	text15
  3865  0000'                    __ptext15:	
  3866 ;; *************** function ___flneg *****************
  3867 ;; Defined at:
  3868 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\flneg.c"
  3869 ;; Parameters:    Size  Location     Type
  3870 ;;  f1              4    0[COMMON] unsigned char 
  3871 ;; Auto vars:     Size  Location     Type
  3872 ;;		None
  3873 ;; Return value:  Size  Location     Type
  3874 ;;                  4    0[COMMON] unsigned char 
  3875 ;; Registers used:
  3876 ;;		wreg
  3877 ;; Tracked objects:
  3878 ;;		On entry : 0/0
  3879 ;;		On exit  : 0/0
  3880 ;;		Unchanged: 0/0
  3881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3882 ;;      Params:         4       0       0       0
  3883 ;;      Locals:         0       0       0       0
  3884 ;;      Temps:          0       0       0       0
  3885 ;;      Totals:         4       0       0       0
  3886 ;;Total ram usage:        4 bytes
  3887 ;; Hardware stack levels used:    1
  3888 ;; This function calls:
  3889 ;;		Nothing
  3890 ;; This function is called by:
  3891 ;;		_ftoa
  3892 ;; This function uses a non-reentrant model
  3893 ;;
  3894                           
  3895                           
  3896                           ;psect for function ___flneg
  3897  0000'                    ___flneg:	
  3898                           
  3899                           ;incstack = 0
  3900                           ; Regs used in ___flneg: [wreg]
  3901  0000' 0803'              	movf	___flneg@f1+3,w
  3902  0001' 0402'              	iorwf	___flneg@f1+2,w
  3903  0002' 0401'              	iorwf	___flneg@f1+1,w
  3904  0003' 0400'              	iorwf	___flneg@f1,w
  3905  0004' 1903               	skipnz
  3906  0005' 0008               	return
  3907  0006' 3080               	movlw	128
  3908  0007' 0683'              	xorwf	___flneg@f1+3,f
  3909  0008' 0008               	return
  3910  0009'                    __end_of___flneg:	
  3911                           
  3912                           	psect	text16
  3913  0000'                    __ptext16:	
  3914 ;; *************** function ___flmul *****************
  3915 ;; Defined at:
  3916 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcmul.c"
  3917 ;; Parameters:    Size  Location     Type
  3918 ;;  b               4    0[BANK0 ] unsigned char 
  3919 ;;  a               4    4[BANK0 ] unsigned char 
  3920 ;; Auto vars:     Size  Location     Type
  3921 ;;  prod            4   15[BANK0 ] struct .
  3922 ;;  grs             4    9[BANK0 ] unsigned long 
  3923 ;;  temp            2   19[BANK0 ] struct .
  3924 ;;  bexp            1   14[BANK0 ] unsigned char 
  3925 ;;  aexp            1   13[BANK0 ] unsigned char 
  3926 ;;  sign            1    8[BANK0 ] unsigned char 
  3927 ;; Return value:  Size  Location     Type
  3928 ;;                  4    0[BANK0 ] unsigned char 
  3929 ;; Registers used:
  3930 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3931 ;; Tracked objects:
  3932 ;;		On entry : 0/0
  3933 ;;		On exit  : 0/0
  3934 ;;		Unchanged: 0/0
  3935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3936 ;;      Params:         0       8       0       0
  3937 ;;      Locals:         0      13       0       0
  3938 ;;      Temps:          5       0       0       0
  3939 ;;      Totals:         5      21       0       0
  3940 ;;Total ram usage:       26 bytes
  3941 ;; Hardware stack levels used:    1
  3942 ;; Hardware stack levels required when called:    1
  3943 ;; This function calls:
  3944 ;;		__Umul8_16
  3945 ;; This function is called by:
  3946 ;;		_ftoa
  3947 ;; This function uses a non-reentrant model
  3948 ;;
  3949                           
  3950                           
  3951                           ;psect for function ___flmul
  3952  0000'                    ___flmul:	
  3953                           
  3954                           ;incstack = 0
  3955                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3956  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  3957  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  3958  0002' 0803'              	movf	___flmul@b+3,w
  3959  0003' 3980               	andlw	128
  3960  0004' 0089'              	movwf	??___flmul
  3961  0005' 0809'              	movf	??___flmul,w
  3962  0006' 0088'              	movwf	___flmul@sign
  3963  0007' 0803'              	movf	___flmul@b+3,w
  3964  0008' 0089'              	movwf	??___flmul
  3965  0009' 0709'              	addwf	??___flmul,w
  3966  000A' 008A'              	movwf	??___flmul+1
  3967  000B' 080A'              	movf	??___flmul+1,w
  3968  000C' 008E'              	movwf	___flmul@bexp
  3969  000D' 1B82'              	btfsc	___flmul@b+2,7
  3970  000E' 140E'              	bsf	___flmul@bexp,0
  3971  000F' 080E'              	movf	___flmul@bexp,w
  3972  0010' 1903               	btfsc	3,2
  3973  0011' 281F'              	goto	l2332
  3974  0012' 0A0E'              	incf	___flmul@bexp,w
  3975  0013' 1D03               	btfss	3,2
  3976  0014' 281D'              	goto	l2330
  3977  0015' 3000               	movlw	0
  3978  0016' 0083'              	movwf	___flmul@b+3
  3979  0017' 3000               	movlw	0
  3980  0018' 0082'              	movwf	___flmul@b+2
  3981  0019' 3000               	movlw	0
  3982  001A' 0081'              	movwf	___flmul@b+1
  3983  001B' 3000               	movlw	0
  3984  001C' 0080'              	movwf	___flmul@b
  3985  001D'                    l2330:	
  3986  001D' 1782'              	bsf	___flmul@b+2,7
  3987  001E' 2827'              	goto	l2334
  3988  001F'                    l2332:	
  3989  001F' 3000               	movlw	0
  3990  0020' 0083'              	movwf	___flmul@b+3
  3991  0021' 3000               	movlw	0
  3992  0022' 0082'              	movwf	___flmul@b+2
  3993  0023' 3000               	movlw	0
  3994  0024' 0081'              	movwf	___flmul@b+1
  3995  0025' 3000               	movlw	0
  3996  0026' 0080'              	movwf	___flmul@b
  3997  0027'                    l2334:	
  3998  0027' 0807'              	movf	___flmul@a+3,w
  3999  0028' 3980               	andlw	128
  4000  0029' 0089'              	movwf	??___flmul
  4001  002A' 0809'              	movf	??___flmul,w
  4002  002B' 0688'              	xorwf	___flmul@sign,f
  4003  002C' 0807'              	movf	___flmul@a+3,w
  4004  002D' 0089'              	movwf	??___flmul
  4005  002E' 0709'              	addwf	??___flmul,w
  4006  002F' 008A'              	movwf	??___flmul+1
  4007  0030' 080A'              	movf	??___flmul+1,w
  4008  0031' 008D'              	movwf	___flmul@aexp
  4009  0032' 1B86'              	btfsc	___flmul@a+2,7
  4010  0033' 140D'              	bsf	___flmul@aexp,0
  4011  0034' 080D'              	movf	___flmul@aexp,w
  4012  0035' 1903               	btfsc	3,2
  4013  0036' 2844'              	goto	l2350
  4014  0037' 0A0D'              	incf	___flmul@aexp,w
  4015  0038' 1D03               	btfss	3,2
  4016  0039' 2842'              	goto	l2348
  4017  003A' 3000               	movlw	0
  4018  003B' 0087'              	movwf	___flmul@a+3
  4019  003C' 3000               	movlw	0
  4020  003D' 0086'              	movwf	___flmul@a+2
  4021  003E' 3000               	movlw	0
  4022  003F' 0085'              	movwf	___flmul@a+1
  4023  0040' 3000               	movlw	0
  4024  0041' 0084'              	movwf	___flmul@a
  4025  0042'                    l2348:	
  4026  0042' 1786'              	bsf	___flmul@a+2,7
  4027  0043' 284C'              	goto	l2352
  4028  0044'                    l2350:	
  4029  0044' 3000               	movlw	0
  4030  0045' 0087'              	movwf	___flmul@a+3
  4031  0046' 3000               	movlw	0
  4032  0047' 0086'              	movwf	___flmul@a+2
  4033  0048' 3000               	movlw	0
  4034  0049' 0085'              	movwf	___flmul@a+1
  4035  004A' 3000               	movlw	0
  4036  004B' 0084'              	movwf	___flmul@a
  4037  004C'                    l2352:	
  4038  004C' 080D'              	movf	___flmul@aexp,w
  4039  004D' 1D03               	btfss	3,2
  4040  004E' 080E'              	movf	___flmul@bexp,w
  4041  004F' 1D03               	btfss	3,2
  4042  0050' 285A'              	goto	l2360
  4043  0051' 3000               	movlw	0
  4044  0052' 0083'              	movwf	?___flmul+3
  4045  0053' 3000               	movlw	0
  4046  0054' 0082'              	movwf	?___flmul+2
  4047  0055' 3000               	movlw	0
  4048  0056' 0081'              	movwf	?___flmul+1
  4049  0057' 3000               	movlw	0
  4050  0058' 0080'              	movwf	?___flmul
  4051  0059' 0008               	return
  4052  005A'                    l2360:	
  4053  005A' 0800'              	movf	___flmul@b,w
  4054  005B' 0089'              	movwf	??___flmul
  4055  005C' 0809'              	movf	??___flmul,w
  4056  005D' 0080'              	movwf	__Umul8_16@multiplicand
  4057  005E' 0806'              	movf	___flmul@a+2,w
  4058  005F' 2000'              	fcall	__Umul8_16
  4059  0060' 0801'              	movf	?__Umul8_16+1,w
  4060  0061' 1283               	bcf	3,5	;RP0=0, select bank0
  4061  0062' 1303               	bcf	3,6	;RP1=0, select bank0
  4062  0063' 0094'              	movwf	___flmul@temp+1
  4063  0064' 0800'              	movf	?__Umul8_16,w
  4064  0065' 0093'              	movwf	___flmul@temp
  4065  0066' 0813'              	movf	___flmul@temp,w
  4066  0067' 0089'              	movwf	??___flmul
  4067  0068' 018A'              	clrf	??___flmul+1
  4068  0069' 018B'              	clrf	??___flmul+2
  4069  006A' 018C'              	clrf	??___flmul+3
  4070  006B' 080C'              	movf	??___flmul+3,w
  4071  006C' 008C'              	movwf	___flmul@grs+3
  4072  006D' 080B'              	movf	??___flmul+2,w
  4073  006E' 008B'              	movwf	___flmul@grs+2
  4074  006F' 080A'              	movf	??___flmul+1,w
  4075  0070' 008A'              	movwf	___flmul@grs+1
  4076  0071' 0809'              	movf	??___flmul,w
  4077  0072' 0089'              	movwf	___flmul@grs
  4078  0073' 0814'              	movf	___flmul@temp+1,w
  4079  0074' 0089'              	movwf	??___flmul
  4080  0075' 018A'              	clrf	??___flmul+1
  4081  0076' 018B'              	clrf	??___flmul+2
  4082  0077' 018C'              	clrf	??___flmul+3
  4083  0078' 080C'              	movf	??___flmul+3,w
  4084  0079' 0092'              	movwf	___flmul@prod+3
  4085  007A' 080B'              	movf	??___flmul+2,w
  4086  007B' 0091'              	movwf	___flmul@prod+2
  4087  007C' 080A'              	movf	??___flmul+1,w
  4088  007D' 0090'              	movwf	___flmul@prod+1
  4089  007E' 0809'              	movf	??___flmul,w
  4090  007F' 008F'              	movwf	___flmul@prod
  4091  0080' 0801'              	movf	___flmul@b+1,w
  4092  0081' 0089'              	movwf	??___flmul
  4093  0082' 0809'              	movf	??___flmul,w
  4094  0083' 0080'              	movwf	__Umul8_16@multiplicand
  4095  0084' 0805'              	movf	___flmul@a+1,w
  4096  0085' 2000'              	fcall	__Umul8_16
  4097  0086' 0801'              	movf	?__Umul8_16+1,w
  4098  0087' 1283               	bcf	3,5	;RP0=0, select bank0
  4099  0088' 1303               	bcf	3,6	;RP1=0, select bank0
  4100  0089' 0094'              	movwf	___flmul@temp+1
  4101  008A' 0800'              	movf	?__Umul8_16,w
  4102  008B' 0093'              	movwf	___flmul@temp
  4103  008C' 0813'              	movf	___flmul@temp,w
  4104  008D' 0089'              	movwf	??___flmul
  4105  008E' 018A'              	clrf	??___flmul+1
  4106  008F' 018B'              	clrf	??___flmul+2
  4107  0090' 018C'              	clrf	??___flmul+3
  4108  0091' 0809'              	movf	??___flmul,w
  4109  0092' 0789'              	addwf	___flmul@grs,f
  4110  0093' 080A'              	movf	??___flmul+1,w
  4111  0094' 1103               	clrz
  4112  0095' 1803               	skipnc
  4113  0096' 3E01               	addlw	1
  4114  0097' 1D03               	btfss	3,2
  4115  0098' 078A'              	addwf	___flmul@grs+1,f
  4116  0099' 080B'              	movf	??___flmul+2,w
  4117  009A' 1103               	clrz
  4118  009B' 1803               	skipnc
  4119  009C' 3E01               	addlw	1
  4120  009D' 1D03               	btfss	3,2
  4121  009E' 078B'              	addwf	___flmul@grs+2,f
  4122  009F' 080C'              	movf	??___flmul+3,w
  4123  00A0' 1103               	clrz
  4124  00A1' 1803               	skipnc
  4125  00A2' 3E01               	addlw	1
  4126  00A3' 1D03               	btfss	3,2
  4127  00A4' 078C'              	addwf	___flmul@grs+3,f
  4128  00A5' 0814'              	movf	___flmul@temp+1,w
  4129  00A6' 0089'              	movwf	??___flmul
  4130  00A7' 018A'              	clrf	??___flmul+1
  4131  00A8' 018B'              	clrf	??___flmul+2
  4132  00A9' 018C'              	clrf	??___flmul+3
  4133  00AA' 0809'              	movf	??___flmul,w
  4134  00AB' 078F'              	addwf	___flmul@prod,f
  4135  00AC' 080A'              	movf	??___flmul+1,w
  4136  00AD' 1103               	clrz
  4137  00AE' 1803               	skipnc
  4138  00AF' 3E01               	addlw	1
  4139  00B0' 1D03               	btfss	3,2
  4140  00B1' 0790'              	addwf	___flmul@prod+1,f
  4141  00B2' 080B'              	movf	??___flmul+2,w
  4142  00B3' 1103               	clrz
  4143  00B4' 1803               	skipnc
  4144  00B5' 3E01               	addlw	1
  4145  00B6' 1D03               	btfss	3,2
  4146  00B7' 0791'              	addwf	___flmul@prod+2,f
  4147  00B8' 080C'              	movf	??___flmul+3,w
  4148  00B9' 1103               	clrz
  4149  00BA' 1803               	skipnc
  4150  00BB' 3E01               	addlw	1
  4151  00BC' 1D03               	btfss	3,2
  4152  00BD' 0792'              	addwf	___flmul@prod+3,f
  4153  00BE' 0802'              	movf	___flmul@b+2,w
  4154  00BF' 0089'              	movwf	??___flmul
  4155  00C0' 0809'              	movf	??___flmul,w
  4156  00C1' 0080'              	movwf	__Umul8_16@multiplicand
  4157  00C2' 0804'              	movf	___flmul@a,w
  4158  00C3' 2000'              	fcall	__Umul8_16
  4159  00C4' 0801'              	movf	?__Umul8_16+1,w
  4160  00C5' 1283               	bcf	3,5	;RP0=0, select bank0
  4161  00C6' 1303               	bcf	3,6	;RP1=0, select bank0
  4162  00C7' 0094'              	movwf	___flmul@temp+1
  4163  00C8' 0800'              	movf	?__Umul8_16,w
  4164  00C9' 0093'              	movwf	___flmul@temp
  4165  00CA' 0813'              	movf	___flmul@temp,w
  4166  00CB' 0089'              	movwf	??___flmul
  4167  00CC' 018A'              	clrf	??___flmul+1
  4168  00CD' 018B'              	clrf	??___flmul+2
  4169  00CE' 018C'              	clrf	??___flmul+3
  4170  00CF' 0809'              	movf	??___flmul,w
  4171  00D0' 0789'              	addwf	___flmul@grs,f
  4172  00D1' 080A'              	movf	??___flmul+1,w
  4173  00D2' 1103               	clrz
  4174  00D3' 1803               	skipnc
  4175  00D4' 3E01               	addlw	1
  4176  00D5' 1D03               	btfss	3,2
  4177  00D6' 078A'              	addwf	___flmul@grs+1,f
  4178  00D7' 080B'              	movf	??___flmul+2,w
  4179  00D8' 1103               	clrz
  4180  00D9' 1803               	skipnc
  4181  00DA' 3E01               	addlw	1
  4182  00DB' 1D03               	btfss	3,2
  4183  00DC' 078B'              	addwf	___flmul@grs+2,f
  4184  00DD' 080C'              	movf	??___flmul+3,w
  4185  00DE' 1103               	clrz
  4186  00DF' 1803               	skipnc
  4187  00E0' 3E01               	addlw	1
  4188  00E1' 1D03               	btfss	3,2
  4189  00E2' 078C'              	addwf	___flmul@grs+3,f
  4190  00E3' 0814'              	movf	___flmul@temp+1,w
  4191  00E4' 0089'              	movwf	??___flmul
  4192  00E5' 018A'              	clrf	??___flmul+1
  4193  00E6' 018B'              	clrf	??___flmul+2
  4194  00E7' 018C'              	clrf	??___flmul+3
  4195  00E8' 0809'              	movf	??___flmul,w
  4196  00E9' 078F'              	addwf	___flmul@prod,f
  4197  00EA' 080A'              	movf	??___flmul+1,w
  4198  00EB' 1103               	clrz
  4199  00EC' 1803               	skipnc
  4200  00ED' 3E01               	addlw	1
  4201  00EE' 1D03               	btfss	3,2
  4202  00EF' 0790'              	addwf	___flmul@prod+1,f
  4203  00F0' 080B'              	movf	??___flmul+2,w
  4204  00F1' 1103               	clrz
  4205  00F2' 1803               	skipnc
  4206  00F3' 3E01               	addlw	1
  4207  00F4' 1D03               	btfss	3,2
  4208  00F5' 0791'              	addwf	___flmul@prod+2,f
  4209  00F6' 080C'              	movf	??___flmul+3,w
  4210  00F7' 1103               	clrz
  4211  00F8' 1803               	skipnc
  4212  00F9' 3E01               	addlw	1
  4213  00FA' 1D03               	btfss	3,2
  4214  00FB' 0792'              	addwf	___flmul@prod+3,f
  4215  00FC' 3008               	movlw	8
  4216  00FD' 0089'              	movwf	??___flmul
  4217  00FE'                    u3535:	
  4218  00FE' 1003               	clrc
  4219  00FF' 0D89'              	rlf	___flmul@grs,f
  4220  0100' 0D8A'              	rlf	___flmul@grs+1,f
  4221  0101' 0D8B'              	rlf	___flmul@grs+2,f
  4222  0102' 0D8C'              	rlf	___flmul@grs+3,f
  4223  0103' 0B89'              	decfsz	??___flmul,f
  4224  0104' 28FE'              	goto	u3535
  4225  0105' 0801'              	movf	___flmul@b+1,w
  4226  0106' 0089'              	movwf	??___flmul
  4227  0107' 0809'              	movf	??___flmul,w
  4228  0108' 0080'              	movwf	__Umul8_16@multiplicand
  4229  0109' 0804'              	movf	___flmul@a,w
  4230  010A' 2000'              	fcall	__Umul8_16
  4231  010B' 0801'              	movf	?__Umul8_16+1,w
  4232  010C' 1283               	bcf	3,5	;RP0=0, select bank0
  4233  010D' 1303               	bcf	3,6	;RP1=0, select bank0
  4234  010E' 0094'              	movwf	___flmul@temp+1
  4235  010F' 0800'              	movf	?__Umul8_16,w
  4236  0110' 0093'              	movwf	___flmul@temp
  4237  0111' 0813'              	movf	___flmul@temp,w
  4238  0112' 0089'              	movwf	??___flmul
  4239  0113' 0814'              	movf	___flmul@temp+1,w
  4240  0114' 008A'              	movwf	??___flmul+1
  4241  0115' 018B'              	clrf	??___flmul+2
  4242  0116' 018C'              	clrf	??___flmul+3
  4243  0117' 0809'              	movf	??___flmul,w
  4244  0118' 0789'              	addwf	___flmul@grs,f
  4245  0119' 080A'              	movf	??___flmul+1,w
  4246  011A' 1103               	clrz
  4247  011B' 1803               	skipnc
  4248  011C' 3E01               	addlw	1
  4249  011D' 1D03               	btfss	3,2
  4250  011E' 078A'              	addwf	___flmul@grs+1,f
  4251  011F' 080B'              	movf	??___flmul+2,w
  4252  0120' 1103               	clrz
  4253  0121' 1803               	skipnc
  4254  0122' 3E01               	addlw	1
  4255  0123' 1D03               	btfss	3,2
  4256  0124' 078B'              	addwf	___flmul@grs+2,f
  4257  0125' 080C'              	movf	??___flmul+3,w
  4258  0126' 1103               	clrz
  4259  0127' 1803               	skipnc
  4260  0128' 3E01               	addlw	1
  4261  0129' 1D03               	btfss	3,2
  4262  012A' 078C'              	addwf	___flmul@grs+3,f
  4263  012B' 0800'              	movf	___flmul@b,w
  4264  012C' 0089'              	movwf	??___flmul
  4265  012D' 0809'              	movf	??___flmul,w
  4266  012E' 0080'              	movwf	__Umul8_16@multiplicand
  4267  012F' 0805'              	movf	___flmul@a+1,w
  4268  0130' 2000'              	fcall	__Umul8_16
  4269  0131' 0801'              	movf	?__Umul8_16+1,w
  4270  0132' 1283               	bcf	3,5	;RP0=0, select bank0
  4271  0133' 1303               	bcf	3,6	;RP1=0, select bank0
  4272  0134' 0094'              	movwf	___flmul@temp+1
  4273  0135' 0800'              	movf	?__Umul8_16,w
  4274  0136' 0093'              	movwf	___flmul@temp
  4275  0137' 0813'              	movf	___flmul@temp,w
  4276  0138' 0089'              	movwf	??___flmul
  4277  0139' 0814'              	movf	___flmul@temp+1,w
  4278  013A' 008A'              	movwf	??___flmul+1
  4279  013B' 018B'              	clrf	??___flmul+2
  4280  013C' 018C'              	clrf	??___flmul+3
  4281  013D' 0809'              	movf	??___flmul,w
  4282  013E' 0789'              	addwf	___flmul@grs,f
  4283  013F' 080A'              	movf	??___flmul+1,w
  4284  0140' 1103               	clrz
  4285  0141' 1803               	skipnc
  4286  0142' 3E01               	addlw	1
  4287  0143' 1D03               	btfss	3,2
  4288  0144' 078A'              	addwf	___flmul@grs+1,f
  4289  0145' 080B'              	movf	??___flmul+2,w
  4290  0146' 1103               	clrz
  4291  0147' 1803               	skipnc
  4292  0148' 3E01               	addlw	1
  4293  0149' 1D03               	btfss	3,2
  4294  014A' 078B'              	addwf	___flmul@grs+2,f
  4295  014B' 080C'              	movf	??___flmul+3,w
  4296  014C' 1103               	clrz
  4297  014D' 1803               	skipnc
  4298  014E' 3E01               	addlw	1
  4299  014F' 1D03               	btfss	3,2
  4300  0150' 078C'              	addwf	___flmul@grs+3,f
  4301  0151' 3008               	movlw	8
  4302  0152' 0089'              	movwf	??___flmul
  4303  0153'                    u3565:	
  4304  0153' 1003               	clrc
  4305  0154' 0D89'              	rlf	___flmul@grs,f
  4306  0155' 0D8A'              	rlf	___flmul@grs+1,f
  4307  0156' 0D8B'              	rlf	___flmul@grs+2,f
  4308  0157' 0D8C'              	rlf	___flmul@grs+3,f
  4309  0158' 0B89'              	decfsz	??___flmul,f
  4310  0159' 2953'              	goto	u3565
  4311  015A' 0800'              	movf	___flmul@b,w
  4312  015B' 0089'              	movwf	??___flmul
  4313  015C' 0809'              	movf	??___flmul,w
  4314  015D' 0080'              	movwf	__Umul8_16@multiplicand
  4315  015E' 0804'              	movf	___flmul@a,w
  4316  015F' 2000'              	fcall	__Umul8_16
  4317  0160' 0801'              	movf	?__Umul8_16+1,w
  4318  0161' 1283               	bcf	3,5	;RP0=0, select bank0
  4319  0162' 1303               	bcf	3,6	;RP1=0, select bank0
  4320  0163' 0094'              	movwf	___flmul@temp+1
  4321  0164' 0800'              	movf	?__Umul8_16,w
  4322  0165' 0093'              	movwf	___flmul@temp
  4323  0166' 0813'              	movf	___flmul@temp,w
  4324  0167' 0089'              	movwf	??___flmul
  4325  0168' 0814'              	movf	___flmul@temp+1,w
  4326  0169' 008A'              	movwf	??___flmul+1
  4327  016A' 018B'              	clrf	??___flmul+2
  4328  016B' 018C'              	clrf	??___flmul+3
  4329  016C' 0809'              	movf	??___flmul,w
  4330  016D' 0789'              	addwf	___flmul@grs,f
  4331  016E' 080A'              	movf	??___flmul+1,w
  4332  016F' 1103               	clrz
  4333  0170' 1803               	skipnc
  4334  0171' 3E01               	addlw	1
  4335  0172' 1D03               	btfss	3,2
  4336  0173' 078A'              	addwf	___flmul@grs+1,f
  4337  0174' 080B'              	movf	??___flmul+2,w
  4338  0175' 1103               	clrz
  4339  0176' 1803               	skipnc
  4340  0177' 3E01               	addlw	1
  4341  0178' 1D03               	btfss	3,2
  4342  0179' 078B'              	addwf	___flmul@grs+2,f
  4343  017A' 080C'              	movf	??___flmul+3,w
  4344  017B' 1103               	clrz
  4345  017C' 1803               	skipnc
  4346  017D' 3E01               	addlw	1
  4347  017E' 1D03               	btfss	3,2
  4348  017F' 078C'              	addwf	___flmul@grs+3,f
  4349  0180' 0801'              	movf	___flmul@b+1,w
  4350  0181' 0089'              	movwf	??___flmul
  4351  0182' 0809'              	movf	??___flmul,w
  4352  0183' 0080'              	movwf	__Umul8_16@multiplicand
  4353  0184' 0806'              	movf	___flmul@a+2,w
  4354  0185' 2000'              	fcall	__Umul8_16
  4355  0186' 0801'              	movf	?__Umul8_16+1,w
  4356  0187' 1283               	bcf	3,5	;RP0=0, select bank0
  4357  0188' 1303               	bcf	3,6	;RP1=0, select bank0
  4358  0189' 0094'              	movwf	___flmul@temp+1
  4359  018A' 0800'              	movf	?__Umul8_16,w
  4360  018B' 0093'              	movwf	___flmul@temp
  4361  018C' 0813'              	movf	___flmul@temp,w
  4362  018D' 0089'              	movwf	??___flmul
  4363  018E' 0814'              	movf	___flmul@temp+1,w
  4364  018F' 008A'              	movwf	??___flmul+1
  4365  0190' 018B'              	clrf	??___flmul+2
  4366  0191' 018C'              	clrf	??___flmul+3
  4367  0192' 0809'              	movf	??___flmul,w
  4368  0193' 078F'              	addwf	___flmul@prod,f
  4369  0194' 080A'              	movf	??___flmul+1,w
  4370  0195' 1103               	clrz
  4371  0196' 1803               	skipnc
  4372  0197' 3E01               	addlw	1
  4373  0198' 1D03               	btfss	3,2
  4374  0199' 0790'              	addwf	___flmul@prod+1,f
  4375  019A' 080B'              	movf	??___flmul+2,w
  4376  019B' 1103               	clrz
  4377  019C' 1803               	skipnc
  4378  019D' 3E01               	addlw	1
  4379  019E' 1D03               	btfss	3,2
  4380  019F' 0791'              	addwf	___flmul@prod+2,f
  4381  01A0' 080C'              	movf	??___flmul+3,w
  4382  01A1' 1103               	clrz
  4383  01A2' 1803               	skipnc
  4384  01A3' 3E01               	addlw	1
  4385  01A4' 1D03               	btfss	3,2
  4386  01A5' 0792'              	addwf	___flmul@prod+3,f
  4387  01A6' 0802'              	movf	___flmul@b+2,w
  4388  01A7' 0089'              	movwf	??___flmul
  4389  01A8' 0809'              	movf	??___flmul,w
  4390  01A9' 0080'              	movwf	__Umul8_16@multiplicand
  4391  01AA' 0805'              	movf	___flmul@a+1,w
  4392  01AB' 2000'              	fcall	__Umul8_16
  4393  01AC' 0801'              	movf	?__Umul8_16+1,w
  4394  01AD' 1283               	bcf	3,5	;RP0=0, select bank0
  4395  01AE' 1303               	bcf	3,6	;RP1=0, select bank0
  4396  01AF' 0094'              	movwf	___flmul@temp+1
  4397  01B0' 0800'              	movf	?__Umul8_16,w
  4398  01B1' 0093'              	movwf	___flmul@temp
  4399  01B2' 0813'              	movf	___flmul@temp,w
  4400  01B3' 0089'              	movwf	??___flmul
  4401  01B4' 0814'              	movf	___flmul@temp+1,w
  4402  01B5' 008A'              	movwf	??___flmul+1
  4403  01B6' 018B'              	clrf	??___flmul+2
  4404  01B7' 018C'              	clrf	??___flmul+3
  4405  01B8' 0809'              	movf	??___flmul,w
  4406  01B9' 078F'              	addwf	___flmul@prod,f
  4407  01BA' 080A'              	movf	??___flmul+1,w
  4408  01BB' 1103               	clrz
  4409  01BC' 1803               	skipnc
  4410  01BD' 3E01               	addlw	1
  4411  01BE' 1D03               	btfss	3,2
  4412  01BF' 0790'              	addwf	___flmul@prod+1,f
  4413  01C0' 080B'              	movf	??___flmul+2,w
  4414  01C1' 1103               	clrz
  4415  01C2' 1803               	skipnc
  4416  01C3' 3E01               	addlw	1
  4417  01C4' 1D03               	btfss	3,2
  4418  01C5' 0791'              	addwf	___flmul@prod+2,f
  4419  01C6' 080C'              	movf	??___flmul+3,w
  4420  01C7' 1103               	clrz
  4421  01C8' 1803               	skipnc
  4422  01C9' 3E01               	addlw	1
  4423  01CA' 1D03               	btfss	3,2
  4424  01CB' 0792'              	addwf	___flmul@prod+3,f
  4425  01CC' 0802'              	movf	___flmul@b+2,w
  4426  01CD' 0089'              	movwf	??___flmul
  4427  01CE' 0809'              	movf	??___flmul,w
  4428  01CF' 0080'              	movwf	__Umul8_16@multiplicand
  4429  01D0' 0806'              	movf	___flmul@a+2,w
  4430  01D1' 2000'              	fcall	__Umul8_16
  4431  01D2' 0801'              	movf	?__Umul8_16+1,w
  4432  01D3' 1283               	bcf	3,5	;RP0=0, select bank0
  4433  01D4' 1303               	bcf	3,6	;RP1=0, select bank0
  4434  01D5' 0094'              	movwf	___flmul@temp+1
  4435  01D6' 0800'              	movf	?__Umul8_16,w
  4436  01D7' 0093'              	movwf	___flmul@temp
  4437  01D8' 0813'              	movf	___flmul@temp,w
  4438  01D9' 0089'              	movwf	??___flmul
  4439  01DA' 0814'              	movf	___flmul@temp+1,w
  4440  01DB' 008A'              	movwf	??___flmul+1
  4441  01DC' 018B'              	clrf	??___flmul+2
  4442  01DD' 018C'              	clrf	??___flmul+3
  4443  01DE' 3008               	movlw	8
  4444  01DF'                    u3605:	
  4445  01DF' 1003               	clrc
  4446  01E0' 0D89'              	rlf	??___flmul,f
  4447  01E1' 0D8A'              	rlf	??___flmul+1,f
  4448  01E2' 0D8B'              	rlf	??___flmul+2,f
  4449  01E3' 0D8C'              	rlf	??___flmul+3,f
  4450  01E4' 3EFF               	addlw	-1
  4451  01E5' 1D03               	skipz
  4452  01E6' 29DF'              	goto	u3605
  4453  01E7' 0809'              	movf	??___flmul,w
  4454  01E8' 078F'              	addwf	___flmul@prod,f
  4455  01E9' 080A'              	movf	??___flmul+1,w
  4456  01EA' 1103               	clrz
  4457  01EB' 1803               	skipnc
  4458  01EC' 3E01               	addlw	1
  4459  01ED' 1D03               	btfss	3,2
  4460  01EE' 0790'              	addwf	___flmul@prod+1,f
  4461  01EF' 080B'              	movf	??___flmul+2,w
  4462  01F0' 1103               	clrz
  4463  01F1' 1803               	skipnc
  4464  01F2' 3E01               	addlw	1
  4465  01F3' 1D03               	btfss	3,2
  4466  01F4' 0791'              	addwf	___flmul@prod+2,f
  4467  01F5' 080C'              	movf	??___flmul+3,w
  4468  01F6' 1103               	clrz
  4469  01F7' 1803               	skipnc
  4470  01F8' 3E01               	addlw	1
  4471  01F9' 1D03               	btfss	3,2
  4472  01FA' 0792'              	addwf	___flmul@prod+3,f
  4473  01FB' 0809'              	movf	___flmul@grs,w
  4474  01FC' 0089'              	movwf	??___flmul
  4475  01FD' 080A'              	movf	___flmul@grs+1,w
  4476  01FE' 008A'              	movwf	??___flmul+1
  4477  01FF' 080B'              	movf	___flmul@grs+2,w
  4478  0200' 008B'              	movwf	??___flmul+2
  4479  0201' 080C'              	movf	___flmul@grs+3,w
  4480  0202' 008C'              	movwf	??___flmul+3
  4481  0203' 3018               	movlw	24
  4482  0204'                    u3625:	
  4483  0204' 1003               	clrc
  4484  0205' 0C8C'              	rrf	??___flmul+3,f
  4485  0206' 0C8B'              	rrf	??___flmul+2,f
  4486  0207' 0C8A'              	rrf	??___flmul+1,f
  4487  0208' 0C89'              	rrf	??___flmul,f
  4488  0209' 3EFF               	addlw	-1
  4489  020A' 1D03               	skipz
  4490  020B' 2A04'              	goto	u3625
  4491  020C' 0809'              	movf	??___flmul,w
  4492  020D' 078F'              	addwf	___flmul@prod,f
  4493  020E' 080A'              	movf	??___flmul+1,w
  4494  020F' 1103               	clrz
  4495  0210' 1803               	skipnc
  4496  0211' 3E01               	addlw	1
  4497  0212' 1D03               	btfss	3,2
  4498  0213' 0790'              	addwf	___flmul@prod+1,f
  4499  0214' 080B'              	movf	??___flmul+2,w
  4500  0215' 1103               	clrz
  4501  0216' 1803               	skipnc
  4502  0217' 3E01               	addlw	1
  4503  0218' 1D03               	btfss	3,2
  4504  0219' 0791'              	addwf	___flmul@prod+2,f
  4505  021A' 080C'              	movf	??___flmul+3,w
  4506  021B' 1103               	clrz
  4507  021C' 1803               	skipnc
  4508  021D' 3E01               	addlw	1
  4509  021E' 1D03               	btfss	3,2
  4510  021F' 0792'              	addwf	___flmul@prod+3,f
  4511  0220' 3008               	movlw	8
  4512  0221' 0089'              	movwf	??___flmul
  4513  0222'                    u3645:	
  4514  0222' 1003               	clrc
  4515  0223' 0D89'              	rlf	___flmul@grs,f
  4516  0224' 0D8A'              	rlf	___flmul@grs+1,f
  4517  0225' 0D8B'              	rlf	___flmul@grs+2,f
  4518  0226' 0D8C'              	rlf	___flmul@grs+3,f
  4519  0227' 0B89'              	decfsz	??___flmul,f
  4520  0228' 2A22'              	goto	u3645
  4521  0229' 080E'              	movf	___flmul@bexp,w
  4522  022A' 070D'              	addwf	___flmul@aexp,w
  4523  022B' 0089'              	movwf	??___flmul
  4524  022C' 018A'              	clrf	??___flmul+1
  4525  022D' 0D8A'              	rlf	??___flmul+1,f
  4526  022E' 0809'              	movf	??___flmul,w
  4527  022F' 3E82               	addlw	130
  4528  0230' 0093'              	movwf	___flmul@temp
  4529  0231' 080A'              	movf	??___flmul+1,w
  4530  0232' 1803               	skipnc
  4531  0233' 3E01               	addlw	1
  4532  0234' 3EFF               	addlw	255
  4533  0235' 0094'              	movwf	___flmul@temp+1
  4534  0236'                    l2412:	
  4535  0236' 1B91'              	btfsc	___flmul@prod+2,7
  4536  0237' 2A53'              	goto	l2414
  4537  0238' 3001               	movlw	1
  4538  0239' 0089'              	movwf	??___flmul
  4539  023A'                    u3655:	
  4540  023A' 1003               	clrc
  4541  023B' 0D8F'              	rlf	___flmul@prod,f
  4542  023C' 0D90'              	rlf	___flmul@prod+1,f
  4543  023D' 0D91'              	rlf	___flmul@prod+2,f
  4544  023E' 0D92'              	rlf	___flmul@prod+3,f
  4545  023F' 0B89'              	decfsz	??___flmul,f
  4546  0240' 2A3A'              	goto	u3655
  4547  0241' 1B8C'              	btfsc	___flmul@grs+3,7
  4548  0242' 140F'              	bsf	___flmul@prod,0
  4549  0243' 3001               	movlw	1
  4550  0244' 0089'              	movwf	??___flmul
  4551  0245'                    u3675:	
  4552  0245' 1003               	clrc
  4553  0246' 0D89'              	rlf	___flmul@grs,f
  4554  0247' 0D8A'              	rlf	___flmul@grs+1,f
  4555  0248' 0D8B'              	rlf	___flmul@grs+2,f
  4556  0249' 0D8C'              	rlf	___flmul@grs+3,f
  4557  024A' 0B89'              	decfsz	??___flmul,f
  4558  024B' 2A45'              	goto	u3675
  4559  024C' 30FF               	movlw	255
  4560  024D' 0793'              	addwf	___flmul@temp,f
  4561  024E' 1803               	skipnc
  4562  024F' 0A94'              	incf	___flmul@temp+1,f
  4563  0250' 30FF               	movlw	255
  4564  0251' 0794'              	addwf	___flmul@temp+1,f
  4565  0252' 2A36'              	goto	l2412
  4566  0253'                    l2414:	
  4567  0253' 018D'              	clrf	___flmul@aexp
  4568  0254' 1F8C'              	btfss	___flmul@grs+3,7
  4569  0255' 2A6C'              	goto	l2424
  4570  0256' 30FF               	movlw	255
  4571  0257' 0509'              	andwf	___flmul@grs,w
  4572  0258' 0089'              	movwf	??___flmul
  4573  0259' 30FF               	movlw	255
  4574  025A' 050A'              	andwf	___flmul@grs+1,w
  4575  025B' 008A'              	movwf	??___flmul+1
  4576  025C' 30FF               	movlw	255
  4577  025D' 050B'              	andwf	___flmul@grs+2,w
  4578  025E' 008B'              	movwf	??___flmul+2
  4579  025F' 307F               	movlw	127
  4580  0260' 050C'              	andwf	___flmul@grs+3,w
  4581  0261' 008C'              	movwf	??___flmul+3
  4582  0262' 080C'              	movf	??___flmul+3,w
  4583  0263' 040B'              	iorwf	??___flmul+2,w
  4584  0264' 040A'              	iorwf	??___flmul+1,w
  4585  0265' 0409'              	iorwf	??___flmul,w
  4586  0266' 1903               	skipnz
  4587  0267' 180F'              	btfsc	___flmul@prod,0
  4588  0268' 2A6A'              	goto	l2420
  4589  0269' 2A6C'              	goto	l2424
  4590  026A'                    l2420:	
  4591  026A' 018D'              	clrf	___flmul@aexp
  4592  026B' 0A8D'              	incf	___flmul@aexp,f
  4593  026C'                    l2424:	
  4594  026C' 080D'              	movf	___flmul@aexp,w
  4595  026D' 1903               	btfsc	3,2
  4596  026E' 2A9E'              	goto	l2434
  4597  026F' 3001               	movlw	1
  4598  0270' 078F'              	addwf	___flmul@prod,f
  4599  0271' 3000               	movlw	0
  4600  0272' 1803               	skipnc
  4601  0273' 3001               	movlw	1
  4602  0274' 0790'              	addwf	___flmul@prod+1,f
  4603  0275' 3000               	movlw	0
  4604  0276' 1803               	skipnc
  4605  0277' 3001               	movlw	1
  4606  0278' 0791'              	addwf	___flmul@prod+2,f
  4607  0279' 3000               	movlw	0
  4608  027A' 1803               	skipnc
  4609  027B' 3001               	movlw	1
  4610  027C' 0792'              	addwf	___flmul@prod+3,f
  4611  027D' 1C12'              	btfss	___flmul@prod+3,0
  4612  027E' 2A9E'              	goto	l2434
  4613  027F' 080F'              	movf	___flmul@prod,w
  4614  0280' 0089'              	movwf	??___flmul
  4615  0281' 0810'              	movf	___flmul@prod+1,w
  4616  0282' 008A'              	movwf	??___flmul+1
  4617  0283' 0811'              	movf	___flmul@prod+2,w
  4618  0284' 008B'              	movwf	??___flmul+2
  4619  0285' 0812'              	movf	___flmul@prod+3,w
  4620  0286' 008C'              	movwf	??___flmul+3
  4621  0287' 3001               	movlw	1
  4622  0288' 008D'              	movwf	??___flmul+4
  4623  0289'                    u3745:	
  4624  0289' 0D0C'              	rlf	??___flmul+3,w
  4625  028A' 0C8C'              	rrf	??___flmul+3,f
  4626  028B' 0C8B'              	rrf	??___flmul+2,f
  4627  028C' 0C8A'              	rrf	??___flmul+1,f
  4628  028D' 0C89'              	rrf	??___flmul,f
  4629  028E' 0B8D'              	decfsz	??___flmul+4,f
  4630  028F' 2A89'              	goto	u3745
  4631  0290' 080C'              	movf	??___flmul+3,w
  4632  0291' 0092'              	movwf	___flmul@prod+3
  4633  0292' 080B'              	movf	??___flmul+2,w
  4634  0293' 0091'              	movwf	___flmul@prod+2
  4635  0294' 080A'              	movf	??___flmul+1,w
  4636  0295' 0090'              	movwf	___flmul@prod+1
  4637  0296' 0809'              	movf	??___flmul,w
  4638  0297' 008F'              	movwf	___flmul@prod
  4639  0298' 3001               	movlw	1
  4640  0299' 0793'              	addwf	___flmul@temp,f
  4641  029A' 1803               	skipnc
  4642  029B' 0A94'              	incf	___flmul@temp+1,f
  4643  029C' 3000               	movlw	0
  4644  029D' 0794'              	addwf	___flmul@temp+1,f
  4645  029E'                    l2434:	
  4646  029E' 0814'              	movf	___flmul@temp+1,w
  4647  029F' 3A80               	xorlw	128
  4648  02A0' 00FF               	movwf	127
  4649  02A1' 3080               	movlw	128
  4650  02A2' 027F               	subwf	127,w
  4651  02A3' 1D03               	skipz
  4652  02A4' 2AA7'              	goto	u3755
  4653  02A5' 30FF               	movlw	255
  4654  02A6' 0213'              	subwf	___flmul@temp,w
  4655  02A7'                    u3755:	
  4656  02A7' 1C03               	skipc
  4657  02A8' 2AB4'              	goto	l2438
  4658  02A9' 307F               	movlw	127
  4659  02AA' 1283               	bcf	3,5	;RP0=0, select bank0
  4660  02AB' 1303               	bcf	3,6	;RP1=0, select bank0
  4661  02AC' 0092'              	movwf	___flmul@prod+3
  4662  02AD' 3080               	movlw	128
  4663  02AE' 0091'              	movwf	___flmul@prod+2
  4664  02AF' 3000               	movlw	0
  4665  02B0' 0090'              	movwf	___flmul@prod+1
  4666  02B1' 3000               	movlw	0
  4667  02B2' 008F'              	movwf	___flmul@prod
  4668  02B3' 2AE4'              	goto	l680
  4669  02B4'                    l2438:	
  4670  02B4' 1283               	bcf	3,5	;RP0=0, select bank0
  4671  02B5' 1303               	bcf	3,6	;RP1=0, select bank0
  4672  02B6' 0814'              	movf	___flmul@temp+1,w
  4673  02B7' 3A80               	xorlw	128
  4674  02B8' 00FF               	movwf	127
  4675  02B9' 3080               	movlw	128
  4676  02BA' 027F               	subwf	127,w
  4677  02BB' 1D03               	skipz
  4678  02BC' 2ABF'              	goto	u3765
  4679  02BD' 3001               	movlw	1
  4680  02BE' 0213'              	subwf	___flmul@temp,w
  4681  02BF'                    u3765:	
  4682  02BF' 1803               	skipnc
  4683  02C0' 2ACD'              	goto	l2444
  4684  02C1' 3000               	movlw	0
  4685  02C2' 1283               	bcf	3,5	;RP0=0, select bank0
  4686  02C3' 1303               	bcf	3,6	;RP1=0, select bank0
  4687  02C4' 0092'              	movwf	___flmul@prod+3
  4688  02C5' 3000               	movlw	0
  4689  02C6' 0091'              	movwf	___flmul@prod+2
  4690  02C7' 3000               	movlw	0
  4691  02C8' 0090'              	movwf	___flmul@prod+1
  4692  02C9' 3000               	movlw	0
  4693  02CA' 008F'              	movwf	___flmul@prod
  4694  02CB' 0188'              	clrf	___flmul@sign
  4695  02CC' 2AE4'              	goto	l680
  4696  02CD'                    l2444:	
  4697  02CD' 1283               	bcf	3,5	;RP0=0, select bank0
  4698  02CE' 1303               	bcf	3,6	;RP1=0, select bank0
  4699  02CF' 0813'              	movf	___flmul@temp,w
  4700  02D0' 0089'              	movwf	??___flmul
  4701  02D1' 0809'              	movf	??___flmul,w
  4702  02D2' 008E'              	movwf	___flmul@bexp
  4703  02D3' 30FF               	movlw	255
  4704  02D4' 058F'              	andwf	___flmul@prod,f
  4705  02D5' 30FF               	movlw	255
  4706  02D6' 0590'              	andwf	___flmul@prod+1,f
  4707  02D7' 307F               	movlw	127
  4708  02D8' 0591'              	andwf	___flmul@prod+2,f
  4709  02D9' 3000               	movlw	0
  4710  02DA' 0592'              	andwf	___flmul@prod+3,f
  4711  02DB' 180E'              	btfsc	___flmul@bexp,0
  4712  02DC' 1791'              	bsf	___flmul@prod+2,7
  4713  02DD' 080E'              	movf	___flmul@bexp,w
  4714  02DE' 0089'              	movwf	??___flmul
  4715  02DF' 1003               	clrc
  4716  02E0' 0C09'              	rrf	??___flmul,w
  4717  02E1' 008A'              	movwf	??___flmul+1
  4718  02E2' 080A'              	movf	??___flmul+1,w
  4719  02E3' 0092'              	movwf	___flmul@prod+3
  4720  02E4'                    l680:	
  4721  02E4' 0808'              	movf	___flmul@sign,w
  4722  02E5' 0089'              	movwf	??___flmul
  4723  02E6' 0809'              	movf	??___flmul,w
  4724  02E7' 0492'              	iorwf	___flmul@prod+3,f
  4725  02E8' 0812'              	movf	___flmul@prod+3,w
  4726  02E9' 0083'              	movwf	?___flmul+3
  4727  02EA' 0811'              	movf	___flmul@prod+2,w
  4728  02EB' 0082'              	movwf	?___flmul+2
  4729  02EC' 0810'              	movf	___flmul@prod+1,w
  4730  02ED' 0081'              	movwf	?___flmul+1
  4731  02EE' 080F'              	movf	___flmul@prod,w
  4732  02EF' 0080'              	movwf	?___flmul
  4733  02F0' 0008               	return
  4734  02F1'                    __end_of___flmul:	
  4735                           
  4736                           	psect	text17
  4737  0000'                    __ptext17:	
  4738 ;; *************** function __Umul8_16 *****************
  4739 ;; Defined at:
  4740 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul8_16.c"
  4741 ;; Parameters:    Size  Location     Type
  4742 ;;  multiplier      1    wreg     unsigned char 
  4743 ;;  multiplicand    1    0[COMMON] unsigned char 
  4744 ;; Auto vars:     Size  Location     Type
  4745 ;;  multiplier      1    8[COMMON] unsigned char 
  4746 ;;  word_mpld       2    6[COMMON] unsigned int 
  4747 ;;  product         2    4[COMMON] unsigned int 
  4748 ;; Return value:  Size  Location     Type
  4749 ;;                  2    0[COMMON] unsigned int 
  4750 ;; Registers used:
  4751 ;;		wreg, status,2, status,0
  4752 ;; Tracked objects:
  4753 ;;		On entry : 0/0
  4754 ;;		On exit  : 0/0
  4755 ;;		Unchanged: 0/0
  4756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4757 ;;      Params:         2       0       0       0
  4758 ;;      Locals:         5       0       0       0
  4759 ;;      Temps:          2       0       0       0
  4760 ;;      Totals:         9       0       0       0
  4761 ;;Total ram usage:        9 bytes
  4762 ;; Hardware stack levels used:    1
  4763 ;; This function calls:
  4764 ;;		Nothing
  4765 ;; This function is called by:
  4766 ;;		___flmul
  4767 ;; This function uses a non-reentrant model
  4768 ;;
  4769                           
  4770                           
  4771                           ;psect for function __Umul8_16
  4772  0000'                    __Umul8_16:	
  4773                           
  4774                           ;incstack = 0
  4775                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  4776                           ;__Umul8_16@multiplier stored from wreg
  4777  0000' 0088'              	movwf	__Umul8_16@multiplier
  4778  0001' 0184'              	clrf	__Umul8_16@product
  4779  0002' 0185'              	clrf	__Umul8_16@product+1
  4780  0003' 0800'              	movf	__Umul8_16@multiplicand,w
  4781  0004' 0082'              	movwf	??__Umul8_16
  4782  0005' 0183'              	clrf	??__Umul8_16+1
  4783  0006' 0802'              	movf	??__Umul8_16,w
  4784  0007' 0086'              	movwf	__Umul8_16@word_mpld
  4785  0008' 0803'              	movf	??__Umul8_16+1,w
  4786  0009' 0087'              	movwf	__Umul8_16@word_mpld+1
  4787  000A'                    l2104:	
  4788  000A' 1C08'              	btfss	__Umul8_16@multiplier,0
  4789  000B' 2812'              	goto	l752
  4790  000C' 0806'              	movf	__Umul8_16@word_mpld,w
  4791  000D' 0784'              	addwf	__Umul8_16@product,f
  4792  000E' 1803               	skipnc
  4793  000F' 0A85'              	incf	__Umul8_16@product+1,f
  4794  0010' 0807'              	movf	__Umul8_16@word_mpld+1,w
  4795  0011' 0785'              	addwf	__Umul8_16@product+1,f
  4796  0012'                    l752:	
  4797  0012' 3001               	movlw	1
  4798  0013'                    u2935:	
  4799  0013' 1003               	clrc
  4800  0014' 0D86'              	rlf	__Umul8_16@word_mpld,f
  4801  0015' 0D87'              	rlf	__Umul8_16@word_mpld+1,f
  4802  0016' 3EFF               	addlw	-1
  4803  0017' 1D03               	skipz
  4804  0018' 2813'              	goto	u2935
  4805  0019' 1003               	clrc
  4806  001A' 0C88'              	rrf	__Umul8_16@multiplier,f
  4807  001B' 0808'              	movf	__Umul8_16@multiplier,w
  4808  001C' 1D03               	btfss	3,2
  4809  001D' 280A'              	goto	l2104
  4810  001E' 0805'              	movf	__Umul8_16@product+1,w
  4811  001F' 0081'              	movwf	?__Umul8_16+1
  4812  0020' 0804'              	movf	__Umul8_16@product,w
  4813  0021' 0080'              	movwf	?__Umul8_16
  4814  0022' 0008               	return
  4815  0023'                    __end_of__Umul8_16:	
  4816                           
  4817                           	psect	text18
  4818  0000'                    __ptext18:	
  4819 ;; *************** function ___flge *****************
  4820 ;; Defined at:
  4821 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\flge.c"
  4822 ;; Parameters:    Size  Location     Type
  4823 ;;  ff1             4    0[COMMON] unsigned int 
  4824 ;;  ff2             4    4[COMMON] unsigned int 
  4825 ;; Auto vars:     Size  Location     Type
  4826 ;;		None
  4827 ;; Return value:  Size  Location     Type
  4828 ;;		None               void
  4829 ;; Registers used:
  4830 ;;		wreg, status,2, status,0
  4831 ;; Tracked objects:
  4832 ;;		On entry : 0/0
  4833 ;;		On exit  : 0/0
  4834 ;;		Unchanged: 0/0
  4835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4836 ;;      Params:         8       0       0       0
  4837 ;;      Locals:         0       0       0       0
  4838 ;;      Temps:          4       0       0       0
  4839 ;;      Totals:        12       0       0       0
  4840 ;;Total ram usage:       12 bytes
  4841 ;; Hardware stack levels used:    1
  4842 ;; This function calls:
  4843 ;;		Nothing
  4844 ;; This function is called by:
  4845 ;;		_ftoa
  4846 ;; This function uses a non-reentrant model
  4847 ;;
  4848                           
  4849                           
  4850                           ;psect for function ___flge
  4851  0000'                    ___flge:	
  4852                           
  4853                           ;incstack = 0
  4854                           ; Regs used in ___flge: [wreg+status,2+status,0]
  4855  0000' 3000               	movlw	0
  4856  0001' 0500'              	andwf	___flge@ff1,w
  4857  0002' 0088'              	movwf	??___flge
  4858  0003' 3000               	movlw	0
  4859  0004' 0501'              	andwf	___flge@ff1+1,w
  4860  0005' 0089'              	movwf	??___flge+1
  4861  0006' 3080               	movlw	128
  4862  0007' 0502'              	andwf	___flge@ff1+2,w
  4863  0008' 008A'              	movwf	??___flge+2
  4864  0009' 307F               	movlw	127
  4865  000A' 0503'              	andwf	___flge@ff1+3,w
  4866  000B' 008B'              	movwf	??___flge+3
  4867  000C' 080B'              	movf	??___flge+3,w
  4868  000D' 040A'              	iorwf	??___flge+2,w
  4869  000E' 0409'              	iorwf	??___flge+1,w
  4870  000F' 0408'              	iorwf	??___flge,w
  4871  0010' 1D03               	skipz
  4872  0011' 281A'              	goto	l453
  4873  0012' 3000               	movlw	0
  4874  0013' 0083'              	movwf	___flge@ff1+3
  4875  0014' 3000               	movlw	0
  4876  0015' 0082'              	movwf	___flge@ff1+2
  4877  0016' 3000               	movlw	0
  4878  0017' 0081'              	movwf	___flge@ff1+1
  4879  0018' 3000               	movlw	0
  4880  0019' 0080'              	movwf	___flge@ff1
  4881  001A'                    l453:	
  4882  001A' 3000               	movlw	0
  4883  001B' 0504'              	andwf	___flge@ff2,w
  4884  001C' 0088'              	movwf	??___flge
  4885  001D' 3000               	movlw	0
  4886  001E' 0505'              	andwf	___flge@ff2+1,w
  4887  001F' 0089'              	movwf	??___flge+1
  4888  0020' 3080               	movlw	128
  4889  0021' 0506'              	andwf	___flge@ff2+2,w
  4890  0022' 008A'              	movwf	??___flge+2
  4891  0023' 307F               	movlw	127
  4892  0024' 0507'              	andwf	___flge@ff2+3,w
  4893  0025' 008B'              	movwf	??___flge+3
  4894  0026' 080B'              	movf	??___flge+3,w
  4895  0027' 040A'              	iorwf	??___flge+2,w
  4896  0028' 0409'              	iorwf	??___flge+1,w
  4897  0029' 0408'              	iorwf	??___flge,w
  4898  002A' 1D03               	skipz
  4899  002B' 2834'              	goto	l2252
  4900  002C' 3000               	movlw	0
  4901  002D' 0087'              	movwf	___flge@ff2+3
  4902  002E' 3000               	movlw	0
  4903  002F' 0086'              	movwf	___flge@ff2+2
  4904  0030' 3000               	movlw	0
  4905  0031' 0085'              	movwf	___flge@ff2+1
  4906  0032' 3000               	movlw	0
  4907  0033' 0084'              	movwf	___flge@ff2
  4908  0034'                    l2252:	
  4909  0034' 1F83'              	btfss	___flge@ff1+3,7
  4910  0035' 285A'              	goto	l2256
  4911  0036' 3000               	movlw	0
  4912  0037' 0088'              	movwf	??___flge
  4913  0038' 3000               	movlw	0
  4914  0039' 0089'              	movwf	??___flge+1
  4915  003A' 3000               	movlw	0
  4916  003B' 008A'              	movwf	??___flge+2
  4917  003C' 3080               	movlw	128
  4918  003D' 008B'              	movwf	??___flge+3
  4919  003E' 0800'              	movf	___flge@ff1,w
  4920  003F' 0288'              	subwf	??___flge,f
  4921  0040' 0801'              	movf	___flge@ff1+1,w
  4922  0041' 1C03               	skipc
  4923  0042' 0F01'              	incfsz	___flge@ff1+1,w
  4924  0043' 2845'              	goto	u3261
  4925  0044' 2846'              	goto	u3262
  4926  0045'                    u3261:	
  4927  0045' 0289'              	subwf	??___flge+1,f
  4928  0046'                    u3262:	
  4929  0046' 0802'              	movf	___flge@ff1+2,w
  4930  0047' 1C03               	skipc
  4931  0048' 0F02'              	incfsz	___flge@ff1+2,w
  4932  0049' 284B'              	goto	u3263
  4933  004A' 284C'              	goto	u3264
  4934  004B'                    u3263:	
  4935  004B' 028A'              	subwf	??___flge+2,f
  4936  004C'                    u3264:	
  4937  004C' 0803'              	movf	___flge@ff1+3,w
  4938  004D' 1C03               	skipc
  4939  004E' 0F03'              	incfsz	___flge@ff1+3,w
  4940  004F' 2851'              	goto	u3265
  4941  0050' 2852'              	goto	u3266
  4942  0051'                    u3265:	
  4943  0051' 028B'              	subwf	??___flge+3,f
  4944  0052'                    u3266:	
  4945  0052' 080B'              	movf	??___flge+3,w
  4946  0053' 0083'              	movwf	___flge@ff1+3
  4947  0054' 080A'              	movf	??___flge+2,w
  4948  0055' 0082'              	movwf	___flge@ff1+2
  4949  0056' 0809'              	movf	??___flge+1,w
  4950  0057' 0081'              	movwf	___flge@ff1+1
  4951  0058' 0808'              	movf	??___flge,w
  4952  0059' 0080'              	movwf	___flge@ff1
  4953  005A'                    l2256:	
  4954  005A' 1F87'              	btfss	___flge@ff2+3,7
  4955  005B' 2880'              	goto	l456
  4956  005C' 3000               	movlw	0
  4957  005D' 0088'              	movwf	??___flge
  4958  005E' 3000               	movlw	0
  4959  005F' 0089'              	movwf	??___flge+1
  4960  0060' 3000               	movlw	0
  4961  0061' 008A'              	movwf	??___flge+2
  4962  0062' 3080               	movlw	128
  4963  0063' 008B'              	movwf	??___flge+3
  4964  0064' 0804'              	movf	___flge@ff2,w
  4965  0065' 0288'              	subwf	??___flge,f
  4966  0066' 0805'              	movf	___flge@ff2+1,w
  4967  0067' 1C03               	skipc
  4968  0068' 0F05'              	incfsz	___flge@ff2+1,w
  4969  0069' 286B'              	goto	u3281
  4970  006A' 286C'              	goto	u3282
  4971  006B'                    u3281:	
  4972  006B' 0289'              	subwf	??___flge+1,f
  4973  006C'                    u3282:	
  4974  006C' 0806'              	movf	___flge@ff2+2,w
  4975  006D' 1C03               	skipc
  4976  006E' 0F06'              	incfsz	___flge@ff2+2,w
  4977  006F' 2871'              	goto	u3283
  4978  0070' 2872'              	goto	u3284
  4979  0071'                    u3283:	
  4980  0071' 028A'              	subwf	??___flge+2,f
  4981  0072'                    u3284:	
  4982  0072' 0807'              	movf	___flge@ff2+3,w
  4983  0073' 1C03               	skipc
  4984  0074' 0F07'              	incfsz	___flge@ff2+3,w
  4985  0075' 2877'              	goto	u3285
  4986  0076' 2878'              	goto	u3286
  4987  0077'                    u3285:	
  4988  0077' 028B'              	subwf	??___flge+3,f
  4989  0078'                    u3286:	
  4990  0078' 080B'              	movf	??___flge+3,w
  4991  0079' 0087'              	movwf	___flge@ff2+3
  4992  007A' 080A'              	movf	??___flge+2,w
  4993  007B' 0086'              	movwf	___flge@ff2+2
  4994  007C' 0809'              	movf	??___flge+1,w
  4995  007D' 0085'              	movwf	___flge@ff2+1
  4996  007E' 0808'              	movf	??___flge,w
  4997  007F' 0084'              	movwf	___flge@ff2
  4998  0080'                    l456:	
  4999  0080' 3080               	movlw	128
  5000  0081' 0683'              	xorwf	___flge@ff1+3,f
  5001  0082' 3080               	movlw	128
  5002  0083' 0687'              	xorwf	___flge@ff2+3,f
  5003  0084' 0807'              	movf	___flge@ff2+3,w
  5004  0085' 0203'              	subwf	___flge@ff1+3,w
  5005  0086' 1D03               	skipz
  5006  0087' 0008               	return
  5007  0088' 0806'              	movf	___flge@ff2+2,w
  5008  0089' 0202'              	subwf	___flge@ff1+2,w
  5009  008A' 1D03               	skipz
  5010  008B' 0008               	return
  5011  008C' 0805'              	movf	___flge@ff2+1,w
  5012  008D' 0201'              	subwf	___flge@ff1+1,w
  5013  008E' 1D03               	skipz
  5014  008F' 0008               	return
  5015  0090' 0804'              	movf	___flge@ff2,w
  5016  0091' 0200'              	subwf	___flge@ff1,w
  5017  0092' 0008               	return
  5018  0093'                    __end_of___flge:	
  5019                           
  5020                           	psect	text19
  5021  0000'                    __ptext19:	
  5022 ;; *************** function _LCD_puts *****************
  5023 ;; Defined at:
  5024 ;;		line 136 in file "lcd.c"
  5025 ;; Parameters:    Size  Location     Type
  5026 ;;  a               1    wreg     PTR unsigned char 
  5027 ;;		 -> ftoa@buf(17), main@aux(3), 
  5028 ;; Auto vars:     Size  Location     Type
  5029 ;;  a               1   11[COMMON] PTR unsigned char 
  5030 ;;		 -> ftoa@buf(17), main@aux(3), 
  5031 ;;  i               2    9[COMMON] int 
  5032 ;; Return value:  Size  Location     Type
  5033 ;;                  1    wreg      void 
  5034 ;; Registers used:
  5035 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5036 ;; Tracked objects:
  5037 ;;		On entry : 0/0
  5038 ;;		On exit  : 0/0
  5039 ;;		Unchanged: 0/0
  5040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5041 ;;      Params:         0       0       0       0
  5042 ;;      Locals:         3       0       0       0
  5043 ;;      Temps:          1       0       0       0
  5044 ;;      Totals:         4       0       0       0
  5045 ;;Total ram usage:        4 bytes
  5046 ;; Hardware stack levels used:    1
  5047 ;; Hardware stack levels required when called:    2
  5048 ;; This function calls:
  5049 ;;		_LCD_putc
  5050 ;; This function is called by:
  5051 ;;		_main
  5052 ;; This function uses a non-reentrant model
  5053 ;;
  5054                           
  5055                           
  5056                           ;psect for function _LCD_puts
  5057  0000'                    _LCD_puts:	
  5058                           
  5059                           ;incstack = 0
  5060                           ; Regs used in _LCD_puts: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5061                           ;LCD_puts@a stored from wreg
  5062  0000' 008B'              	movwf	LCD_puts@a
  5063                           
  5064                           ;lcd.c: 138:     for ( int i = 0; a[i] != '\0'; ++i ) {
  5065  0001' 0189'              	clrf	LCD_puts@i
  5066  0002' 018A'              	clrf	LCD_puts@i+1
  5067  0003'                    l2604:	
  5068  0003' 0809'              	movf	LCD_puts@i,w
  5069  0004' 070B'              	addwf	LCD_puts@a,w
  5070  0005' 0088'              	movwf	??_LCD_puts
  5071  0006' 0808'              	movf	??_LCD_puts,w
  5072  0007' 0084               	movwf	4
  5073  0008' 1383               	bcf	3,7	;select IRP bank0
  5074  0009' 0800               	movf	0,w
  5075  000A' 1903               	btfsc	3,2
  5076  000B' 0008               	return
  5077                           
  5078                           ;lcd.c: 139:         LCD_putc(a[i]);
  5079  000C' 0809'              	movf	LCD_puts@i,w
  5080  000D' 070B'              	addwf	LCD_puts@a,w
  5081  000E' 0088'              	movwf	??_LCD_puts
  5082  000F' 0808'              	movf	??_LCD_puts,w
  5083  0010' 0084               	movwf	4
  5084  0011' 0800               	movf	0,w
  5085  0012' 2000'              	fcall	_LCD_putc
  5086                           
  5087                           ;lcd.c: 140:     }
  5088  0013' 3001               	movlw	1
  5089  0014' 0789'              	addwf	LCD_puts@i,f
  5090  0015' 1803               	skipnc
  5091  0016' 0A8A'              	incf	LCD_puts@i+1,f
  5092  0017' 3000               	movlw	0
  5093  0018' 078A'              	addwf	LCD_puts@i+1,f
  5094  0019' 2803'              	goto	l2604
  5095  001A'                    __end_of_LCD_puts:	
  5096                           
  5097                           	psect	text20
  5098  0000'                    __ptext20:	
  5099 ;; *************** function _LCD_putrs *****************
  5100 ;; Defined at:
  5101 ;;		line 144 in file "lcd.c"
  5102 ;; Parameters:    Size  Location     Type
  5103 ;;  a               1    wreg     PTR const unsigned char 
  5104 ;;		 -> STR_1(13), 
  5105 ;; Auto vars:     Size  Location     Type
  5106 ;;  a               1   10[COMMON] PTR const unsigned char 
  5107 ;;		 -> STR_1(13), 
  5108 ;;  i               2    8[COMMON] int 
  5109 ;; Return value:  Size  Location     Type
  5110 ;;                  1    wreg      void 
  5111 ;; Registers used:
  5112 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5113 ;; Tracked objects:
  5114 ;;		On entry : 0/0
  5115 ;;		On exit  : 0/0
  5116 ;;		Unchanged: 0/0
  5117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5118 ;;      Params:         0       0       0       0
  5119 ;;      Locals:         3       0       0       0
  5120 ;;      Temps:          0       0       0       0
  5121 ;;      Totals:         3       0       0       0
  5122 ;;Total ram usage:        3 bytes
  5123 ;; Hardware stack levels used:    1
  5124 ;; Hardware stack levels required when called:    2
  5125 ;; This function calls:
  5126 ;;		_LCD_putc
  5127 ;; This function is called by:
  5128 ;;		_main
  5129 ;; This function uses a non-reentrant model
  5130 ;;
  5131                           
  5132                           
  5133                           ;psect for function _LCD_putrs
  5134  0000'                    _LCD_putrs:	
  5135                           
  5136                           ;incstack = 0
  5137                           ; Regs used in _LCD_putrs: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5138                           ;LCD_putrs@a stored from wreg
  5139  0000' 008A'              	movwf	LCD_putrs@a
  5140                           
  5141                           ;lcd.c: 146:     for ( int i = 0; a[i] != '\0'; ++i ) {
  5142  0001' 0188'              	clrf	LCD_putrs@i
  5143  0002' 0189'              	clrf	LCD_putrs@i+1
  5144  0003'                    l2582:	
  5145  0003' 0808'              	movf	LCD_putrs@i,w
  5146  0004' 070A'              	addwf	LCD_putrs@a,w
  5147  0005' 0084               	movwf	4
  5148  0006' 2000'              	fcall	stringdir
  5149  0007' 3A00               	xorlw	0
  5150  0008' 1903               	btfsc	3,2
  5151  0009' 0008               	return
  5152                           
  5153                           ;lcd.c: 147:         LCD_putc(a[i]);
  5154  000A' 0808'              	movf	LCD_putrs@i,w
  5155  000B' 070A'              	addwf	LCD_putrs@a,w
  5156  000C' 0084               	movwf	4
  5157  000D' 2000'              	fcall	stringdir
  5158  000E' 2000'              	fcall	_LCD_putc
  5159                           
  5160                           ;lcd.c: 148:     }
  5161  000F' 3001               	movlw	1
  5162  0010' 0788'              	addwf	LCD_putrs@i,f
  5163  0011' 1803               	skipnc
  5164  0012' 0A89'              	incf	LCD_putrs@i+1,f
  5165  0013' 3000               	movlw	0
  5166  0014' 0789'              	addwf	LCD_putrs@i+1,f
  5167  0015' 2803'              	goto	l2582
  5168  0016'                    __end_of_LCD_putrs:	
  5169                           
  5170                           	psect	text21
  5171  0000'                    __ptext21:	
  5172 ;; *************** function _LCD_putc *****************
  5173 ;; Defined at:
  5174 ;;		line 119 in file "lcd.c"
  5175 ;; Parameters:    Size  Location     Type
  5176 ;;  c               1    wreg     unsigned char 
  5177 ;; Auto vars:     Size  Location     Type
  5178 ;;  c               1    7[COMMON] unsigned char 
  5179 ;; Return value:  Size  Location     Type
  5180 ;;                  1    wreg      void 
  5181 ;; Registers used:
  5182 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5183 ;; Tracked objects:
  5184 ;;		On entry : 0/0
  5185 ;;		On exit  : 0/0
  5186 ;;		Unchanged: 0/0
  5187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5188 ;;      Params:         0       0       0       0
  5189 ;;      Locals:         1       0       0       0
  5190 ;;      Temps:          3       0       0       0
  5191 ;;      Totals:         4       0       0       0
  5192 ;;Total ram usage:        4 bytes
  5193 ;; Hardware stack levels used:    1
  5194 ;; Hardware stack levels required when called:    1
  5195 ;; This function calls:
  5196 ;;		_LCD_Out
  5197 ;; This function is called by:
  5198 ;;		_LCD_puts
  5199 ;;		_LCD_putrs
  5200 ;; This function uses a non-reentrant model
  5201 ;;
  5202                           
  5203                           
  5204                           ;psect for function _LCD_putc
  5205  0000'                    _LCD_putc:	
  5206                           
  5207                           ;incstack = 0
  5208                           ; Regs used in _LCD_putc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5209                           ;LCD_putc@c stored from wreg
  5210  0000' 0087'              	movwf	LCD_putc@c
  5211                           
  5212                           ;lcd.c: 121:    *(lcd.PORT) |= 1 << lcd.RS;
  5213  0001' 3001               	movlw	1
  5214  0002' 0084'              	movwf	??_LCD_putc
  5215  0003' 1283               	bcf	3,5	;RP0=0, select bank0
  5216  0004' 1303               	bcf	3,6	;RP1=0, select bank0
  5217  0005' 0802'              	movf	_lcd+2,w
  5218  0006' 3907               	andlw	7
  5219  0007' 3E01               	addlw	1
  5220  0008' 280B'              	goto	u2984
  5221  0009'                    u2985:	
  5222  0009' 1003               	clrc
  5223  000A' 0D84'              	rlf	??_LCD_putc,f
  5224  000B'                    u2984:	
  5225  000B' 3EFF               	addlw	-1
  5226  000C' 1D03               	skipz
  5227  000D' 2809'              	goto	u2985
  5228  000E' 0804'              	movf	??_LCD_putc,w
  5229  000F' 0085'              	movwf	??_LCD_putc+1
  5230  0010' 0800'              	movf	_lcd,w
  5231  0011' 0084               	movwf	4
  5232  0012' 1783               	bsf	3,7
  5233  0013' 1C01'              	btfss	_lcd+1,0
  5234  0014' 1383               	bcf	3,7
  5235  0015' 0805'              	movf	??_LCD_putc+1,w
  5236  0016' 0480               	iorwf	0,f
  5237                           
  5238                           ;lcd.c: 122:     LCD_Out((c & 0xF0) >> 4);
  5239  0017' 0807'              	movf	LCD_putc@c,w
  5240  0018' 0084'              	movwf	??_LCD_putc
  5241  0019' 3004               	movlw	4
  5242  001A'                    u2995:	
  5243  001A' 1003               	clrc
  5244  001B' 0C84'              	rrf	??_LCD_putc,f
  5245  001C' 3EFF               	addlw	-1
  5246  001D' 1D03               	skipz
  5247  001E' 281A'              	goto	u2995
  5248  001F' 0804'              	movf	??_LCD_putc,w
  5249  0020' 390F               	andlw	15
  5250  0021' 2000'              	fcall	_LCD_Out
  5251                           
  5252                           ;lcd.c: 124:     *(lcd.PORT) |= 1 << lcd.EN;
  5253  0022' 3001               	movlw	1
  5254  0023' 0084'              	movwf	??_LCD_putc
  5255  0024' 1283               	bcf	3,5	;RP0=0, select bank0
  5256  0025' 1303               	bcf	3,6	;RP1=0, select bank0
  5257  0026' 0C02'              	rrf	_lcd+2,w
  5258  0027' 0085'              	movwf	??_LCD_putc+1
  5259  0028' 0C85'              	rrf	??_LCD_putc+1,f
  5260  0029' 0C05'              	rrf	??_LCD_putc+1,w
  5261  002A' 3907               	andlw	7
  5262  002B' 3E01               	addlw	1
  5263  002C' 282F'              	goto	u3004
  5264  002D'                    u3005:	
  5265  002D' 1003               	clrc
  5266  002E' 0D84'              	rlf	??_LCD_putc,f
  5267  002F'                    u3004:	
  5268  002F' 3EFF               	addlw	-1
  5269  0030' 1D03               	skipz
  5270  0031' 282D'              	goto	u3005
  5271  0032' 0804'              	movf	??_LCD_putc,w
  5272  0033' 0086'              	movwf	??_LCD_putc+2
  5273  0034' 0800'              	movf	_lcd,w
  5274  0035' 0084               	movwf	4
  5275  0036' 1783               	bsf	3,7
  5276  0037' 1C01'              	btfss	_lcd+1,0
  5277  0038' 1383               	bcf	3,7
  5278  0039' 0806'              	movf	??_LCD_putc+2,w
  5279  003A' 0480               	iorwf	0,f
  5280                           
  5281                           ;lcd.c: 125:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  5282  003B' 301A               	movlw	26
  5283  003C' 0084'              	movwf	??_LCD_putc
  5284  003D'                    u4047:	
  5285  003D' 0B84'              	decfsz	??_LCD_putc,f
  5286  003E' 283D'              	goto	u4047
  5287  003F' 0000               	nop
  5288                           
  5289                           ;lcd.c: 126:     *(lcd.PORT) &= ~(1 << lcd.EN);
  5290  0040' 3001               	movlw	1
  5291  0041' 0084'              	movwf	??_LCD_putc
  5292  0042' 1283               	bcf	3,5	;RP0=0, select bank0
  5293  0043' 1303               	bcf	3,6	;RP1=0, select bank0
  5294  0044' 0C02'              	rrf	_lcd+2,w
  5295  0045' 0085'              	movwf	??_LCD_putc+1
  5296  0046' 0C85'              	rrf	??_LCD_putc+1,f
  5297  0047' 0C05'              	rrf	??_LCD_putc+1,w
  5298  0048' 3907               	andlw	7
  5299  0049' 3E01               	addlw	1
  5300  004A' 284D'              	goto	u3014
  5301  004B'                    u3015:	
  5302  004B' 1003               	clrc
  5303  004C' 0D84'              	rlf	??_LCD_putc,f
  5304  004D'                    u3014:	
  5305  004D' 3EFF               	addlw	-1
  5306  004E' 1D03               	skipz
  5307  004F' 284B'              	goto	u3015
  5308  0050' 0804'              	movf	??_LCD_putc,w
  5309  0051' 3AFF               	xorlw	255
  5310  0052' 0086'              	movwf	??_LCD_putc+2
  5311  0053' 0800'              	movf	_lcd,w
  5312  0054' 0084               	movwf	4
  5313  0055' 1783               	bsf	3,7
  5314  0056' 1C01'              	btfss	_lcd+1,0
  5315  0057' 1383               	bcf	3,7
  5316  0058' 0806'              	movf	??_LCD_putc+2,w
  5317  0059' 0580               	andwf	0,f
  5318                           
  5319                           ;lcd.c: 128:     LCD_Out(c & 0x0F);
  5320  005A' 0807'              	movf	LCD_putc@c,w
  5321  005B' 390F               	andlw	15
  5322  005C' 2000'              	fcall	_LCD_Out
  5323                           
  5324                           ;lcd.c: 130:     *(lcd.PORT) |= 1 << lcd.EN;
  5325  005D' 3001               	movlw	1
  5326  005E' 0084'              	movwf	??_LCD_putc
  5327  005F' 1283               	bcf	3,5	;RP0=0, select bank0
  5328  0060' 1303               	bcf	3,6	;RP1=0, select bank0
  5329  0061' 0C02'              	rrf	_lcd+2,w
  5330  0062' 0085'              	movwf	??_LCD_putc+1
  5331  0063' 0C85'              	rrf	??_LCD_putc+1,f
  5332  0064' 0C05'              	rrf	??_LCD_putc+1,w
  5333  0065' 3907               	andlw	7
  5334  0066' 3E01               	addlw	1
  5335  0067' 286A'              	goto	u3024
  5336  0068'                    u3025:	
  5337  0068' 1003               	clrc
  5338  0069' 0D84'              	rlf	??_LCD_putc,f
  5339  006A'                    u3024:	
  5340  006A' 3EFF               	addlw	-1
  5341  006B' 1D03               	skipz
  5342  006C' 2868'              	goto	u3025
  5343  006D' 0804'              	movf	??_LCD_putc,w
  5344  006E' 0086'              	movwf	??_LCD_putc+2
  5345  006F' 0800'              	movf	_lcd,w
  5346  0070' 0084               	movwf	4
  5347  0071' 1783               	bsf	3,7
  5348  0072' 1C01'              	btfss	_lcd+1,0
  5349  0073' 1383               	bcf	3,7
  5350  0074' 0806'              	movf	??_LCD_putc+2,w
  5351  0075' 0480               	iorwf	0,f
  5352                           
  5353                           ;lcd.c: 131:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  5354  0076' 301A               	movlw	26
  5355  0077' 0084'              	movwf	??_LCD_putc
  5356  0078'                    u4057:	
  5357  0078' 0B84'              	decfsz	??_LCD_putc,f
  5358  0079' 2878'              	goto	u4057
  5359  007A' 0000               	nop
  5360                           
  5361                           ;lcd.c: 132:     *(lcd.PORT) &= ~(1 << lcd.EN);
  5362  007B' 3001               	movlw	1
  5363  007C' 0084'              	movwf	??_LCD_putc
  5364  007D' 1283               	bcf	3,5	;RP0=0, select bank0
  5365  007E' 1303               	bcf	3,6	;RP1=0, select bank0
  5366  007F' 0C02'              	rrf	_lcd+2,w
  5367  0080' 0085'              	movwf	??_LCD_putc+1
  5368  0081' 0C85'              	rrf	??_LCD_putc+1,f
  5369  0082' 0C05'              	rrf	??_LCD_putc+1,w
  5370  0083' 3907               	andlw	7
  5371  0084' 3E01               	addlw	1
  5372  0085' 2888'              	goto	u3034
  5373  0086'                    u3035:	
  5374  0086' 1003               	clrc
  5375  0087' 0D84'              	rlf	??_LCD_putc,f
  5376  0088'                    u3034:	
  5377  0088' 3EFF               	addlw	-1
  5378  0089' 1D03               	skipz
  5379  008A' 2886'              	goto	u3035
  5380  008B' 0804'              	movf	??_LCD_putc,w
  5381  008C' 3AFF               	xorlw	255
  5382  008D' 0086'              	movwf	??_LCD_putc+2
  5383  008E' 0800'              	movf	_lcd,w
  5384  008F' 0084               	movwf	4
  5385  0090' 1783               	bsf	3,7
  5386  0091' 1C01'              	btfss	_lcd+1,0
  5387  0092' 1383               	bcf	3,7
  5388  0093' 0806'              	movf	??_LCD_putc+2,w
  5389  0094' 0580               	andwf	0,f
  5390  0095' 0008               	return
  5391  0096'                    __end_of_LCD_putc:	
  5392                           
  5393                           	psect	text22
  5394  0000'                    __ptext22:	
  5395 ;; *************** function _LCD_Init *****************
  5396 ;; Defined at:
  5397 ;;		line 61 in file "lcd.c"
  5398 ;; Parameters:    Size  Location     Type
  5399 ;;  display         5    8[COMMON] struct .
  5400 ;; Auto vars:     Size  Location     Type
  5401 ;;  cmd             1   13[COMMON] unsigned char 
  5402 ;; Return value:  Size  Location     Type
  5403 ;;                  1    wreg      _Bool 
  5404 ;; Registers used:
  5405 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5406 ;; Tracked objects:
  5407 ;;		On entry : 0/0
  5408 ;;		On exit  : 0/0
  5409 ;;		Unchanged: 0/0
  5410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5411 ;;      Params:         5       0       0       0
  5412 ;;      Locals:         1       0       0       0
  5413 ;;      Temps:          0       2       0       0
  5414 ;;      Totals:         6       2       0       0
  5415 ;;Total ram usage:        8 bytes
  5416 ;; Hardware stack levels used:    1
  5417 ;; Hardware stack levels required when called:    2
  5418 ;; This function calls:
  5419 ;;		_LCD_Write
  5420 ;; This function is called by:
  5421 ;;		_main
  5422 ;; This function uses a non-reentrant model
  5423 ;;
  5424                           
  5425                           
  5426                           ;psect for function _LCD_Init
  5427  0000'                    _LCD_Init:	
  5428                           
  5429                           ;lcd.c: 63:     lcd = display;
  5430                           
  5431                           ;incstack = 0
  5432                           ; Regs used in _LCD_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5433  0000' 3000'              	movlw	_lcd& (0+255)
  5434  0001' 0084               	movwf	4
  5435  0002' 0808'              	movf	LCD_Init@display,w
  5436  0003' 1383               	bcf	3,7	;select IRP bank0
  5437  0004' 0080               	movwf	0
  5438  0005' 0A84               	incf	4,f
  5439  0006' 0809'              	movf	LCD_Init@display+1,w
  5440  0007' 0080               	movwf	0
  5441  0008' 0A84               	incf	4,f
  5442  0009' 080A'              	movf	LCD_Init@display+2,w
  5443  000A' 0080               	movwf	0
  5444  000B' 0A84               	incf	4,f
  5445  000C' 080B'              	movf	LCD_Init@display+3,w
  5446  000D' 0080               	movwf	0
  5447  000E' 0A84               	incf	4,f
  5448  000F' 080C'              	movf	LCD_Init@display+4,w
  5449  0010' 0080               	movwf	0
  5450                           
  5451                           ;lcd.c: 72:     if ( lcd.PORT == &PORTA ) {
  5452  0011' 3000               	movlw	0
  5453  0012' 1283               	bcf	3,5	;RP0=0, select bank0
  5454  0013' 1303               	bcf	3,6	;RP1=0, select bank0
  5455  0014' 0601'              	xorwf	_lcd+1,w
  5456  0015' 1D03               	skipz
  5457  0016' 2819'              	goto	u3955
  5458  0017' 3005               	movlw	5
  5459  0018' 0600'              	xorwf	_lcd,w
  5460  0019'                    u3955:	
  5461  0019' 1D03               	skipz
  5462  001A' 281F'              	goto	l2536
  5463                           
  5464                           ;lcd.c: 73:         TRISA = 0x00;
  5465  001B' 1683               	bsf	3,5	;RP0=1, select bank1
  5466  001C' 1303               	bcf	3,6	;RP1=0, select bank1
  5467  001D' 0185               	clrf	5	;volatile
  5468                           
  5469                           ;lcd.c: 74:     }
  5470  001E' 2832'              	goto	l2544
  5471  001F'                    l2536:	
  5472  001F' 3000               	movlw	0
  5473  0020' 0601'              	xorwf	_lcd+1,w
  5474  0021' 1D03               	skipz
  5475  0022' 2825'              	goto	u3965
  5476  0023' 3006               	movlw	6
  5477  0024' 0600'              	xorwf	_lcd,w
  5478  0025'                    u3965:	
  5479  0025' 1903               	btfsc	3,2
  5480  0026' 282F'              	goto	l2538
  5481                           
  5482                           ;lcd.c: 77:     }
  5483  0027' 3000               	movlw	0
  5484  0028' 0601'              	xorwf	_lcd+1,w
  5485  0029' 1D03               	skipz
  5486  002A' 282D'              	goto	u3975
  5487  002B' 3006               	movlw	6
  5488  002C' 0600'              	xorwf	_lcd,w
  5489  002D'                    u3975:	
  5490  002D' 1D03               	skipz
  5491  002E' 0008               	return
  5492  002F'                    l2538:	
  5493                           
  5494                           ;lcd.c: 76:         TRISB = 0x00;
  5495  002F' 1683               	bsf	3,5	;RP0=1, select bank1
  5496  0030' 1303               	bcf	3,6	;RP1=0, select bank1
  5497  0031' 0186               	clrf	6	;volatile
  5498  0032'                    l2544:	
  5499                           
  5500                           ;lcd.c: 94:     _delay((unsigned long)((20)*(8000000/4000.0)));
  5501  0032' 3034               	movlw	52
  5502  0033' 1283               	bcf	3,5	;RP0=0, select bank0
  5503  0034' 1303               	bcf	3,6	;RP1=0, select bank0
  5504  0035' 0081'              	movwf	??_LCD_Init+1
  5505  0036' 30F1               	movlw	241
  5506  0037' 0080'              	movwf	??_LCD_Init
  5507  0038'                    u4067:	
  5508  0038' 0B80'              	decfsz	??_LCD_Init,f
  5509  0039' 2838'              	goto	u4067
  5510  003A' 0B81'              	decfsz	??_LCD_Init+1,f
  5511  003B' 2838'              	goto	u4067
  5512  003C' 0000               	nop
  5513                           
  5514                           ;lcd.c: 97:     LCD_Write(0x03);
  5515  003D' 3003               	movlw	3
  5516  003E' 2000'              	fcall	_LCD_Write
  5517                           
  5518                           ;lcd.c: 98:     _delay((unsigned long)((5)*(8000000/4000.0)));
  5519  003F' 300D               	movlw	13
  5520  0040' 1283               	bcf	3,5	;RP0=0, select bank0
  5521  0041' 1303               	bcf	3,6	;RP1=0, select bank0
  5522  0042' 0081'              	movwf	??_LCD_Init+1
  5523  0043' 30FB               	movlw	251
  5524  0044' 0080'              	movwf	??_LCD_Init
  5525  0045'                    u4077:	
  5526  0045' 0B80'              	decfsz	??_LCD_Init,f
  5527  0046' 2845'              	goto	u4077
  5528  0047' 0B81'              	decfsz	??_LCD_Init+1,f
  5529  0048' 2845'              	goto	u4077
  5530  0049' 0000               	nop
  5531                           
  5532                           ;lcd.c: 99:     LCD_Write(0x03);
  5533  004A' 3003               	movlw	3
  5534  004B' 2000'              	fcall	_LCD_Write
  5535                           
  5536                           ;lcd.c: 100:     _delay((unsigned long)((16)*(8000000/4000.0)));
  5537  004C' 302A               	movlw	42
  5538  004D' 1283               	bcf	3,5	;RP0=0, select bank0
  5539  004E' 1303               	bcf	3,6	;RP1=0, select bank0
  5540  004F' 0081'              	movwf	??_LCD_Init+1
  5541  0050' 308D               	movlw	141
  5542  0051' 0080'              	movwf	??_LCD_Init
  5543  0052'                    u4087:	
  5544  0052' 0B80'              	decfsz	??_LCD_Init,f
  5545  0053' 2852'              	goto	u4087
  5546  0054' 0B81'              	decfsz	??_LCD_Init+1,f
  5547  0055' 2852'              	goto	u4087
  5548  0056' 0000               	nop
  5549                           
  5550                           ;lcd.c: 101:     LCD_Write(0x03);
  5551  0057' 3003               	movlw	3
  5552  0058' 2000'              	fcall	_LCD_Write
  5553                           
  5554                           ;lcd.c: 104:     LCD_Write(0x02);
  5555  0059' 3002               	movlw	2
  5556  005A' 2000'              	fcall	_LCD_Write
  5557  005B' 3002               	movlw	2
  5558  005C' 2000'              	fcall	_LCD_Write
  5559  005D' 3008               	movlw	8
  5560  005E' 2000'              	fcall	_LCD_Write
  5561  005F' 3000               	movlw	0
  5562  0060' 2000'              	fcall	_LCD_Write
  5563  0061' 3006               	movlw	6
  5564  0062' 2000'              	fcall	_LCD_Write
  5565  0063' 3008               	movlw	8
  5566  0064' 1283               	bcf	3,5	;RP0=0, select bank0
  5567  0065' 1303               	bcf	3,6	;RP1=0, select bank0
  5568  0066' 0080'              	movwf	??_LCD_Init
  5569  0067' 0800'              	movf	??_LCD_Init,w
  5570  0068' 008D'              	movwf	LCD_Init@cmd
  5571  0069' 150D'              	bsf	LCD_Init@cmd,2
  5572  006A' 080D'              	movf	LCD_Init@cmd,w
  5573  006B' 0080'              	movwf	??_LCD_Init
  5574  006C' 3004               	movlw	4
  5575  006D'                    u3985:	
  5576  006D' 1003               	clrc
  5577  006E' 0C80'              	rrf	??_LCD_Init,f
  5578  006F' 3EFF               	addlw	-1
  5579  0070' 1D03               	skipz
  5580  0071' 286D'              	goto	u3985
  5581  0072' 0800'              	movf	??_LCD_Init,w
  5582  0073' 390F               	andlw	15
  5583  0074' 2000'              	fcall	_LCD_Write
  5584  0075' 080D'              	movf	LCD_Init@cmd,w
  5585  0076' 390F               	andlw	15
  5586  0077' 2000'              	fcall	_LCD_Write
  5587                           
  5588                           ;lcd.c: 114:     do { LCD_Write( (0x01 & 0xF0) >> 4 ); LCD_Write( 0x01 & 0x0F); } while 
      +                          ( 0 );
  5589  0078' 3000               	movlw	0
  5590  0079' 2000'              	fcall	_LCD_Write
  5591  007A' 3001               	movlw	1
  5592  007B' 2000'              	fcall	_LCD_Write
  5593  007C' 0008               	return
  5594  007D'                    __end_of_LCD_Init:	
  5595                           
  5596                           	psect	text23
  5597  0000'                    __ptext23:	
  5598 ;; *************** function _LCD_Write *****************
  5599 ;; Defined at:
  5600 ;;		line 50 in file "lcd.c"
  5601 ;; Parameters:    Size  Location     Type
  5602 ;;  c               1    wreg     unsigned char 
  5603 ;; Auto vars:     Size  Location     Type
  5604 ;;  c               1    7[COMMON] unsigned char 
  5605 ;; Return value:  Size  Location     Type
  5606 ;;                  1    wreg      void 
  5607 ;; Registers used:
  5608 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5609 ;; Tracked objects:
  5610 ;;		On entry : 0/0
  5611 ;;		On exit  : 0/0
  5612 ;;		Unchanged: 0/0
  5613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5614 ;;      Params:         0       0       0       0
  5615 ;;      Locals:         1       0       0       0
  5616 ;;      Temps:          3       0       0       0
  5617 ;;      Totals:         4       0       0       0
  5618 ;;Total ram usage:        4 bytes
  5619 ;; Hardware stack levels used:    1
  5620 ;; Hardware stack levels required when called:    1
  5621 ;; This function calls:
  5622 ;;		_LCD_Out
  5623 ;; This function is called by:
  5624 ;;		_main
  5625 ;;		_LCD_Init
  5626 ;; This function uses a non-reentrant model
  5627 ;;
  5628                           
  5629                           
  5630                           ;psect for function _LCD_Write
  5631  0000'                    _LCD_Write:	
  5632                           
  5633                           ;incstack = 0
  5634                           ; Regs used in _LCD_Write: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5635                           ;LCD_Write@c stored from wreg
  5636  0000' 0087'              	movwf	LCD_Write@c
  5637                           
  5638                           ;lcd.c: 52:     *(lcd.PORT) &= ~(1 << lcd.RS);
  5639  0001' 3001               	movlw	1
  5640  0002' 0084'              	movwf	??_LCD_Write
  5641  0003' 1283               	bcf	3,5	;RP0=0, select bank0
  5642  0004' 1303               	bcf	3,6	;RP1=0, select bank0
  5643  0005' 0802'              	movf	_lcd+2,w
  5644  0006' 3907               	andlw	7
  5645  0007' 3E01               	addlw	1
  5646  0008' 280B'              	goto	u2954
  5647  0009'                    u2955:	
  5648  0009' 1003               	clrc
  5649  000A' 0D84'              	rlf	??_LCD_Write,f
  5650  000B'                    u2954:	
  5651  000B' 3EFF               	addlw	-1
  5652  000C' 1D03               	skipz
  5653  000D' 2809'              	goto	u2955
  5654  000E' 0804'              	movf	??_LCD_Write,w
  5655  000F' 3AFF               	xorlw	255
  5656  0010' 0085'              	movwf	??_LCD_Write+1
  5657  0011' 0800'              	movf	_lcd,w
  5658  0012' 0084               	movwf	4
  5659  0013' 1783               	bsf	3,7
  5660  0014' 1C01'              	btfss	_lcd+1,0
  5661  0015' 1383               	bcf	3,7
  5662  0016' 0805'              	movf	??_LCD_Write+1,w
  5663  0017' 0580               	andwf	0,f
  5664                           
  5665                           ;lcd.c: 53:     LCD_Out(c);
  5666  0018' 0807'              	movf	LCD_Write@c,w
  5667  0019' 2000'              	fcall	_LCD_Out
  5668                           
  5669                           ;lcd.c: 55:     *(lcd.PORT) |= 1 << lcd.EN;
  5670  001A' 3001               	movlw	1
  5671  001B' 0084'              	movwf	??_LCD_Write
  5672  001C' 1283               	bcf	3,5	;RP0=0, select bank0
  5673  001D' 1303               	bcf	3,6	;RP1=0, select bank0
  5674  001E' 0C02'              	rrf	_lcd+2,w
  5675  001F' 0085'              	movwf	??_LCD_Write+1
  5676  0020' 0C85'              	rrf	??_LCD_Write+1,f
  5677  0021' 0C05'              	rrf	??_LCD_Write+1,w
  5678  0022' 3907               	andlw	7
  5679  0023' 3E01               	addlw	1
  5680  0024' 2827'              	goto	u2964
  5681  0025'                    u2965:	
  5682  0025' 1003               	clrc
  5683  0026' 0D84'              	rlf	??_LCD_Write,f
  5684  0027'                    u2964:	
  5685  0027' 3EFF               	addlw	-1
  5686  0028' 1D03               	skipz
  5687  0029' 2825'              	goto	u2965
  5688  002A' 0804'              	movf	??_LCD_Write,w
  5689  002B' 0086'              	movwf	??_LCD_Write+2
  5690  002C' 0800'              	movf	_lcd,w
  5691  002D' 0084               	movwf	4
  5692  002E' 1783               	bsf	3,7
  5693  002F' 1C01'              	btfss	_lcd+1,0
  5694  0030' 1383               	bcf	3,7
  5695  0031' 0806'              	movf	??_LCD_Write+2,w
  5696  0032' 0480               	iorwf	0,f
  5697                           
  5698                           ;lcd.c: 56:     _delay((unsigned long)((4)*(8000000/4000.0)));
  5699  0033' 300B               	movlw	11
  5700  0034' 0085'              	movwf	??_LCD_Write+1
  5701  0035' 3062               	movlw	98
  5702  0036' 0084'              	movwf	??_LCD_Write
  5703  0037'                    u4097:	
  5704  0037' 0B84'              	decfsz	??_LCD_Write,f
  5705  0038' 2837'              	goto	u4097
  5706  0039' 0B85'              	decfsz	??_LCD_Write+1,f
  5707  003A' 2837'              	goto	u4097
  5708  003B' 0000               	nop
  5709                           
  5710                           ;lcd.c: 57:     *(lcd.PORT) &= ~(1 << lcd.EN);
  5711  003C' 3001               	movlw	1
  5712  003D' 0084'              	movwf	??_LCD_Write
  5713  003E' 1283               	bcf	3,5	;RP0=0, select bank0
  5714  003F' 1303               	bcf	3,6	;RP1=0, select bank0
  5715  0040' 0C02'              	rrf	_lcd+2,w
  5716  0041' 0085'              	movwf	??_LCD_Write+1
  5717  0042' 0C85'              	rrf	??_LCD_Write+1,f
  5718  0043' 0C05'              	rrf	??_LCD_Write+1,w
  5719  0044' 3907               	andlw	7
  5720  0045' 3E01               	addlw	1
  5721  0046' 2849'              	goto	u2974
  5722  0047'                    u2975:	
  5723  0047' 1003               	clrc
  5724  0048' 0D84'              	rlf	??_LCD_Write,f
  5725  0049'                    u2974:	
  5726  0049' 3EFF               	addlw	-1
  5727  004A' 1D03               	skipz
  5728  004B' 2847'              	goto	u2975
  5729  004C' 0804'              	movf	??_LCD_Write,w
  5730  004D' 3AFF               	xorlw	255
  5731  004E' 0086'              	movwf	??_LCD_Write+2
  5732  004F' 0800'              	movf	_lcd,w
  5733  0050' 0084               	movwf	4
  5734  0051' 1783               	bsf	3,7
  5735  0052' 1C01'              	btfss	_lcd+1,0
  5736  0053' 1383               	bcf	3,7
  5737  0054' 0806'              	movf	??_LCD_Write+2,w
  5738  0055' 0580               	andwf	0,f
  5739  0056' 0008               	return
  5740  0057'                    __end_of_LCD_Write:	
  5741                           
  5742                           	psect	text24
  5743  0000'                    __ptext24:	
  5744 ;; *************** function _LCD_Out *****************
  5745 ;; Defined at:
  5746 ;;		line 18 in file "lcd.c"
  5747 ;; Parameters:    Size  Location     Type
  5748 ;;  c               1    wreg     unsigned char 
  5749 ;; Auto vars:     Size  Location     Type
  5750 ;;  c               1    3[COMMON] unsigned char 
  5751 ;; Return value:  Size  Location     Type
  5752 ;;                  1    wreg      void 
  5753 ;; Registers used:
  5754 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5755 ;; Tracked objects:
  5756 ;;		On entry : 0/0
  5757 ;;		On exit  : 0/0
  5758 ;;		Unchanged: 0/0
  5759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5760 ;;      Params:         0       0       0       0
  5761 ;;      Locals:         1       0       0       0
  5762 ;;      Temps:          3       0       0       0
  5763 ;;      Totals:         4       0       0       0
  5764 ;;Total ram usage:        4 bytes
  5765 ;; Hardware stack levels used:    1
  5766 ;; This function calls:
  5767 ;;		Nothing
  5768 ;; This function is called by:
  5769 ;;		_LCD_Write
  5770 ;;		_LCD_putc
  5771 ;; This function uses a non-reentrant model
  5772 ;;
  5773                           
  5774                           
  5775                           ;psect for function _LCD_Out
  5776  0000'                    _LCD_Out:	
  5777                           
  5778                           ;incstack = 0
  5779                           ; Regs used in _LCD_Out: [wreg-fsr0h+status,2+status,0]
  5780                           ;LCD_Out@c stored from wreg
  5781  0000' 0083'              	movwf	LCD_Out@c
  5782                           
  5783                           ;lcd.c: 20:     if ( c & 1 ){
  5784  0001' 1C03'              	btfss	LCD_Out@c,0
  5785  0002' 281A'              	goto	l1768
  5786                           
  5787                           ;lcd.c: 21:         *(lcd.PORT) |= 1 << lcd.D4;
  5788  0003' 3001               	movlw	1
  5789  0004' 0080'              	movwf	??_LCD_Out
  5790  0005' 1283               	bcf	3,5	;RP0=0, select bank0
  5791  0006' 1303               	bcf	3,6	;RP1=0, select bank0
  5792  0007' 0803'              	movf	_lcd+3,w
  5793  0008' 3907               	andlw	7
  5794  0009' 3E01               	addlw	1
  5795  000A' 280D'              	goto	u2034
  5796  000B'                    u2035:	
  5797  000B' 1003               	clrc
  5798  000C' 0D80'              	rlf	??_LCD_Out,f
  5799  000D'                    u2034:	
  5800  000D' 3EFF               	addlw	-1
  5801  000E' 1D03               	skipz
  5802  000F' 280B'              	goto	u2035
  5803  0010' 0800'              	movf	??_LCD_Out,w
  5804  0011' 0081'              	movwf	??_LCD_Out+1
  5805  0012' 0800'              	movf	_lcd,w
  5806  0013' 0084               	movwf	4
  5807  0014' 1783               	bsf	3,7
  5808  0015' 1C01'              	btfss	_lcd+1,0
  5809  0016' 1383               	bcf	3,7
  5810  0017' 0801'              	movf	??_LCD_Out+1,w
  5811  0018' 0480               	iorwf	0,f
  5812                           
  5813                           ;lcd.c: 22:     }
  5814  0019' 2831'              	goto	l1770
  5815  001A'                    l1768:	
  5816                           
  5817                           ;lcd.c: 24:          *(lcd.PORT) &= ~(1 << lcd.D4);
  5818  001A' 3001               	movlw	1
  5819  001B' 0080'              	movwf	??_LCD_Out
  5820  001C' 1283               	bcf	3,5	;RP0=0, select bank0
  5821  001D' 1303               	bcf	3,6	;RP1=0, select bank0
  5822  001E' 0803'              	movf	_lcd+3,w
  5823  001F' 3907               	andlw	7
  5824  0020' 3E01               	addlw	1
  5825  0021' 2824'              	goto	u2044
  5826  0022'                    u2045:	
  5827  0022' 1003               	clrc
  5828  0023' 0D80'              	rlf	??_LCD_Out,f
  5829  0024'                    u2044:	
  5830  0024' 3EFF               	addlw	-1
  5831  0025' 1D03               	skipz
  5832  0026' 2822'              	goto	u2045
  5833  0027' 0800'              	movf	??_LCD_Out,w
  5834  0028' 3AFF               	xorlw	255
  5835  0029' 0081'              	movwf	??_LCD_Out+1
  5836  002A' 0800'              	movf	_lcd,w
  5837  002B' 0084               	movwf	4
  5838  002C' 1783               	bsf	3,7
  5839  002D' 1C01'              	btfss	_lcd+1,0
  5840  002E' 1383               	bcf	3,7
  5841  002F' 0801'              	movf	??_LCD_Out+1,w
  5842  0030' 0580               	andwf	0,f
  5843  0031'                    l1770:	
  5844                           
  5845                           ;lcd.c: 27:     if ( c & 2 ) {
  5846  0031' 1C83'              	btfss	LCD_Out@c,1
  5847  0032' 284B'              	goto	l1774
  5848                           
  5849                           ;lcd.c: 28:         *(lcd.PORT) |= 1 << lcd.D5;
  5850  0033' 3001               	movlw	1
  5851  0034' 0080'              	movwf	??_LCD_Out
  5852  0035' 0C03'              	rrf	_lcd+3,w
  5853  0036' 0081'              	movwf	??_LCD_Out+1
  5854  0037' 0C81'              	rrf	??_LCD_Out+1,f
  5855  0038' 0C01'              	rrf	??_LCD_Out+1,w
  5856  0039' 3907               	andlw	7
  5857  003A' 3E01               	addlw	1
  5858  003B' 283E'              	goto	u2064
  5859  003C'                    u2065:	
  5860  003C' 1003               	clrc
  5861  003D' 0D80'              	rlf	??_LCD_Out,f
  5862  003E'                    u2064:	
  5863  003E' 3EFF               	addlw	-1
  5864  003F' 1D03               	skipz
  5865  0040' 283C'              	goto	u2065
  5866  0041' 0800'              	movf	??_LCD_Out,w
  5867  0042' 0082'              	movwf	??_LCD_Out+2
  5868  0043' 0800'              	movf	_lcd,w
  5869  0044' 0084               	movwf	4
  5870  0045' 1783               	bsf	3,7
  5871  0046' 1C01'              	btfss	_lcd+1,0
  5872  0047' 1383               	bcf	3,7
  5873  0048' 0802'              	movf	??_LCD_Out+2,w
  5874  0049' 0480               	iorwf	0,f
  5875                           
  5876                           ;lcd.c: 29:     }
  5877  004A' 2863'              	goto	l1776
  5878  004B'                    l1774:	
  5879                           
  5880                           ;lcd.c: 31:         *(lcd.PORT) &= ~(1 << lcd.D5);
  5881  004B' 3001               	movlw	1
  5882  004C' 0080'              	movwf	??_LCD_Out
  5883  004D' 0C03'              	rrf	_lcd+3,w
  5884  004E' 0081'              	movwf	??_LCD_Out+1
  5885  004F' 0C81'              	rrf	??_LCD_Out+1,f
  5886  0050' 0C01'              	rrf	??_LCD_Out+1,w
  5887  0051' 3907               	andlw	7
  5888  0052' 3E01               	addlw	1
  5889  0053' 2856'              	goto	u2074
  5890  0054'                    u2075:	
  5891  0054' 1003               	clrc
  5892  0055' 0D80'              	rlf	??_LCD_Out,f
  5893  0056'                    u2074:	
  5894  0056' 3EFF               	addlw	-1
  5895  0057' 1D03               	skipz
  5896  0058' 2854'              	goto	u2075
  5897  0059' 0800'              	movf	??_LCD_Out,w
  5898  005A' 3AFF               	xorlw	255
  5899  005B' 0082'              	movwf	??_LCD_Out+2
  5900  005C' 0800'              	movf	_lcd,w
  5901  005D' 0084               	movwf	4
  5902  005E' 1783               	bsf	3,7
  5903  005F' 1C01'              	btfss	_lcd+1,0
  5904  0060' 1383               	bcf	3,7
  5905  0061' 0802'              	movf	??_LCD_Out+2,w
  5906  0062' 0580               	andwf	0,f
  5907  0063'                    l1776:	
  5908                           
  5909                           ;lcd.c: 34:     if ( c & 4 ) {
  5910  0063' 1D03'              	btfss	LCD_Out@c,2
  5911  0064' 287A'              	goto	l1780
  5912                           
  5913                           ;lcd.c: 35:         *(lcd.PORT) |= 1 << lcd.D6;
  5914  0065' 3001               	movlw	1
  5915  0066' 0080'              	movwf	??_LCD_Out
  5916  0067' 0804'              	movf	_lcd+4,w
  5917  0068' 3907               	andlw	7
  5918  0069' 3E01               	addlw	1
  5919  006A' 286D'              	goto	u2094
  5920  006B'                    u2095:	
  5921  006B' 1003               	clrc
  5922  006C' 0D80'              	rlf	??_LCD_Out,f
  5923  006D'                    u2094:	
  5924  006D' 3EFF               	addlw	-1
  5925  006E' 1D03               	skipz
  5926  006F' 286B'              	goto	u2095
  5927  0070' 0800'              	movf	??_LCD_Out,w
  5928  0071' 0081'              	movwf	??_LCD_Out+1
  5929  0072' 0800'              	movf	_lcd,w
  5930  0073' 0084               	movwf	4
  5931  0074' 1783               	bsf	3,7
  5932  0075' 1C01'              	btfss	_lcd+1,0
  5933  0076' 1383               	bcf	3,7
  5934  0077' 0801'              	movf	??_LCD_Out+1,w
  5935  0078' 0480               	iorwf	0,f
  5936                           
  5937                           ;lcd.c: 36:     }
  5938  0079' 288F'              	goto	l1782
  5939  007A'                    l1780:	
  5940                           
  5941                           ;lcd.c: 38:         *(lcd.PORT) &= ~(1 << lcd.D6);
  5942  007A' 3001               	movlw	1
  5943  007B' 0080'              	movwf	??_LCD_Out
  5944  007C' 0804'              	movf	_lcd+4,w
  5945  007D' 3907               	andlw	7
  5946  007E' 3E01               	addlw	1
  5947  007F' 2882'              	goto	u2104
  5948  0080'                    u2105:	
  5949  0080' 1003               	clrc
  5950  0081' 0D80'              	rlf	??_LCD_Out,f
  5951  0082'                    u2104:	
  5952  0082' 3EFF               	addlw	-1
  5953  0083' 1D03               	skipz
  5954  0084' 2880'              	goto	u2105
  5955  0085' 0800'              	movf	??_LCD_Out,w
  5956  0086' 3AFF               	xorlw	255
  5957  0087' 0081'              	movwf	??_LCD_Out+1
  5958  0088' 0800'              	movf	_lcd,w
  5959  0089' 0084               	movwf	4
  5960  008A' 1783               	bsf	3,7
  5961  008B' 1C01'              	btfss	_lcd+1,0
  5962  008C' 1383               	bcf	3,7
  5963  008D' 0801'              	movf	??_LCD_Out+1,w
  5964  008E' 0580               	andwf	0,f
  5965  008F'                    l1782:	
  5966                           
  5967                           ;lcd.c: 41:     if ( c & 8 ) {
  5968  008F' 1D83'              	btfss	LCD_Out@c,3
  5969  0090' 28A9'              	goto	l1786
  5970                           
  5971                           ;lcd.c: 42:          *(lcd.PORT) |= 1 << lcd.D7;
  5972  0091' 3001               	movlw	1
  5973  0092' 0080'              	movwf	??_LCD_Out
  5974  0093' 0C04'              	rrf	_lcd+4,w
  5975  0094' 0081'              	movwf	??_LCD_Out+1
  5976  0095' 0C81'              	rrf	??_LCD_Out+1,f
  5977  0096' 0C01'              	rrf	??_LCD_Out+1,w
  5978  0097' 3907               	andlw	7
  5979  0098' 3E01               	addlw	1
  5980  0099' 289C'              	goto	u2124
  5981  009A'                    u2125:	
  5982  009A' 1003               	clrc
  5983  009B' 0D80'              	rlf	??_LCD_Out,f
  5984  009C'                    u2124:	
  5985  009C' 3EFF               	addlw	-1
  5986  009D' 1D03               	skipz
  5987  009E' 289A'              	goto	u2125
  5988  009F' 0800'              	movf	??_LCD_Out,w
  5989  00A0' 0082'              	movwf	??_LCD_Out+2
  5990  00A1' 0800'              	movf	_lcd,w
  5991  00A2' 0084               	movwf	4
  5992  00A3' 1783               	bsf	3,7
  5993  00A4' 1C01'              	btfss	_lcd+1,0
  5994  00A5' 1383               	bcf	3,7
  5995  00A6' 0802'              	movf	??_LCD_Out+2,w
  5996  00A7' 0480               	iorwf	0,f
  5997                           
  5998                           ;lcd.c: 43:     }
  5999  00A8' 0008               	return
  6000  00A9'                    l1786:	
  6001                           
  6002                           ;lcd.c: 45:          *(lcd.PORT) &= ~(1 << lcd.D7);
  6003  00A9' 3001               	movlw	1
  6004  00AA' 0080'              	movwf	??_LCD_Out
  6005  00AB' 0C04'              	rrf	_lcd+4,w
  6006  00AC' 0081'              	movwf	??_LCD_Out+1
  6007  00AD' 0C81'              	rrf	??_LCD_Out+1,f
  6008  00AE' 0C01'              	rrf	??_LCD_Out+1,w
  6009  00AF' 3907               	andlw	7
  6010  00B0' 3E01               	addlw	1
  6011  00B1' 28B4'              	goto	u2134
  6012  00B2'                    u2135:	
  6013  00B2' 1003               	clrc
  6014  00B3' 0D80'              	rlf	??_LCD_Out,f
  6015  00B4'                    u2134:	
  6016  00B4' 3EFF               	addlw	-1
  6017  00B5' 1D03               	skipz
  6018  00B6' 28B2'              	goto	u2135
  6019  00B7' 0800'              	movf	??_LCD_Out,w
  6020  00B8' 3AFF               	xorlw	255
  6021  00B9' 0082'              	movwf	??_LCD_Out+2
  6022  00BA' 0800'              	movf	_lcd,w
  6023  00BB' 0084               	movwf	4
  6024  00BC' 1783               	bsf	3,7
  6025  00BD' 1C01'              	btfss	_lcd+1,0
  6026  00BE' 1383               	bcf	3,7
  6027  00BF' 0802'              	movf	??_LCD_Out+2,w
  6028  00C0' 0580               	andwf	0,f
  6029  00C1' 0008               	return
  6030  00C2'                    __end_of_LCD_Out:	
  6031  007E                     btemp	set	126	;btemp
  6032  007E                     wtemp0	set	126


Data Sizes:
    Strings     24
    Constant    40
    Data        5
    BSS         22
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     75      80
    BANK1            80      0      22
    BANK2            48      0       0

Pointer List with Targets:

    ftoa@status	PTR int  size(1) Largest target is 2
		 -> main@status(BANK0[2]), 

    utoa@buf	PTR unsigned char  size(1) Largest target is 3
		 -> main@aux(BANK0[3]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 3
		 -> main@aux(BANK0[3]), 

    itoa@buf	PTR unsigned char  size(1) Largest target is 3
		 -> main@aux(BANK0[3]), 

    itoa@cp	PTR unsigned char  size(1) Largest target is 3
		 -> main@aux(BANK0[3]), 

    ftoa@cp	PTR unsigned char  size(1) Largest target is 17
		 -> ftoa@buf(BANK1[17]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 11
		 -> STR_2(CODE[11]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 17
		 -> ftoa@buf(BANK1[17]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    LCD_putrs@a	PTR const unsigned char  size(1) Largest target is 13
		 -> STR_1(CODE[13]), 

    LCD_puts@a	PTR unsigned char  size(1) Largest target is 17
		 -> ftoa@buf(BANK1[17]), main@aux(BANK0[3]), 

    display.PORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR0[1]), 

    lcd.PORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR0[1]), 

    sp__ftoa	PTR unsigned char  size(1) Largest target is 17
		 -> ftoa@buf(BANK1[17]), 

    main@text	PTR unsigned char  size(1) Largest target is 17
		 -> ftoa@buf(BANK1[17]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 3
		 -> main@aux(BANK0[3]), 

    lcd.PORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR0[1]), 

    S22$PORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR0[1]), 

    F701.PORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR0[1]), 


Critical Paths under _main in COMMON

    _main->_LCD_Init
    _main->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _ftoa->___flmul
    _ftoa->___xxtofl
    _sprintf->___lldiv
    ___llmod->___lldiv
    ___fltol->___flmul
    ___flsub->___xxtofl
    ___flmul->__Umul8_16
    _LCD_puts->_LCD_putc
    _LCD_putrs->_LCD_putc
    _LCD_putc->_LCD_Out
    _LCD_Init->_LCD_Write
    _LCD_Write->_LCD_Out

Critical Paths under _main in BANK0

    _main->_ftoa
    _itoa->_utoa
    _ftoa->_sprintf
    _sprintf->___llmod
    ___fltol->___flmul
    ___flsub->___fladd

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                44    44      0   11160
                                             51 BANK0     24    24      0
                           _LCD_Init
                          _LCD_Write
                          _LCD_putrs
                           _LCD_puts
                               _ftoa
                               _itoa
 ---------------------------------------------------------------------------------
 (1) _itoa                                                 7     3      4    1612
                                             13 COMMON     1     1      0
                                              4 BANK0      6     2      4
                               _utoa
 ---------------------------------------------------------------------------------
 (2) _utoa                                                 9     5      4    1264
                                              8 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     311
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     466
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _ftoa                                                15    10      5    8471
                                             36 BANK0     15    10      5
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             34    25      9    2109
                                             10 BANK0     26    17      9
                            ___lldiv
                            ___llmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     396
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___llmod                                             10     2      8     311
                                              0 BANK0     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     398
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     381
                                             21 BANK0     11     7      4
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2333
                                              8 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2136
                                              0 COMMON    12     4      8
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    2417
                                              9 COMMON     5     5      0
                                              0 BANK0     21    13      8
                          __Umul8_16
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     334
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (1) _LCD_puts                                             4     4      0     288
                                              8 COMMON     4     4      0
                           _LCD_putc
 ---------------------------------------------------------------------------------
 (1) _LCD_putrs                                            3     3      0     255
                                              8 COMMON     3     3      0
                           _LCD_putc
 ---------------------------------------------------------------------------------
 (2) _LCD_putc                                             4     4      0     132
                                              4 COMMON     4     4      0
                            _LCD_Out
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             8     3      5     256
                                              8 COMMON     6     1      5
                                              0 BANK0      2     2      0
                          _LCD_Write
 ---------------------------------------------------------------------------------
 (1) _LCD_Write                                            4     4      0     110
                                              4 COMMON     4     4      0
                            _LCD_Out
 ---------------------------------------------------------------------------------
 (3) _LCD_Out                                              4     4      0      88
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Init
     _LCD_Write
       _LCD_Out
   _LCD_Write
     _LCD_Out
   _LCD_putrs
     _LCD_putc
       _LCD_Out
   _LCD_puts
     _LCD_putc
       _LCD_Out
   _ftoa
     ___flge
     ___flmul
       __Umul8_16
     ___flneg
     ___flsub
       ___fladd
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
     ___xxtofl
     _sprintf
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___wmul
       _isdigit
   _itoa
     _utoa
       ___lwdiv
       ___lwmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               30      0       0       9        0.0%
BITBANK2            30      0       0       8        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      16       7       27.5%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     4B      50       3      100.0%
BITBANK0            50      0       0       5        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      74      10        0.0%
ABS                  0      0      74       4        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA              80      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sat May 18 12:22:38 2019

                      pc 0002                       fsr 0004      ___wmul@multiplicand 0002  
    __Umul8_16@word_mpld 0006                      l253 0095                      l264 013F  
                    l256 00B7                      l453 001A                      l614 0232  
                    l606 0218                      l279 000A                      l456 0080  
                    l472 004F                      l720 007D                      l712 005D  
                    l706 001D                      l572 0052                      l719 0073  
                    l752 0012                      l680 02E4                      l576 00ED  
                    l593 01AC                      l578 00C9                      l746 004A  
        LCD_Init@display 0008                      _lcd 0000                      fsr0 0004  
                    indf 0000             ___flmul@aexp 000D             ___flmul@bexp 000E  
           ___flmul@sign 0008             ___flmul@temp 0013             ___flmul@prod 000F  
        __end_of_LCD_Out 00C2             ___fltol@exp1 001F                     l2010 00FB  
                   l2002 00E9                     l2020 0120                     l2104 000A  
                   l2018 011E                     l2202 00ED                     l2060 01D6  
                   l2028 0132                     l2220 015A                     l2212 0129  
                   l2054 01CF                     l2046 01BE                     l2038 019E  
                   l2062 01D8                     l2072 01E3                     l2208 0119  
                   l2330 001D                     l2090 0228                     l2306 005E  
                   l2234 01B2                     l2218 0156                     l2154 0030  
                   l2162 005A                     l2252 0034                     l2420 026A  
                   l2412 0236                     l2332 001F                     l2068 01E1  
                   l2228 0170                     l2180 009C                     l2172 0068  
                   l2148 0023                     l2236 0007                     l2414 0253  
                   l2350 0044                     l2334 0027                     l2094 022C  
                   l2238 01BF                     l2174 0092                     l2502 0007  
                   l2256 005A                     l2424 026C                     l2360 005A  
                   l2352 004C                     l2280 0014                     l2176 0097  
                   l2512 0024                     l2434 029E                     l1802 0002  
                   l2186 00C9                     l2604 0003                     l2444 02CD  
                   l2348 0042                     l2276 000B                     l1820 0010  
                   l2196 00EB                     l2700 00AC                     l2438 02B4  
                   l2462 0015                     l1830 0048                     l1822 0020  
                   l1902 002D                     l2544 0032                     l2536 001F  
                   l1920 001D                     l2296 003B                     l2472 0030  
                   l2616 0039                     l1770 0031                     l2538 002F  
                   l2298 004B                     l2482 0071                     l2474 0042  
                   l1834 0055                     l1850 0038                     l1780 007A  
                   l1924 0020                     l2484 0062                     l2468 002C  
                   l1844 000A                     l1782 008F                     l1774 004B  
                   l2582 0003                     l1926 0028                     l1846 001A  
                   l1854 0045                     l1870 0016                     l1776 0063  
                   l1768 001A                     l1944 0047                     l2496 009A  
                   l1880 0037                     l1786 00A9                     l1954 005C  
                   l2594 0015                     l2658 0043                     l1948 004A  
                   l1796 000C                     l1876 002C                     l1868 0008  
                   l1892 0006                     l1894 0014                     l1992 00D6  
                   l1984 0098                     l1994 00D8                     l1898 0022  
                   STR_1 002E                     STR_2 003B                     u2104 0082  
                   u2105 0080                     u2034 000D                     u2035 000B  
                   u2124 009C                     u2044 0024                     u3004 002F  
                   u2125 009A                     u2045 0022                     u3005 002D  
                   u2134 00B4                     u3014 004D                     u2135 00B2  
                   u3015 004B                     u2215 0014                     u2064 003E  
                   u3024 006A                     u2065 003C                     u3025 0068  
                   u2305 0028                     u2074 0056                     u3034 0088  
                   u2075 0054                     u3035 0086                     u2235 0022  
                   u2315 0039                     u2245 0037                     u3205 017B  
                   u3125 00F0                     u2094 006D                     u2095 006B  
                   u2255 0049                     u2175 000B                     u3135 010F  
                   u2415 0009                     u2185 0012                     u2345 000B  
                   u3155 0120                     u2435 001A                     u3261 0045  
                   u2701 015F                     u2605 00DE                     u3325 001D  
                   u2285 000E                     u3165 0134                     u2365 0017  
                   u2445 0023                     u4037 007F                     u3262 0046  
                   u2710 0173                     u2702 0160                     u4047 003D  
                   u3263 004B                     u2711 0174                     u2703 0165  
                   u3175 0148                     u2375 0023                     u3264 004C  
                   u2712 0179                     u2704 0166                     u2560 00B6  
                   u4057 0078                     u3281 006B                     u3265 0051  
                   u2713 017A                     u2705 016B                     u2385 002D  
                   u3282 006C                     u3266 0052                     u2706 016C  
                   u2570 00B7                     u4067 0038                     u3283 0071  
                   u2555 00AC                     u3355 003C                     u3284 0072  
                   u4077 0045                     u3285 0077                     u3605 01DF  
                   u3286 0078                     u4087 0052                     u3535 00FE  
                   u4097 0037                     u3625 0204                     u3385 0054  
                   u2755 01C2                     u3645 0222                     u3565 0153  
                   u2693 0144                     u2685 0126                     u2935 0013  
                   u3655 023A                     u2855 0202                     u3815 0039  
                   u3745 0289                     u2954 000B                     u2955 0009  
                   u3755 02A7                     u3675 0245                     u3835 0055  
                   u2964 0027                     u2965 0025                     u3765 02BF  
                   u2974 0049                     u2975 0047                     u3855 006A  
                   u2984 000B                     u2985 0009                     u3955 0019  
                   u2995 001A                     u3965 0025                     u3975 002D  
                   u3895 0085                     u3985 006D                     _main 0000  
                   _ftoa 0000                     _itoa 0000                     btemp 007E  
                   _utoa 0000                     start 0000*      __size_of_LCD_Write 0057  
            LCD_Init@cmd 000D       __size_of_LCD_putrs 0016         __end_of_LCD_Init 007D  
       __end_of_LCD_putc 0096         __end_of_LCD_puts 001A            ___fltol@sign1 001E  
        __end_of___fladd 023F                    ?_main 0000                    ?_ftoa 0024  
                  ?_itoa 0004          __end_of___flneg 0009          __end_of___flmul 02F1  
        __end_of___flsub 0020          __end_of___fltol 006D          __end_of___lldiv 005E  
                  ?_utoa 0008          __end_of___llmod 004E          __end_of___lwdiv 003C  
        __end_of___lwmod 0032                    _PORTA 0005                    _PORTB 0006  
                  _TRISA 0085                    _TRISB 0086          __end_of_dpowers 002E  
        __end_of_isdigit 000E                    main@a 0048                    ftoa@f 0024  
                  ftoa@l 002E                    pclath 000A                    utoa@c 0002  
                  utoa@v 0000                    status 0003                    wtemp0 007E  
        __end_of_sprintf 01C4          __initialization 0000             __end_of_main 0087  
           __end_of_ftoa 00B3             __end_of_itoa 0020             __end_of_utoa 0060  
                 ??_main 0033                   ??_ftoa 0029                   ??_itoa 000D  
                 ??_utoa 000C                ??_LCD_Out 0000        __end_of_LCD_Write 0057  
      __end_of_LCD_putrs 0016         ___llmod@dividend 0004         __end_of___xxtofl 00A3  
                 ___flge 0000                ??___fladd 0000                   ___wmul 0000  
              ??___flneg 0004                ??___flmul 0009                ??___flsub 000E  
              ??___fltol 0019                ??___lldiv 0008                ??___llmod 0008  
              ??___lwdiv 0004                ??___lwmod 0004                   ftoa@cp 0032  
              ??_isdigit 0000       __size_of__Umul8_16 0023                ??_sprintf 0013  
             ___flge@ff1 0000               ___flge@ff2 0004             ___xxtofl@arg 000A  
           ___xxtofl@exp 0009             ___xxtofl@val 0000  __end_of__initialization 0015  
              ?_LCD_Init 0008               ___flneg@f1 0000                ?_LCD_putc 0000  
              ?_LCD_puts 0000               ___fltol@f1 0015           __pcstackCOMMON 0000  
           __pidataBANK1 0000                LCD_putc@c 0007                LCD_puts@a 000B  
              LCD_puts@i 0009           _OPTION_REGbits 0081             sprintf@width 001F  
             __pbssBANK0 0000               __pbssBANK1 0000               ??_LCD_Init 0000  
             ??_LCD_putc 0004               ??_LCD_puts 0008        __end_of__Umul8_16 0023  
             __pmaintext 0000                  ?___flge 0000                  ?___wmul 0000  
                _LCD_Out 0000                ?___xxtofl 0000               __stringtab 0000  
        __size_of___flge 0093                  ___fladd 0000                  ___flneg 0000  
                ___flmul 0000                  ___flsub 0000                  ___fltol 0000  
                ___lldiv 0000          __size_of___wmul 0021                  ___llmod 0000  
                ___lwdiv 0000                  ___lwmod 0000                  __ptext1 0000  
                __ptext2 0000                  __ptext3 0000                  __ptext4 0000  
                __ptext5 0000                  __ptext6 0000                  __ptext7 0000  
                __ptext8 0000                  __ptext9 0000                  _dpowers 0006  
                _isdigit 0000               ??___xxtofl 0004                  main@lcd 003C  
                main@aux 0045                  _sprintf 0000                  clrloop0 0001  
              _LCD_Write 0000     end_of_initialization 0015                  ftoa@buf 0000  
                ftoa@rem 002A                _LCD_putrs 0000                  itoa@buf 0009  
                itoa@val 0004          ___lldiv@divisor 0000          ___lldiv@counter 000D  
                utoa@buf 0003                  utoa@val 0008              ___fladd@grs 000B  
          ___xxtofl@sign 0008               ?_LCD_Write 0000               ?_LCD_putrs 0000  
            ___flmul@grs 0009        __size_of_LCD_Init 007D               main@status 003A  
      __size_of_LCD_putc 0096        __size_of_LCD_puts 001A           __end_of___flge 0093  
         __end_of___wmul 0021               LCD_Write@c 0007      start_initialization 0000  
             ftoa@status 0028               LCD_putrs@a 000A               LCD_putrs@i 0008  
        ___llmod@divisor 0000          ___llmod@counter 0009                 ??___flge 0008  
               ??___wmul 0004                __Umul8_16 0000              __pdataBANK1 0000  
              ___fladd@a 0004                ___fladd@b 0000                 ?_LCD_Out 0000  
              ___flmul@a 0004                ___flmul@b 0000                ___flsub@a 0008  
              ___flsub@b 000C                ___latbits 0000            __pcstackBANK0 0000  
               LCD_Out@c 0003        __size_of___xxtofl 00A3              ??_LCD_Write 0004  
            ??_LCD_putrs 0008              sprintf@flag 0018              sprintf@prec 0021  
       ___lwdiv@dividend 0002                 ?___fladd 0000                 ?___flneg 0000  
               ?___flmul 0000                 ?___flsub 0008                 ?___fltol 0015  
               ?___lldiv 0000                 ?___llmod 0000               ?__Umul8_16 0000  
               ?___lwdiv 0000                 ?___lwmod 0000                __pstrings 0000  
               ?_isdigit 0000         ___lwdiv@quotient 0005                 ?_sprintf 000A  
               _LCD_Init 0000           ___wmul@product 0004                clear_ram0 0000  
               _LCD_putc 0000                 _LCD_puts 0000              __stringbase 0005  
      ___wmul@multiplier 0000                main@value 0041         __size_of_LCD_Out 00C2  
            ??__Umul8_16 0002         __size_of___fladd 023F         __size_of___flneg 0009  
       __size_of___flmul 02F1         __size_of___flsub 0020         __size_of___fltol 006D  
       __size_of___lldiv 005E         __size_of___llmod 004E         __size_of___lwdiv 003C  
       __size_of___lwmod 0032       __end_of__stringtab 0006              _isdigit$654 0000  
             sprintf@val 001A                 ___xxtofl 0000         __size_of_isdigit 000E  
        ___lwdiv@divisor 0000          ___lwdiv@counter 0007                 __ptext10 0000  
               __ptext11 0000                 __ptext20 0000                 __ptext12 0000  
               __ptext21 0000                 __ptext13 0000                 __ptext22 0000  
               __ptext14 0000                 __ptext23 0000                 __ptext15 0000  
               __ptext24 0000                 __ptext16 0000                 __ptext17 0000  
               __ptext18 0000                 __ptext19 0000         __size_of_sprintf 01C4  
          __size_of_main 0087            __size_of_ftoa 00B3            __size_of_itoa 0020  
          __size_of_utoa 0060                 main@F701 0000                 main@text 004A  
               itoa@base 0006                 isdigit@c 0001                sprintf@ap 0019  
              sprintf@sp 001E         ___lwmod@dividend 0002         ___lldiv@dividend 0004  
              stringcode 0000                 utoa@base 000A   __Umul8_16@multiplicand 0000  
               sprintf@c 0023                 sprintf@f 000A         ___lldiv@quotient 0009  
        ___lwmod@divisor 0000          ___lwmod@counter 0005                 stringdir 0000  
               stringtab 0000            ___fladd@signs 0008             ___fladd@aexp 0009  
           ___fladd@bexp 000A     __Umul8_16@multiplier 0008        __Umul8_16@product 0004  
